<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to Bison&#39;s website on Welcome to Bison&#39;s website</title>
    <link>https://growing-bison.github.io/</link>
    <description>Recent content in Welcome to Bison&#39;s website on Welcome to Bison&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>反欺诈子研究-特征衍生过程</title>
      <link>https://growing-bison.github.io/post/%E5%8F%8D%E6%AC%BA%E8%AF%88%E5%AD%90%E7%A0%94%E7%A9%B6-%E7%89%B9%E5%BE%81%E8%A1%8D%E7%94%9F%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Thu, 04 Oct 2018 21:26:04 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/%E5%8F%8D%E6%AC%BA%E8%AF%88%E5%AD%90%E7%A0%94%E7%A9%B6-%E7%89%B9%E5%BE%81%E8%A1%8D%E7%94%9F%E8%BF%87%E7%A8%8B/</guid>
      <description>

&lt;p&gt;&lt;h1&gt;Table of Contents&lt;span class=&#34;tocSkip&#34;&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div class=&#34;toc&#34;&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#衍生特征分析过程&#34; data-toc-modified-id=&#34;衍生特征分析过程-1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1&amp;nbsp;&amp;nbsp;&lt;/span&gt;衍生特征分析过程&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#数据读取&#34; data-toc-modified-id=&#34;数据读取-1.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;数据读取&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#定义处理单列的数据&#34; data-toc-modified-id=&#34;定义处理单列的数据-1.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;定义处理单列的数据&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#单列数据的观察&#34; data-toc-modified-id=&#34;单列数据的观察-1.2.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;单列数据的观察&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#家庭结构有关&#34; data-toc-modified-id=&#34;家庭结构有关-1.2.1.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.1.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;家庭结构有关&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#社交账号有关&#34; data-toc-modified-id=&#34;社交账号有关-1.2.1.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.1.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;社交账号有关&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#购物数据（京东账号jd_account、淘宝账号alipay_account）&#34; data-toc-modified-id=&#34;购物数据（京东账号jd_account、淘宝账号alipay_account）-1.2.1.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.1.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;购物数据（京东账号jd_account、淘宝账号alipay_account）&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#有关收入（月收入month_income、家庭支出support_pre_pay）&#34; data-toc-modified-id=&#34;有关收入（月收入month_income、家庭支出support_pre_pay）-1.2.1.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.1.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;有关收入（月收入month_income、家庭支出support_pre_pay）&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#处理的基本函数&#34; data-toc-modified-id=&#34;处理的基本函数-1.2.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;处理的基本函数&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#目标变量处理（逾期数cd）&#34; data-toc-modified-id=&#34;目标变量处理（逾期数cd）-1.2.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;目标变量处理（逾期数cd）&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#组合-微信、微博、qq账户数量：社交数量shejiao_num&#34; data-toc-modified-id=&#34;组合-微信、微博、qq账户数量：社交数量shejiao_num-1.2.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;组合-微信、微博、qq账户数量：社交数量shejiao_num&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#组合-京东账号、淘宝账号：购物账号数量gouwu_num&#34; data-toc-modified-id=&#34;组合-京东账号、淘宝账号：购物账号数量gouwu_num-1.2.5&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.5&amp;nbsp;&amp;nbsp;&lt;/span&gt;组合-京东账号、淘宝账号：购物账号数量gouwu_num&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#组合-marriage、is_child、child_sum、support_pre_count：家庭结构hunyin_cata&#34; data-toc-modified-id=&#34;组合-marriage、is_child、child_sum、support_pre_count：家庭结构hunyin_cata-1.2.6&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.6&amp;nbsp;&amp;nbsp;&lt;/span&gt;组合-marriage、is_child、child_sum、support_pre_count：家庭结构hunyin_cata&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#单列-月收入数据：收入分级monthincome_bins&#34; data-toc-modified-id=&#34;单列-月收入数据：收入分级monthincome_bins-1.2.7&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.7&amp;nbsp;&amp;nbsp;&lt;/span&gt;单列-月收入数据：收入分级monthincome_bins&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#组合-月收入、家庭支出：家庭支出比重zhichu_ratio&#34; data-toc-modified-id=&#34;组合-月收入、家庭支出：家庭支出比重zhichu_ratio-1.2.8&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.8&amp;nbsp;&amp;nbsp;&lt;/span&gt;组合-月收入、家庭支出：家庭支出比重zhichu_ratio&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#zhichu_ratio生成和分布情况观察&#34; data-toc-modified-id=&#34;zhichu_ratio生成和分布情况观察-1.2.8.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.8.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;zhichu_ratio生成和分布情况观察&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#尝试（log变换）&#34; data-toc-modified-id=&#34;尝试（log变换）-1.2.8.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.8.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;尝试（log变换）&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#zhichu_ratio的衍生特征——zhichu_ratio_addcata&#34; data-toc-modified-id=&#34;zhichu_ratio的衍生特征——zhichu_ratio_addcata-1.2.8.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.2.8.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;zhichu_ratio的衍生特征——zhichu_ratio_addcata&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#变量重要性判别&#34; data-toc-modified-id=&#34;变量重要性判别-1.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;变量重要性判别&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#从统计相关的角度分析单变量的影响&#34; data-toc-modified-id=&#34;从统计相关的角度分析单变量的影响-1.3.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;从统计相关的角度分析单变量的影响&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#社交和购物数据视为连续—离散&#34; data-toc-modified-id=&#34;社交和购物数据视为连续—离散-1.3.1.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.1.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;社交和购物数据视为连续—离散&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#社交和购物数据视为离散—离散&#34; data-toc-modified-id=&#34;社交和购物数据视为离散—离散-1.3.1.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.1.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;社交和购物数据视为离散—离散&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#家庭支出比重（zhichu_ratio）的连续—离散&#34; data-toc-modified-id=&#34;家庭支出比重（zhichu_ratio）的连续—离散-1.3.1.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.1.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;家庭支出比重（zhichu_ratio）的连续—离散&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#从多变量结合角度&#34; data-toc-modified-id=&#34;从多变量结合角度-1.3.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;从多变量结合角度&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#离散—离散&#34; data-toc-modified-id=&#34;离散—离散-1.3.2.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.2.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;离散—离散&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#采用高级统计方法识别特征效用&#34; data-toc-modified-id=&#34;采用高级统计方法识别特征效用-1.3.2.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.2.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;采用高级统计方法识别特征效用&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#结论&#34; data-toc-modified-id=&#34;结论-1.3.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1.3.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;结论&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;衍生特征分析过程&#34;&gt;衍生特征分析过程&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
import datetime
import xgboost as xgb
import re
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib notebook

plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;]   # show Chinese in chart


pd.set_option(&#39;display.max_columns&#39;, 40)  # 显示隐藏列

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据读取&#34;&gt;数据读取&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;path2 = r&#39;/home/hadoop/jack_xxx/xianxia_client_2.csv&#39;
dataset2 = pd.read_csv(path2, sep=&#39;,&#39;, encoding=&#39;utf-8&#39;, index_col=[0])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\numpy\lib\arraysetops.py:472: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  mask |= (ar1 == a)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.drop_duplicates(subset=[&#39;intopieces_id&#39;], inplace=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.tail()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义处理单列的数据&#34;&gt;定义处理单列的数据&lt;/h3&gt;

&lt;h4 id=&#34;单列数据的观察&#34;&gt;单列数据的观察&lt;/h4&gt;

&lt;h5 id=&#34;家庭结构有关&#34;&gt;家庭结构有关&lt;/h5&gt;

&lt;h6 id=&#34;child-sum&#34;&gt;child_sum&lt;/h6&gt;

&lt;blockquote&gt;
&lt;p&gt;child_sum数据出现的值,
[  0.,   2.,   1.,   3.,   4.,  nan,   5.,   8.,  62.,   6.,   7.,
11.,  68., 100.,  22.,  15.,  12.,  25., 113.,  20.,  10.,  41.,
33.,  14.,   9.,  21.,  24.,  23.],需预先对该列处理&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby(&#39;child_sum&#39;).count()[[&#39;intopieces_id&#39;]].T
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;child_sum&lt;/th&gt;
      &lt;th&gt;0.0&lt;/th&gt;
      &lt;th&gt;1.0&lt;/th&gt;
      &lt;th&gt;2.0&lt;/th&gt;
      &lt;th&gt;3.0&lt;/th&gt;
      &lt;th&gt;4.0&lt;/th&gt;
      &lt;th&gt;5.0&lt;/th&gt;
      &lt;th&gt;6.0&lt;/th&gt;
      &lt;th&gt;7.0&lt;/th&gt;
      &lt;th&gt;8.0&lt;/th&gt;
      &lt;th&gt;9.0&lt;/th&gt;
      &lt;th&gt;10.0&lt;/th&gt;
      &lt;th&gt;11.0&lt;/th&gt;
      &lt;th&gt;12.0&lt;/th&gt;
      &lt;th&gt;14.0&lt;/th&gt;
      &lt;th&gt;15.0&lt;/th&gt;
      &lt;th&gt;20.0&lt;/th&gt;
      &lt;th&gt;21.0&lt;/th&gt;
      &lt;th&gt;22.0&lt;/th&gt;
      &lt;th&gt;23.0&lt;/th&gt;
      &lt;th&gt;24.0&lt;/th&gt;
      &lt;th&gt;25.0&lt;/th&gt;
      &lt;th&gt;33.0&lt;/th&gt;
      &lt;th&gt;41.0&lt;/th&gt;
      &lt;th&gt;62.0&lt;/th&gt;
      &lt;th&gt;68.0&lt;/th&gt;
      &lt;th&gt;100.0&lt;/th&gt;
      &lt;th&gt;113.0&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;intopieces_id&lt;/th&gt;
      &lt;td&gt;323802&lt;/td&gt;
      &lt;td&gt;633416&lt;/td&gt;
      &lt;td&gt;304946&lt;/td&gt;
      &lt;td&gt;40737&lt;/td&gt;
      &lt;td&gt;5433&lt;/td&gt;
      &lt;td&gt;789&lt;/td&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig1,ax1 = plt.subplots(1,1)
ax1.get_xaxis().set_visible(False)   # Hide Ticks
# pd.plotting.table(ax1, dataset2.groupby(&#39;child_sum&#39;).count()[[&#39;intopieces_id&#39;]], loc=&#39;upper right&#39;,colWidths=[0.2,0.2,0.2])
pl11 = dataset2.groupby([&#39;child_sum&#39;]).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;, title=&#39;child_sum&#39;,table=True, ax=ax1,figsize=(10,10),fontsize=12)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_13_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;将child_sum&amp;gt;=5的部分视为异常数据，暂且先保留，在处理当中视为其它。&lt;/p&gt;

&lt;h6 id=&#34;marriage&#34;&gt;marriage&lt;/h6&gt;

&lt;p&gt;进件信息表中该字段的说明，婚姻状态0未婚1已婚2离异3丧偶。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;marriage&#39;]).count()[&#39;intopieces_id&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;marriage
0     65785
1    211796
2    937405
3    143062
4      7971
5      8866
Name: intopieces_id, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
fig2,ax2 = plt.subplots(1,1)
ax2.get_xaxis().set_visible(False)   # Hide Ticks
dataset2.groupby([&#39;marriage&#39;]).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;, title=&#39;婚姻状态&#39;,table=True, ax=ax2,figsize=(10,10),fontsize=12)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xa6b6518&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_17_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;对该字段，marriage&amp;gt;=4的部分视为异常，暂且保留，归为其它类别。&lt;/p&gt;

&lt;h6 id=&#34;is-child&#34;&gt;is_child&lt;/h6&gt;

&lt;p&gt;进件信息表对该字段说明，有无子女/1.有2.无。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;is_child&#39;]).count()[&#39;intopieces_id&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;is_child
0    1372175
1       2071
2        639
Name: intopieces_id, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# fig1 = plt.figure()
# fig1.add_subplot(111)
fig3,ax3 = plt.subplots(1,1)
ax3.get_xaxis().set_visible(False)   # Hide Ticks

pl2 = dataset2.groupby([&#39;is_child&#39;]).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;, title=&#39;子女（有无）&#39;,table=True, ax=ax3, figsize=(8,8))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_21_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;对该字段的观察，字段说明可能有问题，在这里理解应为0-有，1-无，2-其它。故这里的处理，将is_child&amp;gt;1视为其它。&lt;/p&gt;

&lt;h6 id=&#34;support-pre-count&#34;&gt;support_pre_count&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;support_pre_count&#39;]).count()[&#39;intopieces_id&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;support_pre_count
0      814769
1      398249
2      144316
3       15426
4        1766
5         253
6          43
7           4
9           1
10          3
11         10
12          1
14          2
15          1
16          1
20          3
21          1
22          3
25          1
36          2
41          1
127        29
Name: intopieces_id, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig4,ax4 = plt.subplots(1,1)
ax4.get_xaxis().set_visible(False)   # Hide Ticks

dataset2.groupby([&#39;support_pre_count&#39;]).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;, title=&#39;供养人数&#39;,table=True, ax=ax4, figsize=(10,10),fontsize=12)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xa73e2e8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_25_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这里看到供养人数有出现＞6的情况。这儿采用的处理方式，对support_pre_count＞6的部分视为异常，归为其它类别。&lt;/p&gt;

&lt;h6 id=&#34;处理方法结论&#34;&gt;处理方法结论&lt;/h6&gt;

&lt;p&gt;筛选该条件(support_pre_count &amp;lt;=6) &amp;amp; (is_child&amp;lt;2) &amp;amp; (marriage&amp;lt;4) &amp;amp; (child_sum&amp;lt;5)，在此基础上做家庭结构的划分；对于该条件之外的视为其它类别（归因于数据记录不规范、错误所带来的）&lt;/p&gt;

&lt;h5 id=&#34;社交账号有关&#34;&gt;社交账号有关&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([&#39;intopieces_id&#39;, &#39;cd&#39;, &#39;weixin&#39;, &#39;weibo&#39;, &#39;qq&#39;, &#39;marriage&#39;, &#39;is_child&#39;,
       &#39;support_pre_count&#39;, &#39;child_sum&#39;, &#39;alipay_account&#39;, &#39;jd_account&#39;,
       &#39;id_num&#39;, &#39;house_pay&#39;, &#39;support_pre_pay&#39;, &#39;month_income&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;weixin&#34;&gt;weixin&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;weixin&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;weixin&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
     &#39;无:&#39;,dataset2[(dataset2[&#39;weixin&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;])

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 1181935 
 非空: 192950 
 无: 2434
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[((dataset2[&#39;weixin&#39;]==&#39;nan&#39;)|(dataset2[&#39;weixin&#39;]==&#39;NULL&#39;)|(dataset2[&#39;weixin&#39;]==&#39;空&#39;)|(dataset2[&#39;weixin&#39;]==&#39;无&#39;))].count()[&#39;intopieces_id&#39;]


&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;2434
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;weibo&#34;&gt;weibo&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;weibo&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;weibo&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
     &#39;无:&#39;,dataset2[(dataset2[&#39;weibo&#39;]==u&#39;无&#39;)].count()[&#39;intopieces_id&#39;])

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 1369308 
 非空: 5577 
 无: 3908
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[((dataset2[&#39;weibo&#39;]==&#39;nan&#39;)|(dataset2[&#39;weibo&#39;]==&#39;NULL&#39;)|(dataset2[&#39;weibo&#39;]==&#39;空&#39;)|(dataset2[&#39;weibo&#39;]==&#39;无&#39;))].count()[&#39;intopieces_id&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;3908
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;qq&#34;&gt;qq&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;qq&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;qq&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
     &#39;无:&#39;,dataset2[(dataset2[&#39;qq&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;])

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 1284821 
 非空: 90064 
 无: 2611
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[((dataset2[&#39;qq&#39;]==&#39;nan&#39;)|(dataset2[&#39;qq&#39;]==&#39;NULL&#39;)|(dataset2[&#39;qq&#39;]==&#39;空&#39;)|(dataset2[&#39;qq&#39;]==&#39;无&#39;))].count()[&#39;intopieces_id&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;2611
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;处理方式&#34;&gt;处理方式&lt;/h6&gt;

&lt;p&gt;考虑到三个字段的缺失值比例较大，有几种处理方式：
1、保存原有的缺失(不推荐)
2、插补：选择多重插补法(最合适)&lt;/p&gt;

&lt;h5 id=&#34;购物数据-京东账号jd-account-淘宝账号alipay-account&#34;&gt;购物数据（京东账号jd_account、淘宝账号alipay_account）&lt;/h5&gt;

&lt;h6 id=&#34;jd-account&#34;&gt;jd_account&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;jd_account&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;jd_account&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
     &#39;无:&#39;,dataset2[(dataset2[&#39;jd_account&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;])


&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 1371477 
 非空: 3408 
 无: 1775
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[((dataset2[&#39;jd_account&#39;]==&#39;nan&#39;)|(dataset2[&#39;jd_account&#39;]==&#39;NULL&#39;)|(dataset2[&#39;jd_account&#39;]==&#39;空&#39;)|(dataset2[&#39;jd_account&#39;]==&#39;无&#39;))].count()[&#39;intopieces_id&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1775
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;alipay-account&#34;&gt;alipay_account&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([&#39;intopieces_id&#39;, &#39;cd&#39;, &#39;weixin&#39;, &#39;weibo&#39;, &#39;qq&#39;, &#39;marriage&#39;, &#39;is_child&#39;,
       &#39;support_pre_count&#39;, &#39;child_sum&#39;, &#39;alipay_account&#39;, &#39;jd_account&#39;,
       &#39;id_num&#39;, &#39;house_pay&#39;, &#39;support_pre_pay&#39;, &#39;month_income&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;alipay_account&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;alipay_account&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
     &#39;无:&#39;,dataset2[(dataset2[&#39;alipay_account&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;])

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 1363912 
 非空: 10973 
 无: 1369
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[((dataset2[&#39;alipay_account&#39;]==&#39;nan&#39;)|(dataset2[&#39;alipay_account&#39;]==&#39;NULL&#39;)|(dataset2[&#39;alipay_account&#39;]==&#39;空&#39;)|(dataset2[&#39;alipay_account&#39;]==&#39;无&#39;))].count()[&#39;intopieces_id&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1369
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;有关收入-月收入month-income-家庭支出support-pre-pay&#34;&gt;有关收入（月收入month_income、家庭支出support_pre_pay）&lt;/h5&gt;

&lt;h6 id=&#34;月收入month-income&#34;&gt;月收入month_income&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;month_income&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;month_income&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
#      &#39;无:&#39;,dataset2[(dataset2[&#39;month_income&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;]
     )

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 0 
 非空: 1374885 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[[&#39;month_income&#39;]].describe()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;month_income&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;1.374885e+06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;3.247747e+04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;1.201198e+06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;0.000000e+00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;4.500000e+03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;8.000000e+03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;2.000000e+04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;1.111111e+09&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig41 = plt.figure()
fig41.add_subplot(111)
dataset2[dataset2[&#39;month_income&#39;]&amp;gt;= 5000000].groupby(&#39;cd&#39;).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;,title=&#39;month_income&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xa80cc50&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_54_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig41 = plt.figure()
fig41.add_subplot(111)
dataset2[dataset2[&#39;month_income&#39;]&amp;lt;10000000].groupby(&#39;cd&#39;).count()[&#39;intopieces_id&#39;].plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xaef1cc0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_55_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig41 = plt.figure()
fig41.add_subplot(111)
plot1 = sns.boxplot(y=&#39;month_income&#39;,x=&#39;cd&#39;,data=dataset2, )
plot1.set(ylim=(0,100000))
plt.title(&#39;家庭月收入分布&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;家庭月收入分布&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_56_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h6 id=&#34;家庭支出support-pre-pay&#34;&gt;家庭支出support_pre_pay&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
print(&#39;空值:&#39;,dataset2[dataset2[&#39;support_pre_pay&#39;].isnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
      &#39;非空:&#39;,dataset2[dataset2[&#39;support_pre_pay&#39;].notnull()].count()[&#39;intopieces_id&#39;],&#39;\n&#39;,
#      &#39;无:&#39;,dataset2[(dataset2[&#39;month_income&#39;]==&#39;无&#39;)].count()[&#39;intopieces_id&#39;]
     )

# [Nn][Aa][Nn]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;空值: 0 
 非空: 1374885 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[[&#39;support_pre_pay&#39;]].describe()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;support_pre_pay&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;1.374885e+06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;5.408445e+03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;3.172173e+06&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;0.000000e+00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;0.000000e+00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;6.000000e+02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;1.000000e+03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;2.147484e+09&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig42 = plt.figure()
fig42.add_subplot(111)
plot1 = sns.boxplot(y=&#39;support_pre_pay&#39;,x=&#39;cd&#39;,data=dataset2)
plot1.set(ylim=(0,10000))
plt.title(&#39;家庭月支出分布&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;家庭月支出分布&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_60_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;处理的基本函数&#34;&gt;处理的基本函数&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[dataset2[&#39;child_sum&#39;].isnull()].head()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def one_feature(x):
    &#39;&#39;&#39;
    该函数用于处理单变量特征：社交账号、购物账号
    Args:
        x: string, 账号信息

    Returns:number, 打标签[0,1,10]

    &#39;&#39;&#39;
    x = str(x)
    r = &#39;\s|\.|\,|\:|\&amp;quot;|\&#39;|&#39;  # &#39;.&#39;, &#39;,&#39;,&#39; &#39;
    x = re.sub(r, &amp;quot;&amp;quot;, x)

    if x == u&#39;无&#39;:
        label = 0  # 0表示没有账号
    elif x == &#39;nan&#39;:
        label = 10  # 10表示空值标示
    else:
        label = 1  # 1标示有账号
    return label


def shejiao_func(x, y, z):
    &#39;&#39;&#39;
    组合-社交账户数据的处理

    Args:
        x: string, 微信账号
        y: string, 微博账号
        z: string, qq账号

    Returns: string, 打标签-社交账号类别[0,1,2,3,4,5,6,7,8,9]

    &#39;&#39;&#39;

    label_wx = one_feature(x)
    label_wb = one_feature(y)
    label_qq = one_feature(z)
    sum_num = label_wb + label_wx + label_qq

    if (sum_num &amp;lt;= 3) and (sum_num &amp;gt;= 0):
        label = str(sum_num)  # 正常计数

    elif sum_num == 11:
        label = str(4)  # 计数1+未登记1

    elif sum_num == 21:
        label = str(5)  # 计数1+未登记2

    elif sum_num == 12:
        label = str(6)  # 计数2+未登记1

    elif sum_num == 10:
        label = str(7)  # 计数0+未登记1

    elif sum_num == 20:
        label = str(8)  # 计数0+未登记2

    elif sum_num == 30:
        label = str(9)  # 全未登记

    else:
        label = str(10)  # other

    return label


def gouwu_func(x, y):
    &#39;&#39;&#39;
    组合-购物账户数据的处理

    Args:
        x: string, 京东账号
        y: string, 淘宝账号

    Returns: string, 打标签-购物账号类别[0,1,2,3,4,5,6]

    &#39;&#39;&#39;

    label_jd = one_feature(x)
    label_tb = one_feature(y)

    sum_num = label_jd + label_tb
    if (sum_num &amp;lt;= 2) and (sum_num &amp;gt;= 0):
        label = str(sum_num)  # 正常计数

    elif sum_num == 11:
        label = str(3)  # 计数1+未登记1

    elif sum_num == 10:
        label = str(4)  # 计数0+未登记1

    elif sum_num == 20:
        label = str(5)  # 全未登记

    else:
        label = str(6)  # other

    return label


def muti_family_func(marriage, is_child, child_sum, support_pre_count):
    &#39;&#39;&#39;
    组合 - 家庭结构处理

    Args:
        marriage: number, 婚姻状态
        is_child: number, 是否子女
        child_sum: number, 孩子数量
        support_pre_count: number, 供养人数

    Returns: string, 打标签-家庭结构类别[0,1,2,3,4]

    &#39;&#39;&#39;

    if ((support_pre_count &amp;lt;= 6) &amp;amp; (is_child &amp;lt; 2) &amp;amp; (marriage &amp;lt; 4) &amp;amp; (child_sum &amp;lt; 5)):
        if ((marriage == 0) | ((marriage == 2) &amp;amp; (is_child == 1)) | ((marriage == 3) &amp;amp; (is_child == 1))):
            label = str(0)  # 单身家庭

        elif (((marriage == 1) &amp;amp; (is_child == 1)) | (
                (marriage == 1) &amp;amp; (is_child == 0) &amp;amp; ((support_pre_count == 0) | (support_pre_count &amp;lt;= child_sum)))):
            label = str(1)  # 夫妻二人

        elif ((marriage == 1) &amp;amp; (is_child == 0) &amp;amp; (support_pre_count &amp;gt;= child_sum)):
            label = str(2)  # 核心家庭和主干家庭

        elif ((marriage == 2) &amp;amp; (is_child == 0) &amp;amp; (child_sum &amp;gt;= 1) &amp;amp; (support_pre_count &amp;gt;= child_sum)):
            label = str(3)  # 单亲家庭
        else:
            label = str(4)  # other
    else:
        label = str(5)  # other,error_data

    return label


def month_income(pd_series=dataset2[&#39;month_income&#39;],
                 divition=[float(&#39;-inf&#39;), 3000, 30000, 80000, 150000, 300000, 1000000, 5000000, float(&#39;inf&#39;)],
                 labels=[&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;]):
    &#39;&#39;&#39;
    单列 - 月收入处理

    Args:
        pd_series: pd.Series,里面的元素number, 欲进行分箱数据
        divition: list,里面元素number, 用于分箱的临界值数据
        labels:

    Returns:pd.Series, 分箱之后的标签结果.[&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;]分别对应
    贫困人口,穷人,低收入,初级小康,高级小康,中高收入,高收入,三者归一类（富翁,富豪,超级富豪）

    &#39;&#39;&#39;



    bins_series = pd.cut(pd_series* 12, bins=divition, right=True, precision=1, retbins=False,
                         labels=labels)

    return bins_series


def income_cata(outcome, income):
    &#39;&#39;&#39;
    组合-辅助1，家庭支出和月收入
    用于对家庭支出、月收入各单列中的数据进行处理，为计算家庭支出比重income_ratio函数做准备。

    Args:
        outcome: number, 家庭支出
        income: number,　家庭收入

    Returns:string, 打标签-辅助1类别[0,1,2,3]

    &#39;&#39;&#39;

    if (outcome &amp;lt;= 0.0) and (income &amp;lt;= 0):
        label = str(1)  # 表示家庭支出、月收入，全部&amp;lt;=0的情况

    elif (outcome &amp;lt;= 0.0) and (income &amp;gt; 0):
        label = str(2)  # 表示家庭支出&amp;lt;=0的情况

    elif (outcome &amp;gt; 0.0) and (income &amp;lt;= 0):
        label = str(3)  # 表示月收入&amp;lt;=0的情况
    else:
        label = str(0)  # 表示家庭支出、月收入全部&amp;gt;0的情况

    return label


def income_ratio(outcome, income):
    &#39;&#39;&#39;
    组合-比值，家庭支出和月收入

    Args:
        outcome: number, 家庭支出
        income: number,　家庭收入

    Returns:number, 家庭支出比重[0,inf],inf表示无穷

    &#39;&#39;&#39;

    label = income_cata(outcome, income)
    if label == &#39;0&#39;:

        x = float(outcome)
        y = float(income)
        value = x / y
    elif label == &#39;1&#39;:
        value = 1
        
    elif label == &#39;2&#39;:
        value = 0
        
    else:
        value = 100  # 对应于income_cata返回结果3，即家庭收入&amp;lt;=0的情况，赋给指定值100。

    return value


def income_ratio_addcata(outcome, income):
    &#39;&#39;&#39;
    组合-比值衍生类别1，家庭支出和月收入
    衍生的类别变量，和家庭支出、月收入组合特征共同使用

    Args:
        outcome: number, 家庭支出
        income: number,　家庭收入

    Returns:string, 打标签-支出比重的类别[0,1,2,3,4,5]

    &#39;&#39;&#39;

    value = income_ratio(outcome, income)
    if value == 0:
        label = str(0)  # 表示家庭支出比重=0的情况

    elif (value &amp;gt; 0) &amp;amp; (value &amp;lt;= .01):
        label = str(1)  # 表示家庭支出比重(0,0.01]的情况,’(]‘表示左开右闭

    elif (value &amp;gt; 0.01) &amp;amp; (value &amp;lt;= .1):
        label = str(2)  # 表示家庭支出比重(0.01,0.1]的情况

    elif (value &amp;gt; 0.1) &amp;amp; (value &amp;lt;= 1):
        label = str(3)  # 表示家庭支出比重(0.1,1]的情况

    elif (value &amp;gt; 1) &amp;amp; (value &amp;lt;= 10):
        label = str(4)  # 表示家庭支出比重(1,10]的情况

    else:
        label = str(5)  # 表示家庭支出比重(10,inf]的情况,inf表示无穷

    return label


def cd_flag(x):
    &#39;&#39;&#39;
    目标变量的处理
    逾期数＞0即认为逾期

    Args:
        x: number, 目标变量数值

    Returns:string, 打标签-目标变量类别[0,1]

    &#39;&#39;&#39;
    
    if x &amp;gt; 0:
        label = str(1)  # 1表示逾期
        
    else:
        label = str(0)  # 0表示正常
        
    return label
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;目标变量处理-逾期数cd&#34;&gt;目标变量处理（逾期数cd）&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;cd&#39;] = dataset2[&#39;cd&#39;].apply(cd_flag)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;组合-微信-微博-qq账户数量-社交数量shejiao-num&#34;&gt;组合-微信、微博、qq账户数量：社交数量shejiao_num&lt;/h4&gt;

&lt;p&gt;对缺失的类别保留，并相应处理&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;shejiao_num&#39;] = list(map(lambda x,y,z: shejiao_func(x,y,z), dataset2[&#39;weixin&#39;],dataset2[&#39;weibo&#39;],dataset2[&#39;qq&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;10&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;shejiao_num&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;th&gt;9&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1126&lt;/td&gt;
      &lt;td&gt;691&lt;/td&gt;
      &lt;td&gt;538&lt;/td&gt;
      &lt;td&gt;1084&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;115332&lt;/td&gt;
      &lt;td&gt;29575&lt;/td&gt;
      &lt;td&gt;185&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;784481&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;734&lt;/td&gt;
      &lt;td&gt;268&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;201&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;62621&lt;/td&gt;
      &lt;td&gt;18125&lt;/td&gt;
      &lt;td&gt;131&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;359495&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# fig1 = plt.figure()
# fig1.add_subplot(111)
dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().T.plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x37e4c1d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_69_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;10&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;shejiao_num&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;th&gt;9&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.605376&lt;/td&gt;
      &lt;td&gt;0.720542&lt;/td&gt;
      &lt;td&gt;0.807808&lt;/td&gt;
      &lt;td&gt;0.84358&lt;/td&gt;
      &lt;td&gt;0.706349&lt;/td&gt;
      &lt;td&gt;0.648104&lt;/td&gt;
      &lt;td&gt;0.620021&lt;/td&gt;
      &lt;td&gt;0.585443&lt;/td&gt;
      &lt;td&gt;0.75&lt;/td&gt;
      &lt;td&gt;0.68575&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.394624&lt;/td&gt;
      &lt;td&gt;0.279458&lt;/td&gt;
      &lt;td&gt;0.192192&lt;/td&gt;
      &lt;td&gt;0.15642&lt;/td&gt;
      &lt;td&gt;0.293651&lt;/td&gt;
      &lt;td&gt;0.351896&lt;/td&gt;
      &lt;td&gt;0.379979&lt;/td&gt;
      &lt;td&gt;0.414557&lt;/td&gt;
      &lt;td&gt;0.25&lt;/td&gt;
      &lt;td&gt;0.31425&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;shejiao_perc = dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;shejiao_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
shejiao_perc.T.plot(kind=&#39;bar&#39;,stacked=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x26f18dd8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_71_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从上面观察考虑，认为同时拥有3个账号的客户，其所逾期的可能性会更低。同时怀疑，是否存在某一个账号是影响的关键？&lt;/p&gt;

&lt;h4 id=&#34;组合-京东账号-淘宝账号-购物账号数量gouwu-num&#34;&gt;组合-京东账号、淘宝账号：购物账号数量gouwu_num&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;gouwu_num&#39;] = list(map(lambda x,y: gouwu_func(x,y), dataset2[&#39;alipay_account&#39;],dataset2[&#39;jd_account&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().T.plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x3bd39c50&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_75_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;6&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;gouwu_num&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1052&lt;/td&gt;
      &lt;td&gt;354&lt;/td&gt;
      &lt;td&gt;1331&lt;/td&gt;
      &lt;td&gt;5774&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;924615&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;308&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;181&lt;/td&gt;
      &lt;td&gt;2023&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;439175&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;6&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;gouwu_num&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.773529&lt;/td&gt;
      &lt;td&gt;0.855072&lt;/td&gt;
      &lt;td&gt;0.880291&lt;/td&gt;
      &lt;td&gt;0.740541&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;0.677975&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.226471&lt;/td&gt;
      &lt;td&gt;0.144928&lt;/td&gt;
      &lt;td&gt;0.119709&lt;/td&gt;
      &lt;td&gt;0.259459&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;0.322025&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;gouwu_perc = dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;gouwu_num&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
gouwu_perc.T.plot(kind=&#39;bar&#39;,stacked=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2ea68320&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_78_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;组合-marriage-is-child-child-sum-support-pre-count-家庭结构hunyin-cata&#34;&gt;组合-marriage、is_child、child_sum、support_pre_count：家庭结构hunyin_cata&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;child_sum&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([  0.,   2.,   1.,   3.,   4.,  nan,   5.,   8.,  62.,   6.,   7.,
        11.,  68., 100.,  22.,  15.,  12.,  25., 113.,  20.,  10.,  41.,
        33.,  14.,   9.,  21.,  24.,  23.])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;hunyin_cata&#39;] = list(map(lambda x,y,z,w: muti_family_func(x,y,z,w), dataset2[&#39;marriage&#39;],dataset2[&#39;is_child&#39;],dataset2[&#39;child_sum&#39;],dataset2[&#39;support_pre_count&#39;]))
# marriage, is_child, child_sum, support_pre_count
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;hunyin_cata&#39;]).count()[&#39;intopieces_id&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;hunyin_cata
0      2452
1    209424
2      1909
3    451980
4    625078
5     84042
Name: intopieces_id, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;hunyin_cata&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().T.plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x43d76b38&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_83_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;hunyin_cata&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;hunyin_cata&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;6&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;hunyin_cata&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.790783&lt;/td&gt;
      &lt;td&gt;0.67412&lt;/td&gt;
      &lt;td&gt;0.641173&lt;/td&gt;
      &lt;td&gt;0.610206&lt;/td&gt;
      &lt;td&gt;0.744593&lt;/td&gt;
      &lt;td&gt;0.565955&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.209217&lt;/td&gt;
      &lt;td&gt;0.32588&lt;/td&gt;
      &lt;td&gt;0.358827&lt;/td&gt;
      &lt;td&gt;0.389794&lt;/td&gt;
      &lt;td&gt;0.255407&lt;/td&gt;
      &lt;td&gt;0.434045&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;hunyin_perc = dataset2.groupby([&#39;cd&#39;,&#39;hunyin_cata&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;hunyin_cata&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
hunyin_perc.T.plot(kind=&#39;bar&#39;,stacked=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2ead0eb8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_85_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;单列-月收入数据-收入分级monthincome-bins&#34;&gt;单列-月收入数据：收入分级monthincome_bins&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;monthincome_bins&#39;] = month_income(dataset2[&#39;month_income&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;monthincome_bins&#39;]).count()[&#39;intopieces_id&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;monthincome_bins
0     93175
1     26904
2    475463
3    291892
4    191145
5    209742
6     74058
7     12506
Name: intopieces_id, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;8&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;monthincome_bins&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;50840&lt;/td&gt;
      &lt;td&gt;18555&lt;/td&gt;
      &lt;td&gt;322996&lt;/td&gt;
      &lt;td&gt;204990&lt;/td&gt;
      &lt;td&gt;134515&lt;/td&gt;
      &lt;td&gt;147132&lt;/td&gt;
      &lt;td&gt;46699&lt;/td&gt;
      &lt;td&gt;7407&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;42335&lt;/td&gt;
      &lt;td&gt;8349&lt;/td&gt;
      &lt;td&gt;152467&lt;/td&gt;
      &lt;td&gt;86902&lt;/td&gt;
      &lt;td&gt;56630&lt;/td&gt;
      &lt;td&gt;62610&lt;/td&gt;
      &lt;td&gt;27359&lt;/td&gt;
      &lt;td&gt;5099&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# fig7 = plt.figure()
# fig7.add_subplot(111)
dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().T.plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2eb27470&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_90_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;8&#34; halign=&#34;left&#34;&gt;intopieces_id&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;monthincome_bins&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cd&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.54564&lt;/td&gt;
      &lt;td&gt;0.689674&lt;/td&gt;
      &lt;td&gt;0.679329&lt;/td&gt;
      &lt;td&gt;0.70228&lt;/td&gt;
      &lt;td&gt;0.703733&lt;/td&gt;
      &lt;td&gt;0.70149&lt;/td&gt;
      &lt;td&gt;0.630573&lt;/td&gt;
      &lt;td&gt;0.592276&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0.45436&lt;/td&gt;
      &lt;td&gt;0.310326&lt;/td&gt;
      &lt;td&gt;0.320671&lt;/td&gt;
      &lt;td&gt;0.29772&lt;/td&gt;
      &lt;td&gt;0.296267&lt;/td&gt;
      &lt;td&gt;0.29851&lt;/td&gt;
      &lt;td&gt;0.369427&lt;/td&gt;
      &lt;td&gt;0.407724&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
monthincome_perc = dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack()/dataset2.groupby([&#39;cd&#39;,&#39;monthincome_bins&#39;]).agg({&#39;intopieces_id&#39;:&#39;count&#39;}).unstack().sum()
monthincome_perc.T.plot(kind=&#39;bar&#39;,stacked=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2ecdb748&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_92_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;组合-月收入-家庭支出-家庭支出比重zhichu-ratio&#34;&gt;组合-月收入、家庭支出：家庭支出比重zhichu_ratio&lt;/h4&gt;

&lt;h5 id=&#34;zhichu-ratio生成和分布情况观察&#34;&gt;zhichu_ratio生成和分布情况观察&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[dataset2[&#39;support_pre_pay&#39;]&amp;gt;dataset2[&#39;month_income&#39;]].head()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;zhichu_ratio&#39;] = list(map(lambda x,y: income_ratio(x,y), dataset2[&#39;support_pre_pay&#39;],dataset2[&#39;month_income&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;值分布图&#34;&gt;值分布图&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig81 = plt.figure(figsize=(16,10))
fig81.suptitle(&#39;家庭月支出比重（值分布）&#39;)
plt.tight_layout(pad=2) #设置默认的间距
plt.subplots_adjust(wspace=0.5, hspace=0.5)

fig81.add_subplot(241)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2)
plot1.set(ylim=(0,1))
plt.title(&#39;ALL&#39;)


fig81.add_subplot(242)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]== 0)])
plt.title(&#39;= 0&#39;)
                                    
fig81.add_subplot(243)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt; 0) &amp;amp; ((dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=.01))])
plot1.set(ylim=(0,.01))
plt.title(&#39;0-0.01&#39;)

fig81.add_subplot(244)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;.01) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=0.1)])
plot1.set(ylim=(0.01,0.1))
plt.title(&#39;0.01-0.1&#39;)                                           
                                           
fig81.add_subplot(245)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;0.1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=1)])
plot1.set(ylim=(0,1))
plt.title(&#39;0.1-1&#39;) 

fig81.add_subplot(246)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=10)])
plot1.set(ylim=(0,10))
plt.title(&#39;1-10&#39;)

fig81.add_subplot(247)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;10) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;100)])
plot1.set(ylim=(10,100))
plt.title(&#39;10-100&#39;)

fig81.add_subplot(248)
plot1 = sns.boxplot(y=&#39;zhichu_ratio&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;100)])
plot1.set(ylim=(100,5000))
plt.title(&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_98_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h6 id=&#34;频数统计&#34;&gt;频数统计&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig82 = plt.figure(figsize=(16,10))
fig82.suptitle(&#39;家庭月支出比重（频数）&#39;)
plt.tight_layout(pad=2) #设置默认的间距
plt.subplots_adjust(wspace=0.5, hspace=0.5)

fig82.add_subplot(241)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2)
plt.title(&#39;ALL&#39;)


fig82.add_subplot(242)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]== 0)])
plt.title(&#39;= 0&#39;)
                                    
fig82.add_subplot(243)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt; 0) &amp;amp; ((dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=.01))])
plt.title(&#39;0-0.01&#39;)

fig82.add_subplot(244)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;.01) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=0.1)])
# plot1.set(ylim=(0,1))
plt.title(&#39;0.01-0.1&#39;)                                           
                                           
fig82.add_subplot(245)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;0.1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=1)])
# plot1.set(ylim=(0,1))
plt.title(&#39;0.1-1&#39;) 

fig82.add_subplot(246)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=10)])
# plot1.set(ylim=(0,1))
plt.title(&#39;1-10&#39;)

fig82.add_subplot(247)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;10) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;100)])
# plot1.set(ylim=(10,100))
plt.title(&#39;10-100&#39;)

fig82.add_subplot(248)
plot1 = sns.countplot(x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;100)])
# plot1.set(ylim=(100,5000))
plt.title(&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_100_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h6 id=&#34;结论与建议&#34;&gt;结论与建议&lt;/h6&gt;

&lt;p&gt;结合原始数据（月收入month_income、家庭支出support_pre_pay），其数值存在超过10万以上的，一部分可能原因是线下录入有误，一部分原因可能是客户造假，其余部分可能是存在极个别客户填写数值是真实的。基于此考虑，在对两列处理之后，相应会存在比值大于100、以及=0情况，从箱线图结果观察到＞100的部分，正常与逾期的分布无明显区别。因此，针对收入比重大于100的部分，可以考虑去除。&lt;/p&gt;

&lt;h5 id=&#34;尝试-log变换&#34;&gt;尝试（log变换）&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;temp_log&#39;] = dataset2[&#39;zhichu_ratio&#39;].apply(&#39;log&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\pandas\core\base.py:307: RuntimeWarning: divide by zero encountered in log
  return f(self, *args, **kwargs)
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;值分布&#34;&gt;值分布&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig84 = plt.figure(figsize=(16,8))
fig84.suptitle(&#39;家庭月支出log变换&#39;)

plt.tight_layout(pad=2) #设置默认的间距
plt.subplots_adjust(wspace=0.5, hspace=0.5)

fig84.add_subplot(241)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2)
# plot1.set(ylim=(0,1))
plt.title(&#39;ALL&#39;)


fig84.add_subplot(242)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]== 0)])
plt.title(&#39;= 0&#39;)
                                    
fig84.add_subplot(243)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt; 0) &amp;amp; ((dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=.01))])
# plot1.set(ylim=(0,.01))
plt.title(&#39;0-0.01&#39;)

fig84.add_subplot(244)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;.01) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=0.1)])
# plot1.set(ylim=(0.01,0.1))
plt.title(&#39;0.01-0.1&#39;)                                           
                                           
fig84.add_subplot(245)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;0.1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=1)])
# plot1.set(ylim=(0,1))
plt.title(&#39;0.1-1&#39;) 

fig84.add_subplot(246)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;1) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;=10)])
# plot1.set(ylim=(0,10))
plt.title(&#39;1-10&#39;)

fig84.add_subplot(247)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;10) &amp;amp; (dataset2[&#39;zhichu_ratio&#39;]&amp;lt;100)])
# plot1.set(ylim=(10,100))
plt.title(&#39;10-100&#39;)

fig84.add_subplot(248)
plot1 = sns.boxplot(y=&#39;temp_log&#39;,x=&#39;cd&#39;,data=dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;100)])
# plot1.set(ylim=(100,5000))
plt.title(&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\matplotlib\cbook\__init__.py:1847: RuntimeWarning: invalid value encountered in double_scalars
  stats[&#39;iqr&#39;] = q3 - q1
C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\matplotlib\cbook\__init__.py:1872: RuntimeWarning: invalid value encountered in less_equal
  wiskhi = np.compress(x &amp;lt;= hival, x)
C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\matplotlib\cbook\__init__.py:1879: RuntimeWarning: invalid value encountered in greater_equal
  wisklo = np.compress(x &amp;gt;= loval, x)
C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\numpy\lib\function_base.py:4406: RuntimeWarning: invalid value encountered in multiply
  x2 = take(ap, indices_above, axis=axis) * weights_above





Text(0.5,1,&#39;&amp;gt;100&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_106_2.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h6 id=&#34;结论与建议-不推荐&#34;&gt;结论与建议——（不推荐）&lt;/h6&gt;

&lt;p&gt;由上面的图表观察，log变换带来数据的区分度并不理想。因此，暂且不考虑log变换。&lt;/p&gt;

&lt;h5 id=&#34;zhichu-ratio的衍生特征-zhichu-ratio-addcata&#34;&gt;zhichu_ratio的衍生特征——zhichu_ratio_addcata&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset2[&#39;zhichu_ratio_addcata&#39;] = list(map(lambda x,y: income_ratio_addcata(x, y), dataset2[&#39;support_pre_pay&#39;],dataset2[&#39;month_income&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig85 = plt.figure(figsize=(8,8))

plt.tight_layout(pad=2) #设置默认的间距
plt.subplots_adjust(wspace=0.5, hspace=0.5)

fig85.add_subplot(121)
plot1 = sns.countplot(x=&#39;zhichu_ratio_addcata&#39;,hue=&#39;cd&#39;,data=dataset2, dodge=False)
# plot1.set(ylim=(0,1))
plt.title(&#39;ALL&#39;)


&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;ALL&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/反欺诈特征衍生1/output_111_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;变量重要性判别&#34;&gt;变量重要性判别&lt;/h3&gt;

&lt;h4 id=&#34;从统计相关的角度分析单变量的影响&#34;&gt;从统计相关的角度分析单变量的影响&lt;/h4&gt;

&lt;p&gt;数据集中的社交数据和购物数据可认为是数值型，即连续-离散的变量分析&lt;/p&gt;

&lt;h5 id=&#34;社交和购物数据视为连续-离散&#34;&gt;社交和购物数据视为连续—离散&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# dataset2.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
# from sklearn.feature_selection import SelectKBest
# from sklearn.feature_selection import  f_classif  # 即假设检验-anova方法
# k_best = SelectKBest(f_classif, k=&#39;all&#39;)
# Kbest = k_best.fit(dataset2[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;]], dataset2[[&#39;cd&#39;]])
# Kbest.pvalues_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上面的结果，p&amp;lt;0.05，故认为两个变量对结果均有影响&lt;/p&gt;

&lt;h5 id=&#34;社交和购物数据视为离散-离散&#34;&gt;社交和购物数据视为离散—离散&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

dataset2_sub = dataset2[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;cd&#39;]]
dataset2_sub[&#39;gouwu_num&#39;] = dataset2_sub[&#39;gouwu_num&#39;].astype(str)
dataset2_sub[&#39;shejiao_num&#39;] = dataset2_sub[&#39;shejiao_num&#39;].astype(str)


#选择K个最好的特征，返回选择特征后的数据
model1 = SelectKBest(chi2, k=&#39;all&#39;)
model1.fit_transform(dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;]], dataset2_sub[&#39;cd&#39;])[1]

# 各特征的得分
model1.scores_, dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;]].columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\ipykernel_launcher.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy

C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\ipykernel_launcher.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  import sys





(array([  5.31019853, 341.66495808]),
 Index([&#39;gouwu_num&#39;, &#39;shejiao_num&#39;], dtype=&#39;object&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 各特征的p值
model1.pvalues_  , dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;]].columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(array([2.12009402e-02, 2.76869376e-76]),
 Index([&#39;gouwu_num&#39;, &#39;shejiao_num&#39;], dtype=&#39;object&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上面的结果，p&amp;lt;0.05，故认为两个变量对目标变量均有影响&lt;/p&gt;

&lt;h5 id=&#34;家庭支出比重-zhichu-ratio-的连续-离散&#34;&gt;家庭支出比重（zhichu_ratio）的连续—离散&lt;/h5&gt;

&lt;h6 id=&#34;家庭支出比重-all&#34;&gt;家庭支出比重（ALL）&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import  f_classif  # 即假设检验-anova方法
k_best = SelectKBest(f_classif, k=&#39;all&#39;)
Kbest = k_best.fit(dataset2[[&#39;month_income&#39;,&#39;support_pre_pay&#39;, &#39;zhichu_ratio&#39;]], dataset2[[&#39;cd&#39;]])
Kbest.pvalues_
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\sklearn\utils\validation.py:578: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)





array([4.99626685e-06, 9.29123318e-01, 2.43230145e-01])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从假设检验的分析结果中观察到，对于原始单列数据month_income，它对目标变量有一定影响；原始单列数据support_pre_pay、组合数据对目标变量无显著影响&lt;/p&gt;

&lt;h6 id=&#34;家庭支出比重-0-ratio-10&#34;&gt;家庭支出比重（(0&amp;lt;ratio≤10）&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import  f_classif  # 即假设检验-anova方法
k_best = SelectKBest(f_classif, k=&#39;all&#39;)

dataset2_sub3 = dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;0)&amp;amp;(dataset2[&#39;zhichu_ratio&#39;]&amp;lt;10)]
Kbest = k_best.fit(dataset2_sub3[[&#39;month_income&#39;,&#39;support_pre_pay&#39;, &#39;zhichu_ratio&#39;]], dataset2_sub3[[&#39;cd&#39;]])
Kbest.pvalues_
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\sklearn\utils\validation.py:578: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)





array([4.55373808e-06, 3.58681469e-01, 6.01862819e-03])
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;家庭支出比重-0-ratio-10-1&#34;&gt;家庭支出比重（(0≤ratio≤10）&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import  f_classif  # 即假设检验-anova方法
k_best = SelectKBest(f_classif, k=&#39;all&#39;)

dataset2_sub3 = dataset2[(dataset2[&#39;zhichu_ratio&#39;]&amp;gt;=0)&amp;amp;(dataset2[&#39;zhichu_ratio&#39;]&amp;lt;10)]
Kbest = k_best.fit(dataset2_sub3[[&#39;month_income&#39;,&#39;support_pre_pay&#39;, &#39;zhichu_ratio&#39;]], dataset2_sub3[[&#39;cd&#39;]])
Kbest.pvalues_
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\sklearn\utils\validation.py:578: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)





array([2.17489841e-06, 0.00000000e+00, 0.00000000e+00])
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;结论&#34;&gt;结论&lt;/h6&gt;

&lt;p&gt;分三种情况区别看待家庭支出比重，0，（0,10]，（10，inf）。在对整体范围数据进行检验时，zhichu_ratio不显著，即难以判别对目标变量的影响；当在＜10的情况下，zhichu_ratio显著，明显对目标变量有影响，尤其在=0的情况当中。
故建议添加一列特征作为辅助区分三种情况。&lt;/p&gt;

&lt;h4 id=&#34;从多变量结合角度&#34;&gt;从多变量结合角度&lt;/h4&gt;

&lt;h5 id=&#34;离散-离散&#34;&gt;离散—离散&lt;/h5&gt;

&lt;p&gt;[&amp;lsquo;shejiao_num&amp;rsquo;,&amp;lsquo;gouwu_num&amp;rsquo;,&amp;lsquo;hunyin_cata&amp;rsquo;,&amp;lsquo;monthincome_bins&amp;rsquo;,&amp;lsquo;zhichu_ratio_addcata&amp;rsquo;]
社交、购物、家庭结构、收入分级、家庭比重（衍生类别）等离散变量判断。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

dataset2_sub = dataset2[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;hunyin_cata&#39;,&#39;monthincome_bins&#39;,&#39;zhichu_ratio_addcata&#39;, &#39;cd&#39;]]
dataset2_sub[&#39;gouwu_num&#39;] = dataset2_sub[&#39;gouwu_num&#39;].astype(str)
dataset2_sub[&#39;shejiao_num&#39;] = dataset2_sub[&#39;shejiao_num&#39;].astype(str)


#选择K个最好的特征，返回选择特征后的数据
model1 = SelectKBest(chi2, k=&#39;all&#39;)
model1.fit_transform(dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;hunyin_cata&#39;,&#39;monthincome_bins&#39;,&#39;zhichu_ratio_addcata&#39;]], dataset2_sub[&#39;cd&#39;])[1]

# 各特征的得分
model1.scores_, dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;hunyin_cata&#39;,&#39;monthincome_bins&#39;,&#39;zhichu_ratio_addcata&#39;]].columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\ipykernel_launcher.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy

C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\ipykernel_launcher.py:7: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  import sys





(array([5.31019853e+00, 3.41664958e+02, 5.59435501e+02, 1.38677840e+03,
        6.14311476e+04]),
 Index([&#39;gouwu_num&#39;, &#39;shejiao_num&#39;, &#39;hunyin_cata&#39;, &#39;monthincome_bins&#39;,
        &#39;zhichu_ratio_addcata&#39;],
       dtype=&#39;object&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 各特征的p值
model1.pvalues_  , dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;hunyin_cata&#39;,&#39;monthincome_bins&#39;,&#39;zhichu_ratio_addcata&#39;]].columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(array([2.12009402e-002, 2.76869376e-076, 1.11536417e-123, 1.56862997e-303,
        0.00000000e+000]),
 Index([&#39;gouwu_num&#39;, &#39;shejiao_num&#39;, &#39;hunyin_cata&#39;, &#39;monthincome_bins&#39;,
        &#39;zhichu_ratio_addcata&#39;],
       dtype=&#39;object&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;采用高级统计方法识别特征效用&#34;&gt;采用高级统计方法识别特征效用&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.linear_model import RandomizedLogisticRegression

r_logistic = RandomizedLogisticRegression(C=1,
                                         scaling=0.5,
                                         sample_fraction=0.75,
                                         n_resampling=100,
#                                          selection_thershold=0.1,
                                         fit_intercept=True,
                                         verbose=True,
#                                          normolize=True,
                                         random_state=1234,
                                         n_jobs=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\M4500\Anaconda3\envs\py35_xgboost\lib\site-packages\sklearn\utils\deprecation.py:58: DeprecationWarning: Class RandomizedLogisticRegression is deprecated; The class RandomizedLogisticRegression is deprecated in 0.19 and will be removed in 0.21.
  warnings.warn(msg, category=DeprecationWarning)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;r_logistic.fit(dataset2_sub[[&#39;gouwu_num&#39;,&#39;shejiao_num&#39;,&#39;hunyin_cata&#39;,&#39;monthincome_bins&#39;,&#39;zhichu_ratio_addcata&#39;]], dataset2_sub[&#39;cd&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:  5.0min finished





RandomizedLogisticRegression(C=1, fit_intercept=True, memory=None, n_jobs=1,
               n_resampling=100, normalize=True, pre_dispatch=&#39;3*n_jobs&#39;,
               random_state=1234, sample_fraction=0.75, scaling=0.5,
               selection_threshold=0.25, tol=0.001, verbose=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;r_logistic.get_support()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([ True,  True,  True,  True,  True])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;r_logistic.all_scores_
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([[1.  ],
       [0.9 ],
       [0.67],
       [1.  ],
       [1.  ]])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从结果观察可知，对于5个离散特征：[&amp;lsquo;gouwu_num&amp;rsquo;,&amp;lsquo;shejiao_num&amp;rsquo;,&amp;lsquo;hunyin_cata&amp;rsquo;,&amp;lsquo;monthincome_bins&amp;rsquo;,&amp;lsquo;zhichu_ratio_addcata&amp;rsquo;]除了&amp;rsquo;hunyin_cata&amp;rsquo;重要性较低之外，其他变量都重要性得分很高。对于连续特征&amp;rsquo;zhichu_ratio&amp;rsquo;,在单因素分析评估中影响显著。&lt;br /&gt;
故可考虑将6个衍生特征视为重要特征使用。&lt;/p&gt;

&lt;h4 id=&#34;结论-1&#34;&gt;结论&lt;/h4&gt;

&lt;p&gt;综合以上的判别和评估，认为社交数量、购物账号数量、收入分级、家庭支出比重及其类型的重要性最为主要，其次是家庭结构。因此，认为所有的衍生特征均可考虑添加到模型当中进一步测试和评估它们的贡献程度。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于链家全网房价数据分析挖掘项目</title>
      <link>https://growing-bison.github.io/post/%E5%85%B3%E4%BA%8E%E9%93%BE%E5%AE%B6%E5%85%A8%E7%BD%91%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8C%96%E6%8E%98%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Sun, 30 Sep 2018 21:26:04 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/%E5%85%B3%E4%BA%8E%E9%93%BE%E5%AE%B6%E5%85%A8%E7%BD%91%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8C%96%E6%8E%98%E9%A1%B9%E7%9B%AE/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;数据说明&lt;/strong&gt;&lt;br /&gt;
1. 数据信息：&lt;br /&gt;
 - 数据量：40多万条观测，20多个列变量&lt;br /&gt;
 - 时间：2018年5月前&lt;br /&gt;
2. 数据来源&lt;br /&gt;
 - 作者：田昕峣&lt;br /&gt;
 - 获取方式：&lt;a href=&#34;https://github.com/XinyaoTian/lianjia_Spider&#34; target=&#34;_blank&#34;&gt;https://github.com/XinyaoTian/lianjia_Spider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;项目目标&lt;/strong&gt;&lt;br /&gt;
 - 建立单位面积房价的预测模型&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;内容目录&lt;span class=&#34;tocSkip&#34;&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div class=&#34;toc&#34;&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#数据导入&#34; data-toc-modified-id=&#34;数据导入-1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;1&amp;nbsp;&amp;nbsp;&lt;/span&gt;数据导入&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#数据探索：&#34; data-toc-modified-id=&#34;数据探索：-2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;2&amp;nbsp;&amp;nbsp;&lt;/span&gt;数据探索：&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#数据处理：&#34; data-toc-modified-id=&#34;数据处理：-3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;3&amp;nbsp;&amp;nbsp;&lt;/span&gt;数据处理：&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#绘图分析&#34; data-toc-modified-id=&#34;绘图分析-4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4&amp;nbsp;&amp;nbsp;&lt;/span&gt;绘图分析&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#单变量观察&#34; data-toc-modified-id=&#34;单变量观察-4.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;单变量观察&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#面积、查看次数、收藏次数、发布时间&#34; data-toc-modified-id=&#34;面积、查看次数、收藏次数、发布时间-4.1.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.1.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;面积、查看次数、收藏次数、发布时间&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#2年产权、5年产权、房屋户型&#34; data-toc-modified-id=&#34;2年产权、5年产权、房屋户型-4.1.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.1.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;2年产权、5年产权、房屋户型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#朝向、装修程度、电梯配备、楼层位置、楼型、建成时间&#34; data-toc-modified-id=&#34;朝向、装修程度、电梯配备、楼层位置、楼型、建成时间-4.1.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.1.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;朝向、装修程度、电梯配备、楼层位置、楼型、建成时间&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#多维度分析&#34; data-toc-modified-id=&#34;多维度分析-4.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;多维度分析&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#产权和查看次数、收藏次数&#34; data-toc-modified-id=&#34;产权和查看次数、收藏次数-4.2.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.2.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;产权和查看次数、收藏次数&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#户型+产权和查看次数、收藏次数¶&#34; data-toc-modified-id=&#34;户型+产权和查看次数、收藏次数¶-4.2.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.2.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;户型+产权和查看次数、收藏次数¶&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#关联分析&#34; data-toc-modified-id=&#34;关联分析-4.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;关联分析&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#2年产权、5年产权vs装修程度、户型&#34; data-toc-modified-id=&#34;2年产权、5年产权vs装修程度、户型-4.3.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;2年产权、5年产权vs装修程度、户型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#电梯、楼层、楼型、建成时间单变量统计&#34; data-toc-modified-id=&#34;电梯、楼层、楼型、建成时间单变量统计-4.3.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;电梯、楼层、楼型、建成时间单变量统计&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#连续变量的相关性&#34; data-toc-modified-id=&#34;连续变量的相关性-4.3.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;连续变量的相关性&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#异常值检查（size_house_edit1与smeter_price_edit1关系为例）&#34; data-toc-modified-id=&#34;异常值检查（size_house_edit1与smeter_price_edit1关系为例）-4.3.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;异常值检查（size_house_edit1与smeter_price_edit1关系为例）&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#检查&#34; data-toc-modified-id=&#34;检查-4.3.4.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.4.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;检查&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#剔除异常点&#34; data-toc-modified-id=&#34;剔除异常点-4.3.4.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.3.4.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;剔除异常点&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#目标变量处理——满足整体分布&#34; data-toc-modified-id=&#34;目标变量处理——满足整体分布-4.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;目标变量处理——满足整体分布&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#绘制正态分布图&#34; data-toc-modified-id=&#34;绘制正态分布图-4.4.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.4.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;绘制正态分布图&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#绘制QQ图&#34; data-toc-modified-id=&#34;绘制QQ图-4.4.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.4.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;绘制QQ图&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#变换处理与查看&#34; data-toc-modified-id=&#34;变换处理与查看-4.4.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.4.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;变换处理与查看&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#缺失值处理&#34; data-toc-modified-id=&#34;缺失值处理-4.5&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.5&amp;nbsp;&amp;nbsp;&lt;/span&gt;缺失值处理&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#其它特征工程&#34; data-toc-modified-id=&#34;其它特征工程-4.6&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6&amp;nbsp;&amp;nbsp;&lt;/span&gt;其它特征工程&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#1、有许多特征实际上是类别型的特征，但给出来的是数字，所以需要将其转换成类别型。&#34; data-toc-modified-id=&#34;1、有许多特征实际上是类别型的特征，但给出来的是数字，所以需要将其转换成类别型。-4.6.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;1、有许多特征实际上是类别型的特征，但给出来的是数字，所以需要将其转换成类别型。&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#2、接下来-LabelEncoder，对部分类别的特征进行编号。&#34; data-toc-modified-id=&#34;2、接下来-LabelEncoder，对部分类别的特征进行编号。-4.6.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;2、接下来 LabelEncoder，对部分类别的特征进行编号。&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#3、检查变量的正态分布情况&#34; data-toc-modified-id=&#34;3、检查变量的正态分布情况-4.6.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;3、检查变量的正态分布情况&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#检查&#34; data-toc-modified-id=&#34;检查-4.6.3.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.3.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;检查&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#变换处理&#34; data-toc-modified-id=&#34;变换处理-4.6.3.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.3.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;变换处理&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#哑变量处理&#34; data-toc-modified-id=&#34;哑变量处理-4.6.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;4.6.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;哑变量处理&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#建立模型&#34; data-toc-modified-id=&#34;建立模型-5&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5&amp;nbsp;&amp;nbsp;&lt;/span&gt;建立模型&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#数据准备&#34; data-toc-modified-id=&#34;数据准备-5.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;数据准备&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#模型函数&#34; data-toc-modified-id=&#34;模型函数-5.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;模型函数&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#模型函数设定&#34; data-toc-modified-id=&#34;模型函数设定-5.2.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;模型函数设定&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#lasso模型&#34; data-toc-modified-id=&#34;lasso模型-5.2.1.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;lasso模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#ENet模型&#34; data-toc-modified-id=&#34;ENet模型-5.2.1.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;ENet模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#KRR模型&#34; data-toc-modified-id=&#34;KRR模型-5.2.1.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;KRR模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#GBoost模型&#34; data-toc-modified-id=&#34;GBoost模型-5.2.1.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;GBoost模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#xgboost模型&#34; data-toc-modified-id=&#34;xgboost模型-5.2.1.5&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.5&amp;nbsp;&amp;nbsp;&lt;/span&gt;xgboost模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#LightGBM模型&#34; data-toc-modified-id=&#34;LightGBM模型-5.2.1.6&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.1.6&amp;nbsp;&amp;nbsp;&lt;/span&gt;LightGBM模型&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#模型得分&#34; data-toc-modified-id=&#34;模型得分-5.2.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.2.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;模型得分&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#模型融合&#34; data-toc-modified-id=&#34;模型融合-5.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;模型融合&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#基模型融合&#34; data-toc-modified-id=&#34;基模型融合-5.3.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;基模型融合&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#构建stacking-averagd-models的类&#34; data-toc-modified-id=&#34;构建stacking-averagd-models的类-5.3.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;构建stacking averagd models的类&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#测试模型融合&#34; data-toc-modified-id=&#34;测试模型融合-5.3.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;测试模型融合&lt;/a&gt;&lt;/span&gt;&lt;ul class=&#34;toc-item&#34;&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#stacking&#34; data-toc-modified-id=&#34;stacking-5.3.3.1&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.3.1&amp;nbsp;&amp;nbsp;&lt;/span&gt;stacking&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#xgboost&#34; data-toc-modified-id=&#34;xgboost-5.3.3.2&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.3.2&amp;nbsp;&amp;nbsp;&lt;/span&gt;xgboost&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#lightgbm&#34; data-toc-modified-id=&#34;lightgbm-5.3.3.3&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.3.3&amp;nbsp;&amp;nbsp;&lt;/span&gt;lightgbm&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#结果&#34; data-toc-modified-id=&#34;结果-5.3.4&#34;&gt;&lt;span class=&#34;toc-item-num&#34;&gt;5.3.4&amp;nbsp;&amp;nbsp;&lt;/span&gt;结果&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;数据导入&#34;&gt;数据导入&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]
plt.rcParams[&#39;font.family&#39;]=&#39;sans-serif&#39; # 解决负号是方块
%matplotlib notebook

import seaborn as sns
color = sns.color_palette()
sns.set_style(&#39;darkgrid&#39;)
import warnings
def ignore_warn(*args, **kwargs):
    pass
warnings.warn = ignore_warn

import re
from scipy import stats
from scipy.stats import norm, skew


pd.set_option(&#39;display.float_format&#39;, lambda x: &#39;{:.3f}&#39;.format(x)) #Limiting floats output
pd.set_option(&#39;display.max_columns&#39;,40) # 显示隐藏

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset = pd.read_csv(&#39;./houseInfo.csv&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = dataset.ix[1, &#39;info_cluster&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;introduction_house&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;href_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house&lt;/th&gt;
      &lt;th&gt;direction_house&lt;/th&gt;
      &lt;th&gt;decoration_house&lt;/th&gt;
      &lt;th&gt;elevator_house&lt;/th&gt;
      &lt;th&gt;type_house&lt;/th&gt;
      &lt;th&gt;years_house&lt;/th&gt;
      &lt;th&gt;area_house&lt;/th&gt;
      &lt;th&gt;interests_house&lt;/th&gt;
      &lt;th&gt;watch_times&lt;/th&gt;
      &lt;th&gt;submit_period&lt;/th&gt;
      &lt;th&gt;years_period&lt;/th&gt;
      &lt;th&gt;tax_free&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
      &lt;th&gt;info_cluster&lt;/th&gt;
      &lt;th&gt;info_flood&lt;/th&gt;
      &lt;th&gt;info_follow&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;电梯花园洋房，开发商精装修带家具家电，小区人车分流&lt;/td&gt;
      &lt;td&gt;麓山国际帕萨迪纳3组&lt;/td&gt;
      &lt;td&gt;https://cd.lianjia.com/ershoufang/106101085290...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;麓山&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;250.000&lt;/td&gt;
      &lt;td&gt;单价25492元/平米&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;| 2室2厅 | 98.07平米 | 南 | 其他 | 有电梯&lt;/td&gt;
      &lt;td&gt;高楼层(共9层)2008年建板塔结合  -&lt;/td&gt;
      &lt;td&gt;3人关注 / 共0次带看 / 2个月以前发布&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;天府新区麓山国际跃层洋房纯清水出售&lt;/td&gt;
      &lt;td&gt;麓山国际塞尔维蒙&lt;/td&gt;
      &lt;td&gt;https://cd.lianjia.com/ershoufang/106101067528...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;麓山&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;420.000&lt;/td&gt;
      &lt;td&gt;单价20389元/平米&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;| 叠拼别墅 | 5室1厅 | 206平米 | 南 | 其他 | 无电梯&lt;/td&gt;
      &lt;td&gt;上叠(共4层)2008年建暂无数据  -&lt;/td&gt;
      &lt;td&gt;36人关注 / 共2次带看 / 2个月以前发布&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;麓山国际半月湾跃层，户型通透采光良好楼距开阔视野好&lt;/td&gt;
      &lt;td&gt;麓山国际半月湾&lt;/td&gt;
      &lt;td&gt;https://cd.lianjia.com/ershoufang/106101136261...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;麓山&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;275.000&lt;/td&gt;
      &lt;td&gt;单价24512元/平米&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;| 2室2厅 | 112.19平米 | 东南 | 其他&lt;/td&gt;
      &lt;td&gt;高楼层(共16层)2013年建板楼  -&lt;/td&gt;
      &lt;td&gt;43人关注 / 共1次带看 / 1个月以前发布&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;中丝园 装修 套三单卫 带车位 !&lt;/td&gt;
      &lt;td&gt;心怡中丝园&lt;/td&gt;
      &lt;td&gt;https://cd.lianjia.com/ershoufang/106101229408...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;麓山&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;193.000&lt;/td&gt;
      &lt;td&gt;单价22043元/平米&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;| 3室2厅 | 87.56平米 | 南 | 其他 | 有电梯&lt;/td&gt;
      &lt;td&gt;高楼层(共33层)2015年建板塔结合  -&lt;/td&gt;
      &lt;td&gt;1人关注 / 共0次带看 / 12天以前发布&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;麓山国际因特拉肯A区+套三双卫+对中庭+看湖带装修&lt;/td&gt;
      &lt;td&gt;麓山国际茵特拉肯A&lt;/td&gt;
      &lt;td&gt;https://cd.lianjia.com/ershoufang/106101233740...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;麓山&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;300.000&lt;/td&gt;
      &lt;td&gt;单价23303元/平米&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;| 3室2厅 | 128.74平米 | 西南 | 其他&lt;/td&gt;
      &lt;td&gt;中楼层(共11层)2016年建板楼  -&lt;/td&gt;
      &lt;td&gt;0人关注 / 共0次带看 / 10天以前发布&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3 id=&#34;数据探索&#34;&gt;数据探索：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;查看数据集中的变量情况&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 474301 entries, 0 to 474300
Data columns (total 22 columns):
introduction_house    474301 non-null object
community_house       474301 non-null object
href_house            474301 non-null object
unit_house            38137 non-null object
size_house            38137 non-null object
direction_house       38137 non-null object
decoration_house      38109 non-null object
elevator_house        37093 non-null object
type_house            38137 non-null object
years_house           38100 non-null object
area_house            474301 non-null object
interests_house       38137 non-null object
watch_times           38137 non-null object
submit_period         38137 non-null object
years_period          30543 non-null object
tax_free              35260 non-null object
total_price           474301 non-null float64
smeter_price          474301 non-null object
region                474301 non-null object
info_cluster          436164 non-null object
info_flood            436164 non-null object
info_follow           436164 non-null object
dtypes: float64(1), object(21)
memory usage: 79.6+ MB
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.describe()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;474301.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;329.913&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;371.062&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;4.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;143.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;235.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;390.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;60000.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 检查数据维度
print(&amp;quot;训练集特征前的size：&amp;quot;,dataset.shape)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;训练集特征前的size： (474301, 22)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据处理&#34;&gt;数据处理：&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def size_help_func(x):
#     pattern = re.compile(r&#39;\d+&#39;)
#     match = pattern.search(x) 
    x = str(x)
    x = x.replace(&#39;平方米&#39;,&#39;&#39;)
    x = x.replace(&#39;平米&#39;,&#39;&#39;)
    x = x.replace(&#39;米&#39;,&#39;&#39;)
    
    if ((&#39;室&#39; in x) | (&#39;厅&#39; in x)|(x==&#39;nan&#39;)|(&#39;车位&#39; in x)|(&#39;房&#39; in x)|(&#39;墅&#39; in x)):
        num = 0
    else:
        num = float(x)

#     if (&#39;米&#39; in (x))==True:
#         x = x.replace(&#39;平米&#39;,&#39;&#39;)
#         num = float(x.strip())
        
#     else:
#         num = 0

    return num

def info_func(x):
    
    if &#39;平米&#39; in str(x):
        a = x.split(&#39;平米&#39;)[0].split(&#39;|&#39;)[-1].strip()
        if len(a)&amp;gt;1 :
            num = a
        else:
            num = 0.0
    else:
        num = 0.0
    return num
    
def size_func(x,y):
    a = size_help_func(x)
    b = info_func(y)
    
    if a == 0.0:
        if (&#39;车位&#39; not in str(b)):
            num = float(b)
        else:
            num = a
    else:
        num =a
    
    return num

def size_addcata_func(a):
#     a = watch_time_func(x)
    if a &amp;lt;= 10:
        label = str(1)
    else:
        label = str(0)
    return label


def watch_time_func(x):
    if str(x) == &#39;nan&#39;:
        num = -1
    else:
        a = x.split(&#39;次&#39;)[0].strip()
        num = int(a)
    return num

def watch_time_addcata_func(x):
#     a = watch_time_func(x)
    if x == -1:
        label = str(1)
    else:
        label = str(0)
    return label

def interests_house_func(x):
    if str(x) == &#39;nan&#39;:
        num = -1
    else:
        a = x.split(&#39;人&#39;)[0].strip()
        num = int(a)
    return num

def interests_house_addcata_func(x):
#     a = interests_house_func(x)
    if x == -1:
        label = str(1)
    else:
        label = str(0)
    return label

def submit_period_func(x):
    if str(x) == &#39;nan&#39;:
        num = -1
    elif &#39;刚刚&#39; in str(x):
        num = 0
    elif &#39;年&#39; in str(x):
        a = x.split(&#39;年&#39;)[0].strip()
        if a == &#39;一&#39;:
            num = 365
        elif a == &#39;二&#39;:
            num = 730
        else:
            num = 1000
    elif &#39;个月&#39; in x:
        a = x.split(&#39;个月&#39;)[0].strip()
        num = int(a)* 30
    elif &#39;天&#39; in x:
        a = x.split(&#39;天&#39;)[0].strip()
        num = int(a)
    else:
        num = -2
    return num

def submit_period_addcata_func(x):
    a = submit_period_func(x)
    if a == -2:
        label = 3
    elif a == -1:
        label = 2
    elif a == 1000:
        label = 1
    else:
        label = 0
    return str(label)

def years_period_func(x):
    if str(x) == &#39;nan&#39;:
        label = str(0)
    else:
        label = str(1)
    return label
# def tax_free_func(x):
#     if str(x) == &#39;nan&#39;:
#         label = str(0)
#     else:
#         label = str(1)
#     return label

def smeter_price_func(x):
    a = x.split(&#39;元&#39;)[0].replace(&#39;单价&#39;,&#39;&#39;)
    if len(a) &amp;lt;= 3:
        num = -1
    else:
        num = int(a)
    return num

def direction_func(x,y,z):
    x = str(x)
    y = str(y)
    z = str(z)
    dir_list = [&#39;东&#39;,&#39;西&#39;,&#39;南&#39;,&#39;北&#39;]
    if ((dir_list[0] in x)|(dir_list[1] in x)|(dir_list[2] in x)|(dir_list[3] in x)):
        label = x
    elif (dir_list[0] in y)|(dir_list[1] in y)|(dir_list[2] in y)|(dir_list[3] in y):
        label = y
    elif (dir_list[0] in z)|(dir_list[1] in z)|(dir_list[2] in z)|(dir_list[3] in z):
        a = z.split(&#39;|&#39;)
        for value in a:
            if (dir_list[0] in value)|(dir_list[1] in value)|(dir_list[2] in value)|(dir_list[3] in value):
                label = value
            else:
                label = &#39;nodata&#39;
    else:
        label = &#39;nodata&#39;
    
    return label

def decoration_func(x,y,z):
    x = str(x)
    y = str(y)
    z = str(z)
    dir_list = [&#39;精装&#39;, &#39;其他&#39;, &#39;毛坯&#39;, &#39;简装&#39;]
    if ((dir_list[0] in x)|(dir_list[1] in x)|(dir_list[2] in x)|(dir_list[3] in x)):
        label = x.strip()
    elif (dir_list[0] in y)|(dir_list[1] in y)|(dir_list[2] in y)|(dir_list[3] in y):
        label = y.strip()
    elif (dir_list[0] in z)|(dir_list[1] in z)|(dir_list[2] in z)|(dir_list[3] in z):
        a = z.split(&#39;|&#39;)
        for value in a:
            if (dir_list[0] in value)|(dir_list[1] in value)|(dir_list[2] in value)|(dir_list[3] in value):
                label = value.strip()
            else:
                label = &#39;nodata&#39;
    else:
        label = &#39;nodata&#39;
        
    return label

def elevator_func(x,y,z):
    &#39;&#39;&#39;
    x-decoration_house
    y-elevator_house
    z-info_cluster
    &#39;&#39;&#39;
    x = str(x)
    y = str(y)
    z = str(z)
    dir_list = [&#39;有电梯&#39;, &#39;无电梯&#39;]
    if (dir_list[0] in x)|(dir_list[1] in x):
        label = x.strip()
    elif (dir_list[0] in y)|(dir_list[1] in y):
        label = y.strip()
    elif (dir_list[0] in z)|(dir_list[1] in z):
        a = z.split(&#39;|&#39;)
        for value in a:
            if (dir_list[0] in value)|(dir_list[1] in value):
                label = value.strip()
            else:
                label = &#39;nodata&#39;
    else:
        label = &#39;nodata&#39;
    return label

def floor_type_func(x):
    x = str(x)
    if &#39;共&#39; in x:
        a = x.split(&#39;(&#39;)[0]
        label = a
    elif &#39;层&#39; in x:
        a = x.split(&#39;层&#39;)[0]
        a = int(a)
        if a &amp;lt;=1:
            label = &#39;底层&#39;
        elif (a &amp;gt;1)|(a&amp;lt;6):
            label = &#39;低楼层&#39;
        elif (a &amp;gt;=6)|(a&amp;lt;15):
            label = &#39;中楼层&#39;
        else:
            label = &#39;高楼层&#39;
    elif &#39;平房&#39; in x:
        label = &#39;底层&#39;
    elif x == &#39;nan&#39;:
        label = &#39;nodata&#39;
    else:
        label = &#39;nodata&#39;
    return label

def years_house_type_func(x,y):
    x = str(x)
    y = str(y)
    type_list = [&#39;板塔&#39;,&#39;板&#39;,&#39;塔&#39;,&#39;平房&#39;,&#39;叠&#39;]
    if (type_list[0] in x)|(type_list[0] in y):
        label = &#39;板塔&#39;
    elif (type_list[1] in x)|(type_list[1] in y):
        label = &#39;板&#39;
    elif (type_list[2] in x)|(type_list[2] in y):
        label = &#39;塔&#39;
    elif (type_list[3] in x)|(type_list[3] in y):
        label = &#39;平房&#39;
    elif (type_list[4] in x)|(type_list[4] in y):
        label = &#39;别墅&#39;
    else:
        label = &#39;nodata&#39;
    return label

def years_house_year_func(x,y):
    x = str(x)
    y = str(y)
    if (&#39;年&#39; in x):
        a = x.split(&#39;年&#39;)[0].replace(&#39;\&#39;&#39;,&#39;&#39;).strip()
        num = int(a)
    elif (&#39;年&#39; in y):
        a = y.split(&#39;年&#39;)[0].replace(&#39;\&#39;&#39;,&#39;&#39;).strip()
        num = int(a)
    else:
        num = None
        
    return num



&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([&#39;introduction_house&#39;, &#39;community_house&#39;, &#39;href_house&#39;, &#39;unit_house&#39;,
       &#39;size_house&#39;, &#39;direction_house&#39;, &#39;decoration_house&#39;, &#39;elevator_house&#39;,
       &#39;type_house&#39;, &#39;years_house&#39;, &#39;area_house&#39;, &#39;interests_house&#39;,
       &#39;watch_times&#39;, &#39;submit_period&#39;, &#39;years_period&#39;, &#39;tax_free&#39;,
       &#39;total_price&#39;, &#39;smeter_price&#39;, &#39;region&#39;, &#39;info_cluster&#39;, &#39;info_flood&#39;,
       &#39;info_follow&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;submit_period&#39;].apply(submit_period_func)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0        -1
1        -1
2        -1
3        -1
4        -1
5        -1
6        -1
7        -1
8        -1
9        -1
10       -1
11       -1
12       -1
13       -1
14       -1
15       -1
16       -1
17       -1
18       -1
19       -1
20       -1
21       -1
22       -1
23       -1
24       -1
25       -1
26       -1
27       -1
28       -1
29       -1
         ..
474271   -1
474272   -1
474273   -1
474274   -1
474275   -1
474276   -1
474277   -1
474278   -1
474279   -1
474280   -1
474281   -1
474282   -1
474283   -1
474284   -1
474285   -1
474286   -1
474287   -1
474288   -1
474289   -1
474290   -1
474291   -1
474292   -1
474293   -1
474294   -1
474295   -1
474296   -1
474297   -1
474298   -1
474299   -1
474300   -1
Name: submit_period, Length: 474301, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;years_house_year_edit1&#39;] = list(map(lambda x, y: years_house_year_func(x,y), dataset[&#39;type_house&#39;],dataset[&#39;years_house&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;size_house_edit1&#39;] = list(map(lambda x, y: size_func(x,y), dataset[&#39;unit_house&#39;],dataset[&#39;info_cluster&#39;]))
dataset[&#39;size_house_edit1_addcata&#39;] = dataset[&#39;size_house_edit1&#39;].apply(size_addcata_func)

dataset[&#39;watch_time_edit1&#39;] = dataset[&#39;watch_times&#39;].apply(watch_time_func)
dataset[&#39;watch_time_edit1_addcata&#39;] = dataset[&#39;watch_time_edit1&#39;].apply(watch_time_addcata_func)

dataset[&#39;interests_house_edit1&#39;] = dataset[&#39;interests_house&#39;].apply(interests_house_func)
dataset[&#39;interests_house_edit1_addcata&#39;] = dataset[&#39;interests_house_edit1&#39;].apply(interests_house_addcata_func)

dataset[&#39;submit_period_edit1&#39;] = dataset[&#39;submit_period&#39;].apply(submit_period_func)
dataset[&#39;submit_period_edit1_addcata&#39;] = dataset[&#39;submit_period&#39;].apply(submit_period_addcata_func)
dataset[&#39;years_period_edit1&#39;] = dataset[&#39;years_period&#39;].apply(years_period_func)
dataset[&#39;tax_free_edit1&#39;] = dataset[&#39;tax_free&#39;].apply(years_period_func)

dataset[&#39;smeter_price_edit1&#39;] = dataset[&#39;smeter_price&#39;].apply(smeter_price_func)

dataset[&#39;direction_edit1&#39;] = list(map(lambda x, y, z: direction_func(x,y,z), dataset[&#39;direction_house&#39;],dataset[&#39;decoration_house&#39;],dataset[&#39;info_cluster&#39;]))
dataset[&#39;decoration_edit1&#39;] = list(map(lambda x, y, z: decoration_func(x,y,z), dataset[&#39;direction_house&#39;],dataset[&#39;decoration_house&#39;],dataset[&#39;info_cluster&#39;]))
dataset[&#39;elevator_edit1&#39;] = list(map(lambda x, y, z: elevator_func(x,y,z), dataset[&#39;decoration_house&#39;],dataset[&#39;elevator_house&#39;],dataset[&#39;info_cluster&#39;]))

dataset[&#39;type_house_edit1&#39;] = dataset[&#39;type_house&#39;].apply(floor_type_func)
dataset[&#39;years_house_type_edit1&#39;] = list(map(lambda x, y: years_house_type_func(x,y), dataset[&#39;type_house&#39;],dataset[&#39;years_house&#39;]))
dataset[&#39;years_house_year_edit1&#39;] = list(map(lambda x, y: years_house_year_func(x,y), dataset[&#39;type_house&#39;],dataset[&#39;years_house&#39;]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&#39;房屋小区类型：&#39;, len(dataset[&#39;community_house&#39;].unique()));

print(&#39;房屋户型：&#39;, len(dataset[&#39;unit_house&#39;].unique()))

print(&#39;房屋面积：&#39;, &#39;max:&#39;,max(dataset[&#39;size_house_edit1&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;size_house_edit1&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;size_house_edit1&#39;]==0.]))

print(&#39;房屋朝向：&#39;, len(dataset[&#39;direction_house&#39;].unique()))

print(&#39;看房次数：&#39;, &#39;max:&#39;,max(dataset[&#39;watch_time_edit1&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;watch_time_edit1&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;watch_time_edit1&#39;]==-1]))

print(&#39;收藏次数：&#39;, &#39;max:&#39;,max(dataset[&#39;interests_house_edit1&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;interests_house_edit1&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;interests_house_edit1&#39;]==-1]))

print(&#39;多久前发布：&#39;, &#39;max:&#39;,max(dataset[&#39;submit_period_edit1&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;submit_period_edit1&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;submit_period_edit1&#39;]==-1]))

print(&#39;多久前发布的类型：&#39;, len(dataset[&#39;submit_period_edit1_addcata&#39;].unique()))
print(&#39;2年产权类型：&#39;, len(dataset[&#39;years_period_edit1&#39;].unique()))
print(&#39;5年产权类型：&#39;, len(dataset[&#39;tax_free_edit1&#39;].unique()))

print(&#39;总价：&#39;, &#39;max:&#39;,max(dataset[&#39;total_price&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;total_price&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;total_price&#39;]==-1]))

print(&#39;单位价钱：&#39;, &#39;max:&#39;,max(dataset[&#39;smeter_price_edit1&#39;].unique()),
      &#39;min:&#39;,min(dataset[&#39;smeter_price_edit1&#39;].unique()),
      &#39;空值：&#39;,len(dataset[dataset[&#39;smeter_price_edit1&#39;]==-1]))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;房屋小区类型： 55148
房屋户型： 77
房屋面积： max: 12017.0 min: 0.0 空值： 67263
房屋朝向： 203
看房次数： max: 851 min: -1 空值： 436164
收藏次数： max: 2701 min: -1 空值： 436164
多久前发布： max: 365 min: -1 空值： 436164
多久前发布的类型： 2
2年产权类型： 2
5年产权类型： 2
总价： max: 60000.0 min: 4.0 空值： 0
总价： max: 199984 min: -1 空值： 2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[dataset[&#39;direction_house&#39;]==&#39;东 南 西 北&#39;][[&#39;info_cluster&#39;,&#39;direction_house&#39;,&#39;decoration_house&#39;,&#39;info_flood&#39;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;info_cluster&lt;/th&gt;
      &lt;th&gt;direction_house&lt;/th&gt;
      &lt;th&gt;decoration_house&lt;/th&gt;
      &lt;th&gt;info_flood&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;337737&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342204&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342205&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;毛坯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342234&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;353429&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;353431&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;353447&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;无电梯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;354963&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;354965&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;359978&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;360325&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;360482&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;365587&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;365752&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;366365&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;367228&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371544&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371572&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;毛坯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371614&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371670&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371926&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371928&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371951&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371971&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;371972&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;372001&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;372042&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;毛坯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;372058&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;372074&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;毛坯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;372087&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;457320&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;457803&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;458709&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;458729&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;458986&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;459079&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;459329&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;461873&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;462182&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;463843&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;464149&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;464420&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;毛坯&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;466154&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;466251&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;466384&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;466511&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;466682&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;467575&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;467610&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468418&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468430&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468437&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468438&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468472&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;468798&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;470970&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;471830&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;简装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;471920&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;472977&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;473544&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;东 南 西 北&lt;/td&gt;
      &lt;td&gt;精装&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;130 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;info_flood&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;高楼层(共9层)2008年建板塔结合  -  &#39;, &#39;上叠(共4层)2008年建暂无数据  -  &#39;,
       &#39;高楼层(共16层)2013年建板楼  -  &#39;, ..., &#39;低楼层(共4层)2009年建塔楼  -  &#39;,
       &#39;中楼层(共38层)2015年建塔楼  -  &#39;, &#39;1层2005年建塔楼  -  &#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;type_house&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([nan, &#39;2层&#39;, &#39;顶层(共6层)&#39;, &#39;底层(共2层)&#39;, &#39;高楼层(共6层)&#39;, &#39;中楼层(共17层)&#39;,
       &#39;顶层(共9层)&#39;, &#39;低楼层(共16层)&#39;, &#39;高楼层(共16层)&#39;, &#39;高楼层(共7层)&#39;, &#39;低楼层(共3层)&#39;, &#39;3层&#39;,
       &#39;中楼层(共5层)&#39;, &#39;底层(共9层)&#39;, &#39;中楼层(共10层)&#39;, &#39;中楼层(共4层)&#39;, &#39;中楼层(共6层)&#39;,
       &#39;底层(共3层)&#39;, &#39;5层&#39;, &#39;底层(共1层)&#39;, &#39;顶层(共3层)&#39;, &#39;高楼层(共15层)&#39;, &#39;中楼层(共9层)&#39;,
       &#39;低楼层(共11层)&#39;, &#39;高楼层(共13层)&#39;, &#39;底层(共6层)&#39;, &#39;底层(共15层)&#39;, &#39;底层(共11层)&#39;,
       &#39;低楼层(共17层)&#39;, &#39;顶层(共2层)&#39;, &#39;顶层(共5层)&#39;, &#39;低楼层(共15层)&#39;, &#39;顶层(共16层)&#39;,
       &#39;高楼层(共10层)&#39;, &#39;低楼层(共9层)&#39;, &#39;中楼层(共15层)&#39;, &#39;顶层(共14层)&#39;, &#39;中楼层(共13层)&#39;,
       &#39;中楼层(共20层)&#39;, &#39;低楼层(共18层)&#39;, &#39;高楼层(共9层)&#39;, &#39;底层(共5层)&#39;, &#39;中楼层(共14层)&#39;,
       &#39;底层(共16层)&#39;, &#39;低楼层(共13层)&#39;, &#39;顶层(共4层)&#39;, &#39;低楼层(共10层)&#39;, &#39;底层(共4层)&#39;,
       &#39;底层(共18层)&#39;, &#39;低楼层(共6层)&#39;, &#39;顶层(共8层)&#39;, &#39;高楼层(共18层)&#39;, &#39;中楼层(共18层)&#39;,
       &#39;顶层(共17层)&#39;, &#39;中楼层(共11层)&#39;, &#39;底层(共12层)&#39;, &#39;高楼层(共12层)&#39;, &#39;顶层(共11层)&#39;,
       &#39;高楼层(共17层)&#39;, &#39;顶层(共12层)&#39;, &#39;中楼层(共12层)&#39;, &#39;中楼层(共7层)&#39;, &#39;底层(共14层)&#39;,
       &#39;中楼层(共16层)&#39;, &#39;高楼层(共14层)&#39;, &#39;低楼层(共14层)&#39;, &#39;低楼层(共7层)&#39;, &#39;顶层(共7层)&#39;,
       &#39;地下室(共6层)&#39;, &#39;顶层(共13层)&#39;, &#39;低楼层(共12层)&#39;, &#39;底层(共13层)&#39;, &#39;高楼层(共20层)&#39;,
       &#39;低楼层(共24层)&#39;, &#39;4层&#39;, &#39;1层&#39;, &#39;高楼层(共24层)&#39;, &#39;中楼层(共21层)&#39;, &#39;中楼层(共24层)&#39;,
       &#39;高楼层(共19层)&#39;, &#39;顶层(共21层)&#39;, &#39;底层(共19层)&#39;, &#39;底层(共21层)&#39;, &#39;高楼层(共8层)&#39;,
       &#39;2013年建板楼&#39;, &#39;中楼层(共8层)&#39;, &#39;中楼层(共25层)&#39;, &#39;低楼层(共25层)&#39;, &#39;底层(共25层)&#39;,
       &#39;低楼层(共26层)&#39;, &#39;底层(共24层)&#39;, &#39;顶层(共27层)&#39;, &#39;高楼层(共22层)&#39;, &#39;6层&#39;,
       &#39;低楼层(共22层)&#39;, &#39;中楼层(共28层)&#39;, &#39;中楼层(共27层)&#39;, &#39;顶层(共23层)&#39;, &#39;中楼层(共26层)&#39;,
       &#39;高楼层(共28层)&#39;, &#39;低楼层(共27层)&#39;, &#39;高楼层(共27层)&#39;, &#39;低楼层(共23层)&#39;, &#39;底层(共28层)&#39;,
       &#39;底层(共26层)&#39;, &#39;顶层(共24层)&#39;, &#39;低楼层(共28层)&#39;, &#39;中楼层(共23层)&#39;, &#39;顶层(共10层)&#39;,
       &#39;高楼层(共23层)&#39;, &#39;2013年建暂无数据&#39;, &#39;低楼层(共20层)&#39;, &#39;底层(共10层)&#39;, &#39;高楼层(共25层)&#39;,
       &#39;高楼层(共11层)&#39;, &#39;高楼层(共26层)&#39;, &#39;低楼层(共21层)&#39;, &#39;底层(共20层)&#39;, &#39;高楼层(共21层)&#39;,
       &#39;中楼层(共19层)&#39;, &#39;2011年建板塔结合&#39;, &#39;2015年建板楼&#39;, &#39;2012年建板楼&#39;, &#39;11层&#39;,
       &#39;2012年建暂无数据&#39;, &#39;低楼层(共19层)&#39;, &#39;顶层(共18层)&#39;, &#39;2014年建板楼&#39;, &#39;2012年建板塔结合&#39;,
       &#39;2013年建板塔结合&#39;, &#39;中楼层(共29层)&#39;, &#39;地下室(共3层)&#39;, &#39;顶层(共15层)&#39;, &#39;上叠(共5层)&#39;,
       &#39;顶层(共20层)&#39;, &#39;9层&#39;, &#39;下叠(共5层)&#39;, &#39;低楼层(共8层)&#39;, &#39;2011年建暂无数据&#39;, &#39;顶层(共25层)&#39;,
       &#39;底层(共8层)&#39;, &#39;底层(共7层)&#39;, &#39;地下室(共15层)&#39;, &#39;2013年建塔楼&#39;, &#39;地下室(共7层)&#39;,
       &#39;地下室(共10层)&#39;, &#39;15层&#39;, &#39;下叠(共4层)&#39;, &#39;地下室(共2层)&#39;, &#39;上叠(共6层)&#39;, &#39;地下室(共4层)&#39;,
       &#39;上叠(共4层)&#39;, &#39;上叠(共3层)&#39;, &#39;底层(共22层)&#39;, &#39;底层(共17层)&#39;, &#39;地下室(共5层)&#39;, &#39;8层&#39;,
       &#39;中楼层(共22层)&#39;, &#39;2009年建暂无数据&#39;, &#39;低楼层(共36层)&#39;, &#39;中楼层(共36层)&#39;, &#39;顶层(共22层)&#39;,
       &#39;顶层(共19层)&#39;, &#39;7层&#39;, &#39;低楼层(共31层)&#39;, &#39;中楼层(共31层)&#39;, &#39;高楼层(共31层)&#39;, &#39;12层&#39;,
       &#39;2012年建塔楼&#39;, &#39;底层(共27层)&#39;, &#39;2008年建板楼&#39;, &#39;地下室(共18层)&#39;, &#39;中楼层(共30层)&#39;,
       &#39;18层&#39;, &#39;2014年建塔楼&#39;, &#39;2014年建暂无数据&#39;, &#39;低楼层(共29层)&#39;, &#39;2016年建板塔结合&#39;,
       &#39;中楼层(共33层)&#39;, &#39;2015年建暂无数据&#39;, &#39;高楼层(共29层)&#39;, &#39;低楼层(共33层)&#39;, &#39;高楼层(共33层)&#39;,
       &#39;低楼层(共34层)&#39;, &#39;高楼层(共34层)&#39;, &#39;顶层(共34层)&#39;, &#39;中楼层(共34层)&#39;, &#39;底层(共29层)&#39;,
       &#39;顶层(共28层)&#39;, &#39;低楼层(共30层)&#39;, &#39;顶层(共26层)&#39;, &#39;底层(共30层)&#39;, &#39;高楼层(共30层)&#39;,
       &#39;顶层(共29层)&#39;, &#39;顶层(共30层)&#39;, &#39;地下室(共12层)&#39;, &#39;中楼层(共32层)&#39;, &#39;高楼层(共32层)&#39;,
       &#39;2007年建板塔结合&#39;, &#39;低楼层(共32层)&#39;, &#39;顶层(共32层)&#39;, &#39;底层(共31层)&#39;, &#39;2001年建板楼&#39;,
       &#39;暂无数据&#39;, &#39;19层&#39;, &#39;2012年建平房&#39;, &#39;平房&#39;, &#39;2014年建平房&#39;, &#39;2016年建暂无数据&#39;, &#39;14层&#39;,
       &#39;2008年建板塔结合&#39;, &#39;地下室(共8层)&#39;, &#39;底层(共32层)&#39;, &#39;地下室(共11层)&#39;, &#39;2010年建暂无数据&#39;,
       &#39;低楼层(共35层)&#39;, &#39;低楼层(共40层)&#39;, &#39;顶层(共35层)&#39;, &#39;中楼层(共35层)&#39;, &#39;高楼层(共40层)&#39;,
       &#39;高楼层(共35层)&#39;, &#39;2011年建板楼&#39;, &#39;2005年建板楼&#39;, &#39;2007年建板楼&#39;, &#39;2010年建板楼&#39;,
       &#39;2009年建板楼&#39;, &#39;2006年建板楼&#39;, &#39;底层(共23层)&#39;, &#39;2009年建板塔结合&#39;, &#39;2005年建暂无数据&#39;,
       &#39;2006年建暂无数据&#39;, &#39;2002年建板塔结合&#39;, &#39;2004年建暂无数据&#39;, &#39;地下室(共9层)&#39;, &#39;2006年建塔楼&#39;,
       &#39;2008年建暂无数据&#39;, &#39;地下室(共14层)&#39;, &#39;2014年建板塔结合&#39;, &#39;2004年建板楼&#39;, &#39;2005年建塔楼&#39;,
       &#39;地下室(共16层)&#39;, &#39;16层&#39;, &#39;低楼层(共63层)&#39;, &#39;底层(共33层)&#39;, &#39;板楼&#39;, &#39;2006年建板塔结合&#39;,
       &#39;2007年建暂无数据&#39;, &#39;中楼层(共57层)&#39;, &#39;高楼层(共57层)&#39;, &#39;中楼层(共42层)&#39;, &#39;低楼层(共42层)&#39;,
       &#39;高楼层(共42层)&#39;, &#39;中楼层(共63层)&#39;, &#39;27层&#39;, &#39;板塔结合&#39;, &#39;地下室(共0层)&#39;, &#39;2010年建塔楼&#39;,
       &#39;2011年建塔楼&#39;, &#39;21层&#39;, &#39;20层&#39;, &#39;25层&#39;, &#39;顶层(共33层)&#39;, &#39;17层&#39;, &#39;2004年建塔楼&#39;,
       &#39;底层(共35层)&#39;, &#39;底层(共34层)&#39;, &#39;顶层(共31层)&#39;, &#39;2009年建塔楼&#39;, &#39;2008年建塔楼&#39;,
       &#39;地下室(共21层)&#39;, &#39;地下室(共28层)&#39;, &#39;地下室(共1层)&#39;, &#39;中楼层(共37层)&#39;, &#39;28层&#39;,
       &#39;低楼层(共37层)&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[dataset[&#39;type_house&#39;]==&#39;地下室(共21层)&#39;][[&#39;type_house&#39;,&#39;years_house&#39;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;type_house&lt;/th&gt;
      &lt;th&gt;years_house&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;469271&lt;/th&gt;
      &lt;td&gt;地下室(共21层)&lt;/td&gt;
      &lt;td&gt;1991年建塔楼&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;years_house&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([nan, &#39;2010年建暂无数据&#39;, &#39;2012年建暂无数据&#39;, &#39;2011年建暂无数据&#39;, &#39;2015年建暂无数据&#39;,
       &#39;2009年建暂无数据&#39;, &#39;2006年建暂无数据&#39;, &#39;暂无数据&#39;, &#39;2016年建暂无数据&#39;, &#39;2004年建暂无数据&#39;,
       &#39;2017年建暂无数据&#39;, &#39;2014年建暂无数据&#39;, &#39;1998年建暂无数据&#39;, &#39;2013年建板楼&#39;, &#39;2013年建暂无数据&#39;,
       &#39;2011年建板楼&#39;, &#39;2005年建板楼&#39;, &#39;2011年建塔楼&#39;, &#39;板楼&#39;, &#39;2008年建暂无数据&#39;,
       &#39;2001年建暂无数据&#39;, &#39;2008年建板楼&#39;, &#39;1979年建板楼&#39;, &#39;2015年建板楼&#39;, &#39;2004年建板楼&#39;,
       &#39;1992年建板楼&#39;, &#39;1985年建暂无数据&#39;, &#39;1997年建板楼&#39;, &#39;2002年建板楼&#39;, &#39;1996年建暂无数据&#39;,
       &#39;2006年建板楼&#39;, &#39;2015年建塔楼&#39;, &#39;2012年建板楼&#39;, &#39;2003年建暂无数据&#39;, &#39;1986年建板楼&#39;,
       &#39;1995年建板楼&#39;, &#39;1986年建暂无数据&#39;, &#39;2010年建板楼&#39;, &#39;1981年建暂无数据&#39;, &#39;1993年建板楼&#39;,
       &#39;1989年建板楼&#39;, &#39;1995年建板塔结合&#39;, &#39;2003年建板楼&#39;, &#39;1998年建板楼&#39;, &#39;2007年建板楼&#39;,
       &#39;2007年建暂无数据&#39;, &#39;1997年建暂无数据&#39;, &#39;2014年建板楼&#39;, &#39;2016年建板楼&#39;, &#39;1999年建板楼&#39;,
       &#39;2001年建板楼&#39;, &#39;2000年建板楼&#39;, &#39;1996年建板楼&#39;, &#39;2005年建板塔结合&#39;, &#39;1987年建板楼&#39;,
       &#39;2006年建塔楼&#39;, &#39;2006年建板塔结合&#39;, &#39;1970年建板楼&#39;, &#39;1990年建板楼&#39;, &#39;1980年建板楼&#39;,
       &#39;1982年建板楼&#39;, &#39;1994年建板楼&#39;, &#39;1983年建板楼&#39;, &#39;1985年建板楼&#39;, &#39;1991年建板楼&#39;,
       &#39;1988年建板楼&#39;, &#39;2003年建塔楼&#39;, &#39;2009年建板楼&#39;, &#39;1981年建板楼&#39;, &#39;2017年建板楼&#39;,
       &#39;2016年建板塔结合&#39;, &#39;2015年建板塔结合&#39;, &#39;1958年建暂无数据&#39;, &#39;1975年建板楼&#39;, &#39;1984年建板楼&#39;,
       &#39;1966年建板楼&#39;, &#39;2013年建板塔结合&#39;, &#39;2013年建塔楼&#39;, &#39;1988年建塔楼&#39;, &#39;1980年建塔楼&#39;,
       &#39;2001年建塔楼&#39;, &#39;2010年建板塔结合&#39;, &#39;2016年建塔楼&#39;, &#39;2012年建塔楼&#39;, &#39;2005年建暂无数据&#39;,
       &#39;2017年建塔楼&#39;, &#39;2012年建板塔结合&#39;, &#39;2009年建板塔结合&#39;, &#39;2014年建塔楼&#39;, &#39;2014年建板塔结合&#39;,
       &#39;1999年建暂无数据&#39;, &#39;2007年建板塔结合&#39;, &#39;2008年建板塔结合&#39;, &#39;2010年建塔楼&#39;, &#39;2011年建板塔结合&#39;,
       &#39;板塔结合&#39;, &#39;2007年建塔楼&#39;, &#39;2009年建塔楼&#39;, &#39;2004年建板塔结合&#39;, &#39;2000年建暂无数据&#39;,
       &#39;2008年建塔楼&#39;, &#39;1995年建暂无数据&#39;, &#39;2003年建板塔结合&#39;, &#39;1988年建暂无数据&#39;, &#39;2002年建暂无数据&#39;,
       &#39;1992年建暂无数据&#39;, &#39;1989年建暂无数据&#39;, &#39;2000年建板塔结合&#39;, &#39;1994年建塔楼&#39;, &#39;1979年建暂无数据&#39;,
       &#39;1980年建暂无数据&#39;, &#39;1984年建暂无数据&#39;, &#39;2001年建板塔结合&#39;, &#39;1994年建暂无数据&#39;,
       &#39;2002年建板塔结合&#39;, &#39;1977年建板楼&#39;, &#39;1975年建暂无数据&#39;, &#39;1976年建板楼&#39;, &#39;2004年建塔楼&#39;,
       &#39;1978年建暂无数据&#39;, &#39;1976年建暂无数据&#39;, &#39;1993年建暂无数据&#39;, &#39;2002年建塔楼&#39;, &#39;1996年建塔楼&#39;,
       &#39;1986年建塔楼&#39;, &#39;1994年建板塔结合&#39;, &#39;1991年建板塔结合&#39;, &#39;2000年建塔楼&#39;, &#39;1999年建塔楼&#39;,
       &#39;1999年建板塔结合&#39;, &#39;塔楼&#39;, &#39;1997年建塔楼&#39;, &#39;1978年建板楼&#39;, &#39;2005年建塔楼&#39;, &#39;1960年建板楼&#39;,
       &#39;1998年建塔楼&#39;, &#39;1995年建塔楼&#39;, &#39;1998年建板塔结合&#39;, &#39;1962年建板楼&#39;, &#39;1996年建板塔结合&#39;,
       &#39;1990年建暂无数据&#39;, &#39;1960年建暂无数据&#39;, &#39;1982年建暂无数据&#39;, &#39;1990年建板塔结合&#39;,
       &#39;1997年建板塔结合&#39;, &#39;1992年建塔楼&#39;, &#39;1964年建板楼&#39;, &#39;1958年建板楼&#39;, &#39;1973年建板楼&#39;,
       &#39;1983年建塔楼&#39;, &#39;1985年建塔楼&#39;, &#39;1987年建塔楼&#39;, &#39;1974年建板楼&#39;, &#39;1984年建塔楼&#39;,
       &#39;1989年建板塔结合&#39;, &#39;1990年建塔楼&#39;, &#39;1991年建塔楼&#39;, &#39;1987年建暂无数据&#39;, &#39;1950年建板楼&#39;,
       &#39;1989年建塔楼&#39;, &#39;1993年建塔楼&#39;, &#39;1963年建板楼&#39;, &#39;1992年建板塔结合&#39;, &#39;1988年建板塔结合&#39;,
       &#39;1984年建板塔结合&#39;, &#39;1985年建板塔结合&#39;, &#39;1993年建板塔结合&#39;, &#39;1983年建板塔结合&#39;,
       &#39;1987年建板塔结合&#39;, &#39;1986年建板塔结合&#39;, &#39;1956年建板楼&#39;, &#39;1954年建板楼&#39;, &#39;1957年建板楼&#39;,
       &#39;1955年建板楼&#39;, &#39;1968年建板楼&#39;, &#39;1978年建板塔结合&#39;, &#39;1959年建板楼&#39;, &#39;1965年建板楼&#39;,
       &#39;1995年建平房&#39;, &#39;1980年建板塔结合&#39;, &#39;1982年建板塔结合&#39;, &#39;1967年建板楼&#39;, &#39;1982年建塔楼&#39;,
       &#39;1963年建板塔结合&#39;, &#39;1970年建板塔结合&#39;, &#39;1981年建塔楼&#39;, &#39;1980年建平房&#39;, &#39;1961年建板楼&#39;,
       &#39;1950年建暂无数据&#39;, &#39;1979年建塔楼&#39;, &#39;1972年建板楼&#39;, &#39;1981年建板塔结合&#39;, &#39;1991年建暂无数据&#39;,
       &#39;1979年建板塔结合&#39;, &#39;1971年建板楼&#39;, &#39;1952年建板楼&#39;, &#39;1953年建板楼&#39;, &#39;1969年建板楼&#39;,
       &#39;1977年建板塔结合&#39;, &#39;1970年建暂无数据&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 474301 entries, 0 to 474300
Data columns (total 39 columns):
introduction_house               474301 non-null object
community_house                  474301 non-null object
href_house                       474301 non-null object
unit_house                       38137 non-null object
size_house                       38137 non-null object
direction_house                  38137 non-null object
decoration_house                 38109 non-null object
elevator_house                   37093 non-null object
type_house                       38137 non-null object
years_house                      38100 non-null object
area_house                       474301 non-null object
interests_house                  38137 non-null object
watch_times                      38137 non-null object
submit_period                    38137 non-null object
years_period                     30543 non-null object
tax_free                         35260 non-null object
total_price                      474301 non-null float64
smeter_price                     474301 non-null object
region                           474301 non-null object
info_cluster                     436164 non-null object
info_flood                       436164 non-null object
info_follow                      436164 non-null object
years_house_year_edit1           37850 non-null float64
size_house_edit1                 474301 non-null float64
size_house_edit1_addcata         474301 non-null object
watch_time_edit1                 474301 non-null int64
watch_time_edit1_addcata         474301 non-null object
interests_house_edit1            474301 non-null int64
interests_house_edit1_addcata    474301 non-null object
submit_period_edit1              474301 non-null int64
submit_period_edit1_addcata      474301 non-null object
years_period_edit1               474301 non-null object
tax_free_edit1                   474301 non-null object
smeter_price_edit1               474301 non-null int64
direction_edit1                  474301 non-null object
decoration_edit1                 474301 non-null object
elevator_edit1                   474301 non-null object
type_house_edit1                 474301 non-null object
years_house_type_edit1           474301 non-null object
dtypes: float64(3), int64(4), object(32)
memory usage: 141.1+ MB
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([&#39;introduction_house&#39;, &#39;community_house&#39;, &#39;href_house&#39;, &#39;unit_house&#39;,
       &#39;size_house&#39;, &#39;direction_house&#39;, &#39;decoration_house&#39;, &#39;elevator_house&#39;,
       &#39;type_house&#39;, &#39;years_house&#39;, &#39;area_house&#39;, &#39;interests_house&#39;,
       &#39;watch_times&#39;, &#39;submit_period&#39;, &#39;years_period&#39;, &#39;tax_free&#39;,
       &#39;total_price&#39;, &#39;smeter_price&#39;, &#39;region&#39;, &#39;info_cluster&#39;, &#39;info_flood&#39;,
       &#39;info_follow&#39;, &#39;years_house_year_edit1&#39;, &#39;size_house_edit1&#39;,
       &#39;size_house_edit1_addcata&#39;, &#39;watch_time_edit1&#39;,
       &#39;watch_time_edit1_addcata&#39;, &#39;interests_house_edit1&#39;,
       &#39;interests_house_edit1_addcata&#39;, &#39;submit_period_edit1&#39;,
       &#39;submit_period_edit1_addcata&#39;, &#39;years_period_edit1&#39;, &#39;tax_free_edit1&#39;,
       &#39;smeter_price_edit1&#39;, &#39;direction_edit1&#39;, &#39;decoration_edit1&#39;,
       &#39;elevator_edit1&#39;, &#39;type_house_edit1&#39;, &#39;years_house_type_edit1&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;feature1 = [&#39;community_house&#39;,&#39;unit_house&#39;,&#39;size_house_edit1&#39;,&#39;size_house_edit1_addcata&#39;,&#39;watch_time_edit1&#39;,&#39;watch_time_edit1_addcata&#39;,&#39;interests_house_edit1&#39;,&#39;interests_house_edit1_addcata&#39;,&#39;submit_period_edit1&#39;,&#39;submit_period_edit1_addcata&#39;,&#39;years_period_edit1&#39;,&#39;tax_free_edit1&#39;,&#39;total_price&#39;,&#39;smeter_price_edit1&#39;,
            &#39;direction_edit1&#39;,&#39;decoration_edit1&#39;,&#39;elevator_edit1&#39;,&#39;type_house_edit1&#39;,&#39;years_house_type_edit1&#39;,&#39;years_house_year_edit1&#39;,&#39;region&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1 = dataset[feature1]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset[&#39;region&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;cd&#39;, &#39;xm&#39;, &#39;sh&#39;, &#39;sz&#39;, &#39;zz&#39;, &#39;qd&#39;, &#39;su&#39;, &#39;cq&#39;, &#39;dl&#39;, &#39;hf&#39;, &#39;sjz&#39;,
       &#39;cs&#39;, &#39;wh&#39;, &#39;nj&#39;, &#39;hz&#39;, &#39;tj&#39;, &#39;gz&#39;, &#39;bj&#39;, &#39;lf&#39;, &#39;jn&#39;, &#39;fs&#39;, &#39;zh&#39;,
       &#39;zs&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;size_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1_addcata&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1_addcata&lt;/th&gt;
      &lt;th&gt;years_period_edit1&lt;/th&gt;
      &lt;th&gt;tax_free_edit1&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;direction_edit1&lt;/th&gt;
      &lt;th&gt;decoration_edit1&lt;/th&gt;
      &lt;th&gt;elevator_edit1&lt;/th&gt;
      &lt;th&gt;type_house_edit1&lt;/th&gt;
      &lt;th&gt;years_house_type_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;麓山国际帕萨迪纳3组&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;98.070&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;250.000&lt;/td&gt;
      &lt;td&gt;25492&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;麓山国际塞尔维蒙&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;206.000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;420.000&lt;/td&gt;
      &lt;td&gt;20389&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;无电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;麓山国际半月湾&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;112.190&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;275.000&lt;/td&gt;
      &lt;td&gt;24512&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;心怡中丝园&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;87.560&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;193.000&lt;/td&gt;
      &lt;td&gt;22043&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;麓山国际茵特拉肯A&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;128.740&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;300.000&lt;/td&gt;
      &lt;td&gt;23303&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 474301 entries, 0 to 474300
Data columns (total 21 columns):
community_house                  474301 non-null object
unit_house                       38137 non-null object
size_house_edit1                 474301 non-null float64
size_house_edit1_addcata         474301 non-null object
watch_time_edit1                 474301 non-null int64
watch_time_edit1_addcata         474301 non-null object
interests_house_edit1            474301 non-null int64
interests_house_edit1_addcata    474301 non-null object
submit_period_edit1              474301 non-null int64
submit_period_edit1_addcata      474301 non-null object
years_period_edit1               474301 non-null object
tax_free_edit1                   474301 non-null object
total_price                      474301 non-null float64
smeter_price_edit1               474301 non-null int64
direction_edit1                  474301 non-null object
decoration_edit1                 474301 non-null object
elevator_edit1                   474301 non-null object
type_house_edit1                 474301 non-null object
years_house_type_edit1           474301 non-null object
years_house_year_edit1           37850 non-null float64
region                           474301 non-null object
dtypes: float64(3), int64(4), object(14)
memory usage: 76.0+ MB
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;绘图分析&#34;&gt;绘图分析&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# # 绘图
# fig, ax = plt.subplots()
# ax.scatter(x = dataset[&#39;GrLivArea&#39;], y = dataset[&#39;total_price&#39;])
# plt.ylabel(&#39;total_price&#39;, fontsize=13)
# plt.xlabel(&#39;GrLivArea&#39;, fontsize=13)
# plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;单变量观察&#34;&gt;单变量观察&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;yjiu = [&#39;community_house&#39;,&#39;unit_house&#39;,&#39;size_house_edit1&#39;,&#39;size_house_edit1_addcata&#39;,&#39;watch_time_edit1&#39;,&#39;watch_time_edit1_addcata&#39;,&#39;interests_house_edit1&#39;,&#39;interests_house_edit1_addcata&#39;,&#39;submit_period_edit1&#39;,&#39;submit_period_edit1_addcata&#39;,&#39;years_period_edit1&#39;,&#39;tax_free_edit1&#39;,&#39;total_price&#39;,&#39;smeter_price_edit1&#39;,&#39;direction_edit1&#39;,&#39;decoration_edit1&#39;,&#39;elevator_edit1&#39;,&#39;type_house_edit1&#39;,&#39;years_house_type_edit1&#39;,&#39;years_house_year_edit1&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(yjiu)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[&#39;community_house&#39;, &#39;unit_house&#39;, &#39;size_house_edit1&#39;, &#39;size_house_edit1_addcata&#39;, &#39;watch_time_edit1&#39;, &#39;watch_time_edit1_addcata&#39;, &#39;interests_house_edit1&#39;, &#39;interests_house_edit1_addcata&#39;, &#39;submit_period_edit1&#39;, &#39;submit_period_edit1_addcata&#39;, &#39;years_period_edit1&#39;, &#39;tax_free_edit1&#39;, &#39;total_price&#39;, &#39;smeter_price_edit1&#39;, &#39;direction_edit1&#39;, &#39;decoration_edit1&#39;, &#39;elevator_edit1&#39;, &#39;type_house_edit1&#39;, &#39;years_house_type_edit1&#39;, &#39;years_house_year_edit1&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;面积-查看次数-收藏次数-发布时间&#34;&gt;面积、查看次数、收藏次数、发布时间&lt;/h5&gt;

&lt;p&gt;房屋面积：size_house_edit1_addcata
查看次数：watch_time_edit1_addcata
感兴趣人数：interests_house_edit1_addcata
多久前发布：submit_period_edit1_addcata&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig1 = plt.figure(figsize=(10,10))
fig1.add_subplot(221)
fg1 = sns.distplot(dataset_used1[dataset_used1[&#39;size_house_edit1_addcata&#39;]==&#39;0&#39;][&#39;size_house_edit1&#39;],bins=1000,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,500))
plt.title(&#39;size&#39;)

fig1.add_subplot(222)
fg2 = sns.distplot(dataset_used1[dataset_used1[&#39;watch_time_edit1_addcata&#39;]==&#39;0&#39;][&#39;watch_time_edit1&#39;],bins=500,kde=False,color=&#39;b&#39;)
fg2.set(xlim=(0,50))
plt.title(&#39;watch_time&#39;)

fig1.add_subplot(223)
fg3 = sns.distplot(dataset_used1[dataset_used1[&#39;interests_house_edit1_addcata&#39;]==&#39;0&#39;][&#39;interests_house_edit1&#39;],bins=1000,kde=False,color=&#39;b&#39;)
fg3.set(xlim=(0,500))
plt.title(&#39;interests_house&#39;)

fig1.add_subplot(224)
fg4 = sns.distplot(dataset_used1[dataset_used1[&#39;submit_period_edit1_addcata&#39;]==&#39;0&#39;][&#39;submit_period_edit1&#39;],bins=200,kde=False,color=&#39;b&#39;)
fg4.set(xlim=(0,100))
plt.title(&#39;submit_period_edit1&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;submit_period_edit1&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_36_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从上面的结果观察，size的分布呈现偏右整体分布；watch_times和interest_house呈现由小到大下降的分布；submit_period呈现非均匀分布状态，发现＞30天以上的数量明显要多很多。&lt;/p&gt;

&lt;h5 id=&#34;2年产权-5年产权-房屋户型&#34;&gt;2年产权、5年产权、房屋户型&lt;/h5&gt;

&lt;p&gt;产权是满足5年：tax_free_edit1&lt;br /&gt;
产权是否满2年：years_period_edit1&lt;br /&gt;
房屋户型：unit_house&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig2_1 = plt.figure(figsize=(10,6))
ax3 = fig2_1.add_subplot(221)

dataset_used1[&#39;tax_free_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;tax_free&#39;)

ax2 = fig2_1.add_subplot(222)
dataset_used1[&#39;years_period_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;years_period&#39;)

ax1 = fig2_1.add_subplot(212)
ax1.margins(0.05)           # Default margin is 0.05, value 0 means fit

dataset_used1[&#39;unit_house&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;unit_house&#39;)


&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;unit_house&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_39_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;观察到2年产权大多数不满足，5年产权的情况类似；房屋类型主要以2室1厅、3室1厅、1室1厅，3室2厅、2室2厅、4室2厅为主。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;unit_house&#39;].value_counts().head(10)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;2室1厅     13889
3室1厅      6080
1室1厅      4770
3室2厅      4339
2室2厅      2524
4室2厅      1670
1室0厅      1105
4室1厅       492
2房间1卫      443
1房间1卫      438
Name: unit_house, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上面结果观察到，2年、5年产权中，没有产权的占比最大，户型类别当中，集中在前十种类型，其中2室1厅占主要&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig2 = plt.figure(figsize=(6,6))
fig2.add_subplot(111)
fg1 = sns.distplot(dataset_used1[&#39;total_price&#39;],bins=1500,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,2000))
plt.title(&#39;total_price&#39;)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;total_price&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_43_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从总价钱的分布当中观察，total_price呈现偏右正态分布。&lt;/p&gt;

&lt;h5 id=&#34;朝向-装修程度-电梯配备-楼层位置-楼型-建成时间&#34;&gt;朝向、装修程度、电梯配备、楼层位置、楼型、建成时间&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#39;direction_edit1&#39;, &#39;decoration_edit1&#39;, &#39;elevator_edit1&#39;, &#39;type_house_edit1&#39;, &#39;years_house_type_edit1&#39;, &#39;years_house_year_edit1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(&#39;direction_edit1&#39;,
 &#39;decoration_edit1&#39;,
 &#39;elevator_edit1&#39;,
 &#39;type_house_edit1&#39;,
 &#39;years_house_type_edit1&#39;,
 &#39;years_house_year_edit1&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 朝向类别——过多不好绘图
dataset_used1[&#39;direction_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;nodata&#39;, &#39; 东 南 西 北&#39;, &#39; 南&#39;, &#39; 南 北&#39;, &#39; 北&#39;, &#39; 西南&#39;, &#39; 东南&#39;, &#39; 东 南&#39;,
       &#39; 东&#39;, &#39; 西北&#39;, &#39; 西&#39;, &#39; 南 西&#39;, &#39; 东北&#39;, &#39; 东南 西北&#39;, &#39; 东 东南&#39;, &#39;南 北&#39;, &#39;东南&#39;,
       &#39;东 南 西 北&#39;, &#39;东 东南 南 西南 西&#39;, &#39;东 南 北&#39;, &#39;南&#39;, &#39;东 西&#39;, &#39;东南 西北&#39;, &#39;东 南&#39;, &#39;西&#39;,
       &#39;东 西 北&#39;, &#39;东北&#39;, &#39;东南 南 北&#39;, &#39;南 西 北&#39;, &#39;西北&#39;, &#39;东 南 西&#39;, &#39;东 北&#39;, &#39;北&#39;, &#39;西南&#39;,
       &#39;东南 北&#39;, &#39;东&#39;, &#39;南 西&#39;, &#39;西 北&#39;, &#39;东南 西南&#39;, &#39;西南 北&#39;, &#39;南 西北&#39;, &#39;东南 西&#39;, &#39;东 西北&#39;,
       &#39;南 西南&#39;, &#39;南 西南 北&#39;, &#39;南 西北 北&#39;, &#39;东 北 东北&#39;, &#39;东 西 东北&#39;, &#39;南 北 东北&#39;,
       &#39;东 东南 南 北&#39;, &#39;东南 西 北&#39;, &#39;西南 东北&#39;, &#39;东南 东北&#39;, &#39;东 东南&#39;, &#39;南 北 西&#39;, &#39;东南 南&#39;,
       &#39;东南 南 西南&#39;, &#39;西 东北&#39;, &#39;南 东&#39;, &#39;北 东北&#39;, &#39;南 北 东&#39;, &#39;西北 北&#39;, &#39;南 东北&#39;, &#39;西南 西&#39;,
       &#39;南 东 北&#39;, &#39;东南 西南 西北&#39;, &#39;东 西南&#39;, &#39;西 西北&#39;, &#39;西 西北 北&#39;, &#39; 东 西&#39;, &#39;南 西 东北&#39;,
       &#39;东 西北 北&#39;, &#39;南 西南 东北&#39;, &#39;西 东&#39;, &#39;北 西南&#39;, &#39;西南 西北&#39;, &#39;东 东南 西北 北&#39;,
       &#39;东南 南 东北&#39;, &#39;东南 南 西北&#39;, &#39;南 西 西北&#39;, &#39;东 西 北 东北&#39;, &#39;南 西南 西 西北 东北&#39;,
       &#39;西南 西北 东北&#39;, &#39;西北 北 东北&#39;, &#39;东南 西南 北&#39;, &#39;东 南 西北&#39;, &#39;西 西南&#39;, &#39;东 东北&#39;,
       &#39;东南 西北 北&#39;, &#39;西北 东北&#39;, &#39;北 西&#39;, &#39;东 西 西北&#39;, &#39;北 东&#39;, &#39;东 东南 南&#39;, &#39;北 南&#39;,
       &#39;东南 西南 东北&#39;, &#39;西南 西 北&#39;, &#39;东 西南 东北&#39;, &#39;东南 西北 东北&#39;, &#39;东 西南 西&#39;, &#39;南 西南 西&#39;,
       &#39;东 西南 北&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 装饰
dataset_used1[&#39;decoration_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;nodata&#39;, &#39;其他&#39;, &#39;毛坯&#39;, &#39;精装&#39;, &#39;简装&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;elevator_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;有电梯&#39;, &#39;无电梯&#39;, &#39;nodata&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;type_house_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;nodata&#39;, &#39;低楼层&#39;, &#39;顶层&#39;, &#39;底层&#39;, &#39;高楼层&#39;, &#39;中楼层&#39;, &#39;地下室&#39;, &#39;上叠&#39;, &#39;下叠&#39;],
      dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;years_house_type_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;nodata&#39;, &#39;板&#39;, &#39;塔&#39;, &#39;板塔&#39;, &#39;别墅&#39;, &#39;平房&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig3 = plt.figure(figsize=(10,10))
fig3.add_subplot(221)
dataset_used1[&#39;decoration_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;decoration_edit1&#39;)

fig3.add_subplot(222)
dataset_used1[&#39;elevator_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;elevator_edit1&#39;)

fig3.add_subplot(223)
dataset_used1[&#39;type_house_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;type_house_edit1&#39;)

fig3.add_subplot(224)
dataset_used1[&#39;years_house_type_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;years_house_type_edit1&#39;)
plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_52_0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;对有数据的情况观察：&lt;br /&gt;
装修以精装&amp;gt;简装&amp;gt;毛坯；&lt;br /&gt;
电梯：有&amp;gt;无
楼层前3：中楼层&amp;gt;低楼层&amp;gt;高楼层
楼类型前3：板&amp;gt;塔&amp;gt;板塔&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig31 = plt.figure(figsize=(10,6))
fig31.add_subplot(111)
dataset_used1[&#39;years_house_year_edit1&#39;].value_counts().plot(kind=&#39;bar&#39;)
plt.title(&#39;years_house_year_edit1&#39;)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;years_house_year_edit1&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_54_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从房屋建造年代看，以2010年建造的为主，其中2003-2005三年最多。&lt;/p&gt;

&lt;h4 id=&#34;多维度分析&#34;&gt;多维度分析&lt;/h4&gt;

&lt;h5 id=&#34;产权和查看次数-收藏次数&#34;&gt;产权和查看次数、收藏次数&lt;/h5&gt;

&lt;p&gt;2年产权的查看次数、收藏次数
5年产权的产看次数、收藏次数
2室1厅户型的具有2年产权查看次数
2室1厅户型的具有5年产权查看次数&lt;/p&gt;

&lt;p&gt;产权是满足5年：tax_free_edit1
产权是否满2年：years_period_edit1
房屋户型：unit_house
收藏次数watch_time_edit1 感兴趣人数：interests_house_edit1&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cond_dataset1 = dataset_used1[dataset_used1[&#39;years_period_edit1&#39;]==&#39;0&#39;][&#39;watch_time_edit1&#39;].value_counts()
fig42 = plt.figure(figsize=(12,12))
fig42.add_subplot(221)
fg1 = sns.distplot(cond_dataset1[1:],bins=200,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,400))
plt.title(&#39;产权是满2年的收藏次数&#39;)

cond_dataset2 = dataset_used1[dataset_used1[&#39;years_period_edit1&#39;]==&#39;0&#39;][&#39;interests_house_edit1&#39;].value_counts()
fig42.add_subplot(222)
fg1 = sns.distplot(cond_dataset2[1:],bins=200,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,200))
plt.title(&#39;产权是满2年的感兴趣人数&#39;)

cond_dataset3 = dataset_used1[dataset_used1[&#39;tax_free_edit1&#39;]==&#39;0&#39;][&#39;watch_time_edit1&#39;].value_counts()
fig42.add_subplot(223)
fg1 = sns.distplot(cond_dataset1[1:],bins=200,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,400))
plt.title(&#39;产权是满5年的收藏次数&#39;)

cond_dataset4 = dataset_used1[dataset_used1[&#39;tax_free_edit1&#39;]==&#39;0&#39;][&#39;interests_house_edit1&#39;].value_counts()
fig42.add_subplot(224)
fg1 = sns.distplot(cond_dataset2[1:],bins=200,kde=False,color=&#39;b&#39;)
fg1.set(xlim=(0,200))
plt.title(&#39;产权是满5年的感兴趣人数&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;产权是满5年的感兴趣人数&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_59_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从上面结果来看，对于产权在2年和5年，收藏次数和关注人数分布以10次以下群体为主。呈现明显偏右分布。&lt;/p&gt;

&lt;h5 id=&#34;户型-产权和查看次数-收藏次数&#34;&gt;户型+产权和查看次数、收藏次数¶&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cond_dataset1 = dataset_used1[(dataset_used1[&#39;unit_house&#39;]==&#39;2室1厅&#39;)&amp;amp;(dataset_used1[&#39;years_period_edit1&#39;]==&#39;0&#39;)][&#39;watch_time_edit1&#39;].value_counts()
fig42 = plt.figure(figsize=(16,8))
fig42.add_subplot(121)
fg1 = sns.barplot(x=cond_dataset1[1:].index, y=cond_dataset1[1:].values)
# fg1.set(xlim=(0,400))
plt.title(&#39;产权是满2年的收藏次数&#39;)

cond_dataset2 = dataset_used1[(dataset_used1[&#39;unit_house&#39;]==&#39;2室1厅&#39;)&amp;amp;(dataset_used1[&#39;years_period_edit1&#39;]==&#39;0&#39;)][&#39;interests_house_edit1&#39;].value_counts()
fig42.add_subplot(122)
fg1 = sns.barplot(x=cond_dataset2[1:].index, y=cond_dataset2[1:].values)
# fg1.set(xlim=(0,200))
plt.title(&#39;产权是满2年的感兴趣人数&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;产权是满2年的感兴趣人数&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_62_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从多条件看，在2室一厅的房型中，2年产权的收藏次数和关注人数均呈现逐渐偏右分布。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;unit_house&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([nan, &#39;4室2厅&#39;, &#39;3室2厅&#39;, &#39;5室3厅&#39;, &#39;2室1厅&#39;, &#39;6室2厅&#39;, &#39;9室9厅&#39;, &#39;2室2厅&#39;,
       &#39;4室1厅&#39;, &#39;3室1厅&#39;, &#39;5室2厅&#39;, &#39;1室1厅&#39;, &#39;3室3厅&#39;, &#39;7室4厅&#39;, &#39;4室3厅&#39;, &#39;6室4厅&#39;,
       &#39;7室3厅&#39;, &#39;7室2厅&#39;, &#39;5室4厅&#39;, &#39;5室1厅&#39;, &#39;1室0厅&#39;, &#39;2室0厅&#39;, &#39;1室2厅&#39;, &#39;车位&#39;,
       &#39;3房间1卫&#39;, &#39;6房间2卫&#39;, &#39;联排别墅&#39;, &#39;2房间1卫&#39;, &#39;1房间1卫&#39;, &#39;5房间2卫&#39;, &#39;2房间2卫&#39;,
       &#39;2房间0卫&#39;, &#39;1房间0卫&#39;, &#39;6室3厅&#39;, &#39;3房间0卫&#39;, &#39;3房间2卫&#39;, &#39;叠拼别墅&#39;, &#39;4房间1卫&#39;,
       &#39;4室4厅&#39;, &#39;4房间2卫&#39;, &#39;3室0厅&#39;, &#39;4室0厅&#39;, &#39;独栋别墅&#39;, &#39;8室3厅&#39;, &#39;双拼别墅&#39;, &#39;8室2厅&#39;,
       &#39;2室3厅&#39;, &#39;9室2厅&#39;, &#39;4室5厅&#39;, &#39;5房间3卫&#39;, &#39;4房间3卫&#39;, &#39;11房间3卫&#39;, &#39;6房间4卫&#39;,
       &#39;6房间3卫&#39;, &#39;9室1厅&#39;, &#39;5房间1卫&#39;, &#39;6室1厅&#39;, &#39;8室4厅&#39;, &#39;9房间3卫&#39;, &#39;9室3厅&#39;, &#39;5房间0卫&#39;,
       &#39;6室0厅&#39;, &#39;7房间2卫&#39;, &#39;5室0厅&#39;, &#39;8室5厅&#39;, &#39;9室4厅&#39;, &#39;7室5厅&#39;, &#39;3房间3卫&#39;, &#39;1房间2卫&#39;,
       &#39;8房间4卫&#39;, &#39;8房间3卫&#39;, &#39;7室0厅&#39;, &#39;5室5厅&#39;, &#39;7室1厅&#39;, &#39;6室5厅&#39;, &#39;6室6厅&#39;, &#39;6房间5卫&#39;],
      dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cond = (dataset_used1[&#39;years_period_edit1&#39;]==&#39;1&#39;)&amp;amp;(dataset_used1[&#39;unit_house&#39;]==&#39;2室1厅&#39;)

dataset_used1[cond][[&#39;interests_house_edit1&#39;,&#39;watch_time_edit1&#39;]].head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;337734&lt;/th&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342189&lt;/th&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342194&lt;/th&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342207&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;342210&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;years_house_type_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;nodata&#39;, &#39;板&#39;, &#39;塔&#39;, &#39;板塔&#39;, &#39;别墅&#39;, &#39;平房&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.ix[337734,:]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;community_house                  龙湖长城源著 
unit_house                          2室1厅
size_house_edit1                   0.000
size_house_edit1_addcata               1
watch_time_edit1                       0
watch_time_edit1_addcata               0
interests_house_edit1                 32
interests_house_edit1_addcata          0
submit_period_edit1                   29
submit_period_edit1_addcata            0
years_period_edit1                     1
tax_free_edit1                         1
total_price                      235.000
smeter_price_edit1                 28266
direction_edit1                       东南
decoration_edit1                      其他
elevator_edit1                    nodata
type_house_edit1                     低楼层
years_house_type_edit1            nodata
years_house_year_edit1          2015.000
region                                bj
Name: 337734, dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;region&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;cd&#39;, &#39;xm&#39;, &#39;sh&#39;, &#39;sz&#39;, &#39;zz&#39;, &#39;qd&#39;, &#39;su&#39;, &#39;cq&#39;, &#39;dl&#39;, &#39;hf&#39;, &#39;sjz&#39;,
       &#39;cs&#39;, &#39;wh&#39;, &#39;nj&#39;, &#39;hz&#39;, &#39;tj&#39;, &#39;gz&#39;, &#39;bj&#39;, &#39;lf&#39;, &#39;jn&#39;, &#39;fs&#39;, &#39;zh&#39;,
       &#39;zs&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;关联分析&#34;&gt;关联分析&lt;/h4&gt;

&lt;p&gt;目标变量，房子单价，smeter_price_edit1。&lt;br /&gt;
不同的面积-单价，size_house_edit1&lt;br /&gt;
不同地区-单价，region&lt;br /&gt;
2年产权-单价，years_period_edit1&lt;br /&gt;
5年产权-单价，tax_free_edit1&lt;br /&gt;
不同户型-单价，unit_house&lt;br /&gt;
**  不同查看次数-单价，watch_time_edit1**&lt;br /&gt;
** 不同收藏次数-单价，interests_house_edit1**&lt;br /&gt;
不同装修程度-单价，decoration_edit1&lt;br /&gt;
** 不同朝向-单价，direction_edit1**&lt;br /&gt;
不同电梯配置-单价，elevator_edit1&lt;br /&gt;
不同楼层位置-单价，type_house_edit1&lt;br /&gt;
不同楼型-单价,years_house_type_edit1&lt;br /&gt;
不同建成时间-单价,years_house_year_edit1&lt;br /&gt;
** 不同小区-单价**&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.groupby(&#39;years_period_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;years_period_edit1
0   31620.411
1   64924.182
Name: smeter_price_edit1, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2年产权-5年产权vs装修程度-户型&#34;&gt;2年产权、5年产权vs装修程度、户型&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig5 = plt.figure(figsize=(10,6))
fig5.suptitle(&#39;2年产权、5年产权、装修程度、户型&#39;)
fig5.add_subplot(231)
dataset_used1.groupby(&#39;years_period_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;2年产权&#39;)

fig5.add_subplot(232)
dataset_used1.groupby(&#39;tax_free_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;5年产权&#39;)

fig5.add_subplot(233)
dataset_used1.groupby(&#39;decoration_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;装修程度&#39;)

fig5.add_subplot(212)
dataset_used1.groupby(&#39;unit_house&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;不同户型&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;不同户型&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_73_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;电梯-楼层-楼型-建成时间单变量统计&#34;&gt;电梯、楼层、楼型、建成时间单变量统计&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig5 = plt.figure(figsize=(10,6))
# plt.tight_layout(pad=1)
fig5.suptitle(&#39;电梯、楼层、楼型、建成时间&#39;)

plt.subplots_adjust(wspace=0.5,hspace=0.5)
fig5.add_subplot(231)
dataset_used1.groupby(&#39;elevator_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;电梯&#39;)

fig5.add_subplot(232)
dataset_used1.groupby(&#39;type_house_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;楼层&#39;)

fig5.add_subplot(233)
dataset_used1.groupby(&#39;years_house_type_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;楼型&#39;)

fig5.add_subplot(212)
dataset_used1.groupby(&#39;years_house_year_edit1&#39;)[&#39;smeter_price_edit1&#39;].mean().plot(kind=&#39;bar&#39;)
plt.title(&#39;建成时间&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;建成时间&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_75_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;连续变量的相关性&#34;&gt;连续变量的相关性&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.corr()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-0.193&lt;/td&gt;
      &lt;td&gt;-0.225&lt;/td&gt;
      &lt;td&gt;-0.269&lt;/td&gt;
      &lt;td&gt;0.373&lt;/td&gt;
      &lt;td&gt;-0.087&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;td&gt;-0.193&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.617&lt;/td&gt;
      &lt;td&gt;0.544&lt;/td&gt;
      &lt;td&gt;0.147&lt;/td&gt;
      &lt;td&gt;0.225&lt;/td&gt;
      &lt;td&gt;-0.017&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;td&gt;-0.225&lt;/td&gt;
      &lt;td&gt;0.617&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.651&lt;/td&gt;
      &lt;td&gt;0.138&lt;/td&gt;
      &lt;td&gt;0.235&lt;/td&gt;
      &lt;td&gt;-0.118&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;td&gt;-0.269&lt;/td&gt;
      &lt;td&gt;0.544&lt;/td&gt;
      &lt;td&gt;0.651&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.217&lt;/td&gt;
      &lt;td&gt;0.287&lt;/td&gt;
      &lt;td&gt;0.026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;td&gt;0.373&lt;/td&gt;
      &lt;td&gt;0.147&lt;/td&gt;
      &lt;td&gt;0.138&lt;/td&gt;
      &lt;td&gt;0.217&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.635&lt;/td&gt;
      &lt;td&gt;0.134&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;td&gt;-0.087&lt;/td&gt;
      &lt;td&gt;0.225&lt;/td&gt;
      &lt;td&gt;0.235&lt;/td&gt;
      &lt;td&gt;0.287&lt;/td&gt;
      &lt;td&gt;0.635&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-0.250&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;-0.017&lt;/td&gt;
      &lt;td&gt;-0.118&lt;/td&gt;
      &lt;td&gt;0.026&lt;/td&gt;
      &lt;td&gt;0.134&lt;/td&gt;
      &lt;td&gt;-0.250&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plt.subplots(figsize=(8,8))
sns.heatmap(dataset_used1.corr(), vmax=1.0, square=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x41616358&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_78_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;异常值检查-size-house-edit1与smeter-price-edit1关系为例&#34;&gt;异常值检查（size_house_edit1与smeter_price_edit1关系为例）&lt;/h5&gt;

&lt;h6 id=&#34;检查&#34;&gt;检查&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
fig, ax = plt.subplots()
ax.scatter(x = dataset_used1.ix[:, &#39;size_house_edit1&#39;], y = dataset_used1.ix[:, &#39;smeter_price_edit1&#39;])
plt.ylabel(&#39;SalePrice&#39;, fontsize=13)
plt.xlabel(&#39;GrLivArea&#39;, fontsize=13)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_80_0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从上面的散点图可看出：右下方的几个数据，living area特别大，但是价格又低的离谱，应该是远离市区的无人地带。对最后的分类结果没有影响的离群点（Oultliers），我们可以放心将其删除。&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;剔除异常点&#34;&gt;剔除异常点&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 删除离群点
dataset_used1 = dataset_used1.drop(dataset_used1[(dataset_used1[&#39;size_house_edit1&#39;]&amp;gt;1900) &amp;amp; (dataset_used1[&#39;smeter_price_edit1&#39;]&amp;lt;1250000)].index)

fig, ax = plt.subplots()
ax.scatter(x = dataset_used1.ix[:, &#39;size_house_edit1&#39;], y = dataset_used1.ix[:, &#39;smeter_price_edit1&#39;])
plt.ylabel(&#39;SalePrice&#39;, fontsize=13)
plt.xlabel(&#39;GrLivArea&#39;, fontsize=13)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_83_0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;目标变量处理-满足整体分布&#34;&gt;目标变量处理——满足整体分布&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;目标值处理：

&lt;ul&gt;
&lt;li&gt;线性的模型需要正态分布的目标值才能发挥最大的作用。我们需要检测房价什么时候偏离正态分布。使用probplot函数，即正态概率图：&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;绘制正态分布图&#34;&gt;绘制正态分布图&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig5 = plt.figure(figsize=(6,6))

sns.distplot(dataset_used1[&#39;smeter_price_edit1&#39;] , fit=norm)
# 正态分布拟合
(mu, sigma) = norm.fit(dataset_used1[&#39;smeter_price_edit1&#39;])
print( &#39;\n mu = {:.2f} and sigma = {:.2f}\n&#39;.format(mu, sigma))

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; mu = 33765.16 and sigma = 22811.23
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_86_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;绘制qq图&#34;&gt;绘制QQ图&lt;/h5&gt;

&lt;p&gt;看是否与理论的一致&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig5 = plt.figure(figsize=(6,6))

# 绘图
plt.legend([&#39;Normal dist. ($\mu=$ {:.2f} and $\sigma=$ {:.2f} )&#39;.format(mu, sigma)],
            loc=&#39;best&#39;)
plt.ylabel(&#39;Frequency&#39;)
plt.title(&#39;SalePrice distribution&#39;)

# 原始数据分布绘图
res = stats.probplot(dataset_used1[&#39;smeter_price_edit1&#39;], plot=plt)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_88_0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从上图结果观察到，与理论分布偏离较大，需要对其进行转换处理，常见的方法可考虑log变换&lt;/p&gt;

&lt;h5 id=&#34;变换处理与查看&#34;&gt;变换处理与查看&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 使用log1p函数完成log(1+x)变换
dataset_used1[&#39;smeter_price_edit1&#39;] = np.log1p(dataset_used1[&#39;smeter_price_edit1&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\ProgramData\Miniconda3\lib\site-packages\ipykernel_launcher.py:2: RuntimeWarning: divide by zero encountered in log1p
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# sns.distplot(dataset_used1[&#39;smeter_price_edit1&#39;] , fit=norm)
# 正态分布拟合
(mu, sigma) = norm.fit(dataset_used1[&#39;smeter_price_edit1&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig6 = plt.figure(figsize=(6,6))

# 绘图
plt.legend([&#39;Normal dist. ($\mu=$ {:.2f} and $\sigma=$ {:.2f} )&#39;.format(mu, sigma)],
            loc=&#39;best&#39;)
plt.ylabel(&#39;Frequency&#39;)
plt.title(&#39;SalePrice distribution&#39;)

# log变换之后的数据分布绘图
res = stats.probplot(dataset_used1[&#39;smeter_price_edit1&#39;], plot=plt)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;C:\ProgramData\Miniconda3\lib\site-packages\numpy\lib\function_base.py:2320: RuntimeWarning: invalid value encountered in subtract
  X -= avg[:, None]
C:\ProgramData\Miniconda3\lib\site-packages\scipy\stats\_distn_infrastructure.py:879: RuntimeWarning: invalid value encountered in greater
  return (self.a &amp;lt; x) &amp;amp; (x &amp;lt; self.b)
C:\ProgramData\Miniconda3\lib\site-packages\scipy\stats\_distn_infrastructure.py:879: RuntimeWarning: invalid value encountered in less
  return (self.a &amp;lt; x) &amp;amp; (x &amp;lt; self.b)
C:\ProgramData\Miniconda3\lib\site-packages\scipy\stats\_distn_infrastructure.py:1821: RuntimeWarning: invalid value encountered in less_equal
  cond2 = cond0 &amp;amp; (x &amp;lt;= self.a)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_93_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;缺失值处理&#34;&gt;缺失值处理&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 474294 entries, 0 to 474300
Data columns (total 21 columns):
community_house                  474294 non-null object
unit_house                       38137 non-null object
size_house_edit1                 474294 non-null float64
size_house_edit1_addcata         474294 non-null object
watch_time_edit1                 474294 non-null int64
watch_time_edit1_addcata         474294 non-null object
interests_house_edit1            474294 non-null int64
interests_house_edit1_addcata    474294 non-null object
submit_period_edit1              474294 non-null int64
submit_period_edit1_addcata      474294 non-null object
years_period_edit1               474294 non-null object
tax_free_edit1                   474294 non-null object
total_price                      474294 non-null float64
smeter_price_edit1               474294 non-null float64
direction_edit1                  474294 non-null object
decoration_edit1                 474294 non-null object
elevator_edit1                   474294 non-null object
type_house_edit1                 474294 non-null object
years_house_type_edit1           474294 non-null object
years_house_year_edit1           37850 non-null float64
region                           474294 non-null object
dtypes: float64(4), int64(3), object(14)
memory usage: 79.6+ MB
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# temp1_1 =dataset_used1.dtypes
# temp2_1 = temp1[temp1==&#39;object&#39;].index
# temp3_1 = dataset_used1[temp2_1]==-1&#39;

all_data_na3 = (dataset_used1[dataset_used1==-1].sum() / len(dataset_used1)) * 100


all_data_na3 = all_data_na3.drop(all_data_na3[all_data_na3 == 0].index).sort_values(ascending=False)[:30]
missing_data3 = pd.DataFrame({&#39;Missing Ratio&#39; :all_data_na3})
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
f, ax = plt.subplots(figsize=(8, 8))
plt.xticks(rotation=&#39;90&#39;)
sns.barplot(x=all_data_na3.index, y=all_data_na3)
plt.xlabel(&#39;Features&#39;, fontsize=15)
plt.ylabel(&#39;Percent of missing values&#39;, fontsize=15)
plt.title(&#39;Percent missing data by feature&#39;, fontsize=15)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;Percent missing data by feature&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_97_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp1 =dataset_used1.dtypes
temp2 = temp1[temp1==&#39;object&#39;].index
temp3 = dataset_used1[temp2]==&#39;nodata&#39;

all_data_na2 = (temp3.sum() / len(dataset_used1[temp2])) * 100
all_data_na2 = all_data_na2.drop(all_data_na2[all_data_na2 == 0].index).sort_values(ascending=False)[:30]
missing_data2 = pd.DataFrame({&#39;Missing Ratio&#39; :all_data_na2})
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
f, ax = plt.subplots(figsize=(8, 8))
plt.xticks(rotation=&#39;90&#39;)
sns.barplot(x=all_data_na2.index, y=all_data_na2)
plt.xlabel(&#39;Features&#39;, fontsize=15)
plt.ylabel(&#39;Percent of missing values&#39;, fontsize=15)
plt.title(&#39;Percent missing data by feature&#39;, fontsize=15)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;Percent missing data by feature&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_99_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_data_na = (dataset_used1.isnull().sum() / len(dataset_used1)) * 100
all_data_na = all_data_na.drop(all_data_na[all_data_na == 0].index).sort_values(ascending=False)[:30]
missing_data = pd.DataFrame({&#39;Missing Ratio&#39; :all_data_na})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
f, ax = plt.subplots(figsize=(8, 8))
plt.xticks(rotation=&#39;90&#39;)
sns.barplot(x=all_data_na.index, y=all_data_na)
plt.xlabel(&#39;Features&#39;, fontsize=15)
plt.ylabel(&#39;Percent of missing values&#39;, fontsize=15)
plt.title(&#39;Percent missing data by feature&#39;, fontsize=15)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text(0.5,1,&#39;Percent missing data by feature&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/lianjia_data_science/output_101_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;由上面可知道，主要包含有nodata的数据的变量如下，&lt;br /&gt;
unit_house&lt;br /&gt;
years_house_year_edit1,num&lt;br /&gt;
years_house_type_edit1&lt;br /&gt;
type_house_edit1&lt;br /&gt;
direction_edit1&lt;br /&gt;
decoration_edit1&lt;br /&gt;
elevator_edit1&lt;br /&gt;
watch_time_edit1,num&lt;br /&gt;
submit_period_edit1,num&lt;br /&gt;
interests_house_edit1,num&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;unit_house&#39;] = dataset_used1[&#39;unit_house&#39;].fillna(&#39;nodata&#39;)
dataset_used1[&#39;years_house_year_edit1&#39;] = dataset_used1[&#39;years_house_year_edit1&#39;].fillna(0)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 关于年份的处理，将其处理成距今2018的连续型年值
dataset_used1[&#39;years_house_year_edit2&#39;] = dataset_used1[&#39;years_house_year_edit1&#39;].apply(lambda x: 0.0 if x==0.0 else (2018.0-x))
# dataset_used1[dataset_used1[&#39;years_house_year_edit2&#39;]==2018.0] = 0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　　数值型的缺失，比例达到60%以上，难以通过相关关系的方式来插补缺失值；类别型的数据缺失比列也很大，达到40%以上，先不考虑做处理，而是先将缺失归为一类。
因此，之前在函数当中所做的处理，已经达到了缺失值的处理方式。另外，仅需将数值型的缺失值之前是记录为-1，看后续需要是否调整成0或者其它数值。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 474294 entries, 0 to 474300
Data columns (total 22 columns):
community_house                  474294 non-null object
unit_house                       474294 non-null object
size_house_edit1                 474294 non-null float64
size_house_edit1_addcata         474294 non-null object
watch_time_edit1                 474294 non-null int64
watch_time_edit1_addcata         474294 non-null object
interests_house_edit1            474294 non-null int64
interests_house_edit1_addcata    474294 non-null object
submit_period_edit1              474294 non-null int64
submit_period_edit1_addcata      474294 non-null object
years_period_edit1               474294 non-null object
tax_free_edit1                   474294 non-null object
total_price                      474294 non-null float64
smeter_price_edit1               474294 non-null float64
direction_edit1                  474294 non-null object
decoration_edit1                 474294 non-null object
elevator_edit1                   474294 non-null object
type_house_edit1                 474294 non-null object
years_house_type_edit1           474294 non-null object
years_house_year_edit1           474294 non-null float64
region                           474294 non-null object
years_house_year_edit2           474294 non-null float64
dtypes: float64(5), int64(3), object(14)
memory usage: 83.2+ MB
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;years_house_year_edit2&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([ 0.,  8.,  6.,  7.,  3.,  9., 12.,  2., 14.,  1.,  4., 20.,  5.,
       13., 10., 17., 39., 26., 33., 21., 16., 22., 15., 32., 23., 37.,
       25., 29., 11., 19., 18., 31., 48., 28., 38., 36., 24., 35., 27.,
       30., 60., 43., 34., 52., 41., 42., 40., 58., 56., 54., 45., 44.,
       68., 55., 62., 64., 61., 63., 50., 59., 53., 51., 57., 46., 47.,
       66., 65., 49.])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;size_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1_addcata&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1_addcata&lt;/th&gt;
      &lt;th&gt;years_period_edit1&lt;/th&gt;
      &lt;th&gt;tax_free_edit1&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;direction_edit1&lt;/th&gt;
      &lt;th&gt;decoration_edit1&lt;/th&gt;
      &lt;th&gt;elevator_edit1&lt;/th&gt;
      &lt;th&gt;type_house_edit1&lt;/th&gt;
      &lt;th&gt;years_house_type_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
      &lt;th&gt;years_house_year_edit2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;麓山国际帕萨迪纳3组&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;98.070&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;250.000&lt;/td&gt;
      &lt;td&gt;10.146&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;麓山国际塞尔维蒙&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;206.000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;420.000&lt;/td&gt;
      &lt;td&gt;9.923&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;无电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;麓山国际半月湾&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;112.190&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;275.000&lt;/td&gt;
      &lt;td&gt;10.107&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;心怡中丝园&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;87.560&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;193.000&lt;/td&gt;
      &lt;td&gt;10.001&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;有电梯&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;麓山国际茵特拉肯A&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;128.740&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;300.000&lt;/td&gt;
      &lt;td&gt;10.056&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;其他&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;nodata&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;cd&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h4 id=&#34;其它特征工程&#34;&gt;其它特征工程&lt;/h4&gt;

&lt;h5 id=&#34;1-有许多特征实际上是类别型的特征-但给出来的是数字-所以需要将其转换成类别型&#34;&gt;1、有许多特征实际上是类别型的特征，但给出来的是数字，所以需要将其转换成类别型。&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 年份
dataset_used1[&#39;years_house_year_edit1&#39;] = dataset_used1[&#39;years_house_year_edit1&#39;].astype(int).apply(str)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset_used1[&#39;region&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([&#39;cd&#39;, &#39;xm&#39;, &#39;sh&#39;, &#39;sz&#39;, &#39;zz&#39;, &#39;qd&#39;, &#39;su&#39;, &#39;cq&#39;, &#39;dl&#39;, &#39;hf&#39;, &#39;sjz&#39;,
       &#39;cs&#39;, &#39;wh&#39;, &#39;nj&#39;, &#39;hz&#39;, &#39;tj&#39;, &#39;gz&#39;, &#39;bj&#39;, &#39;lf&#39;, &#39;jn&#39;, &#39;fs&#39;, &#39;zh&#39;,
       &#39;zs&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-接下来-labelencoder-对部分类别的特征进行编号&#34;&gt;2、接下来 LabelEncoder，对部分类别的特征进行编号。&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds = dataset_used1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.preprocessing import LabelEncoder
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([&#39;community_house&#39;, &#39;unit_house&#39;, &#39;size_house_edit1_addcata&#39;,
       &#39;watch_time_edit1_addcata&#39;, &#39;interests_house_edit1_addcata&#39;,
       &#39;submit_period_edit1_addcata&#39;, &#39;years_period_edit1&#39;, &#39;tax_free_edit1&#39;,
       &#39;direction_edit1&#39;, &#39;decoration_edit1&#39;, &#39;elevator_edit1&#39;,
       &#39;type_house_edit1&#39;, &#39;years_house_type_edit1&#39;, &#39;region&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp1 =dataset_used1.dtypes
temp2 = temp1[temp1==&#39;object&#39;].index
# 使用LabelEncoder做变换
for c in temp2:
    lbl = LabelEncoder() 
    lbl.fit(list(temp_ds[c].unique()))
    temp_ds[c] = lbl.transform(list(temp_ds[c].values))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(temp_ds[c].unique())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1,
 19,
 13,
 16,
 22,
 12,
 15,
 2,
 4,
 7,
 14,
 3,
 18,
 11,
 8,
 17,
 6,
 0,
 10,
 9,
 5,
 20,
 21]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 查看维度        
print(&#39;temp_ds的数据维度: {}&#39;.format(temp_ds.shape))
temp_ds.tail()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;temp_ds的数据维度: (474294, 22)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;size_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1_addcata&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1_addcata&lt;/th&gt;
      &lt;th&gt;years_period_edit1&lt;/th&gt;
      &lt;th&gt;tax_free_edit1&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;direction_edit1&lt;/th&gt;
      &lt;th&gt;decoration_edit1&lt;/th&gt;
      &lt;th&gt;elevator_edit1&lt;/th&gt;
      &lt;th&gt;type_house_edit1&lt;/th&gt;
      &lt;th&gt;years_house_type_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
      &lt;th&gt;years_house_year_edit2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;474296&lt;/th&gt;
      &lt;td&gt;29485&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;106.000&lt;/td&gt;
      &lt;td&gt;8.893&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;474297&lt;/th&gt;
      &lt;td&gt;29485&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;100.000&lt;/td&gt;
      &lt;td&gt;8.805&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;474298&lt;/th&gt;
      &lt;td&gt;19899&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;18.000&lt;/td&gt;
      &lt;td&gt;8.923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;474299&lt;/th&gt;
      &lt;td&gt;19899&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;15.000&lt;/td&gt;
      &lt;td&gt;8.661&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;474300&lt;/th&gt;
      &lt;td&gt;19899&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;19.000&lt;/td&gt;
      &lt;td&gt;8.977&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds.describe()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;size_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1_addcata&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1_addcata&lt;/th&gt;
      &lt;th&gt;years_period_edit1&lt;/th&gt;
      &lt;th&gt;tax_free_edit1&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;direction_edit1&lt;/th&gt;
      &lt;th&gt;decoration_edit1&lt;/th&gt;
      &lt;th&gt;elevator_edit1&lt;/th&gt;
      &lt;th&gt;type_house_edit1&lt;/th&gt;
      &lt;th&gt;years_house_type_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
      &lt;th&gt;years_house_year_edit2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
      &lt;td&gt;474294.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;27267.773&lt;/td&gt;
      &lt;td&gt;66.229&lt;/td&gt;
      &lt;td&gt;82.180&lt;/td&gt;
      &lt;td&gt;0.142&lt;/td&gt;
      &lt;td&gt;0.453&lt;/td&gt;
      &lt;td&gt;0.920&lt;/td&gt;
      &lt;td&gt;3.421&lt;/td&gt;
      &lt;td&gt;0.920&lt;/td&gt;
      &lt;td&gt;7.452&lt;/td&gt;
      &lt;td&gt;0.920&lt;/td&gt;
      &lt;td&gt;0.064&lt;/td&gt;
      &lt;td&gt;0.074&lt;/td&gt;
      &lt;td&gt;329.748&lt;/td&gt;
      &lt;td&gt;-inf&lt;/td&gt;
      &lt;td&gt;18.814&lt;/td&gt;
      &lt;td&gt;0.906&lt;/td&gt;
      &lt;td&gt;0.969&lt;/td&gt;
      &lt;td&gt;0.410&lt;/td&gt;
      &lt;td&gt;0.282&lt;/td&gt;
      &lt;td&gt;4.111&lt;/td&gt;
      &lt;td&gt;10.437&lt;/td&gt;
      &lt;td&gt;1.316&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;16331.565&lt;/td&gt;
      &lt;td&gt;16.362&lt;/td&gt;
      &lt;td&gt;59.727&lt;/td&gt;
      &lt;td&gt;0.349&lt;/td&gt;
      &lt;td&gt;9.743&lt;/td&gt;
      &lt;td&gt;0.272&lt;/td&gt;
      &lt;td&gt;25.412&lt;/td&gt;
      &lt;td&gt;0.272&lt;/td&gt;
      &lt;td&gt;40.624&lt;/td&gt;
      &lt;td&gt;0.272&lt;/td&gt;
      &lt;td&gt;0.245&lt;/td&gt;
      &lt;td&gt;0.262&lt;/td&gt;
      &lt;td&gt;360.473&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;14.090&lt;/td&gt;
      &lt;td&gt;1.385&lt;/td&gt;
      &lt;td&gt;0.858&lt;/td&gt;
      &lt;td&gt;1.502&lt;/td&gt;
      &lt;td&gt;1.022&lt;/td&gt;
      &lt;td&gt;14.184&lt;/td&gt;
      &lt;td&gt;6.538&lt;/td&gt;
      &lt;td&gt;5.132&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;4.000&lt;/td&gt;
      &lt;td&gt;-inf&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;12779.000&lt;/td&gt;
      &lt;td&gt;71.000&lt;/td&gt;
      &lt;td&gt;50.080&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;143.000&lt;/td&gt;
      &lt;td&gt;9.755&lt;/td&gt;
      &lt;td&gt;15.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;4.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;27253.000&lt;/td&gt;
      &lt;td&gt;71.000&lt;/td&gt;
      &lt;td&gt;80.170&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;235.000&lt;/td&gt;
      &lt;td&gt;10.153&lt;/td&gt;
      &lt;td&gt;15.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;12.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;41835.000&lt;/td&gt;
      &lt;td&gt;71.000&lt;/td&gt;
      &lt;td&gt;106.100&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;-1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;390.000&lt;/td&gt;
      &lt;td&gt;10.713&lt;/td&gt;
      &lt;td&gt;15.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;2.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;16.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;55144.000&lt;/td&gt;
      &lt;td&gt;76.000&lt;/td&gt;
      &lt;td&gt;1823.970&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;851.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;2701.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;365.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;35000.000&lt;/td&gt;
      &lt;td&gt;12.206&lt;/td&gt;
      &lt;td&gt;101.000&lt;/td&gt;
      &lt;td&gt;4.000&lt;/td&gt;
      &lt;td&gt;2.000&lt;/td&gt;
      &lt;td&gt;8.000&lt;/td&gt;
      &lt;td&gt;5.000&lt;/td&gt;
      &lt;td&gt;67.000&lt;/td&gt;
      &lt;td&gt;22.000&lt;/td&gt;
      &lt;td&gt;68.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds[&#39;smeter_price_edit1&#39;].unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([10.14615918,  9.92279986, 10.10695887, ..., 11.19759809,
       11.28816811, 11.33664164])
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-检查变量的正态分布情况&#34;&gt;3、检查变量的正态分布情况&lt;/h5&gt;

&lt;p&gt;对房价进行分析，不符合正态分布的将其log转换，使其符合正态分布；那么偏离正态分布太多的特征我们也对它进行转化：&lt;/p&gt;

&lt;h6 id=&#34;检查-1&#34;&gt;检查&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;total_price = temp_ds[&#39;total_price&#39;]
temp_ds.drop(&#39;total_price&#39;, axis=1, inplace=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# numeric_feats = dataset_used1.dtypes[dataset_used1.dtypes != &amp;quot;object&amp;quot;].index
numeric_feats = [&#39;size_house_edit1&#39;, &#39;watch_time_edit1&#39;, &#39;interests_house_edit1&#39;, &#39;submit_period_edit1&#39;]
# 对所有数值型的特征都计算skew，即计算一下偏度

skewed_feats = temp_ds[numeric_feats].apply(lambda x: skew(x.dropna())).sort_values(ascending=False)
print(&amp;quot;\nSkew in numerical features: \n&amp;quot;)
skewness = pd.DataFrame({&#39;Skew&#39; :skewed_feats})
skewness.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Skew in numerical features: 
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Skew&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;td&gt;16.240&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;td&gt;15.395&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;td&gt;6.197&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;td&gt;2.478&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h6 id=&#34;变换处理&#34;&gt;变换处理&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;skewness = skewness[abs(skewness) &amp;gt; 0.75]  # 关于临界值，如何定，不知？？
print(&amp;quot;总共有 {} 数值型的特征做变换&amp;quot;.format(skewness.shape[0]))

from scipy.special import boxcox1p
skewed_features = skewness.index
lam = 0.15
for feat in skewed_features:
    #all_data[feat] += 1
    temp_ds[feat] = boxcox1p(temp_ds[feat], lam)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;总共有 4 数值型的特征做变换
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 474294 entries, 0 to 474300
Data columns (total 21 columns):
community_house                  474294 non-null int64
unit_house                       474294 non-null int64
size_house_edit1                 474294 non-null float64
size_house_edit1_addcata         474294 non-null int64
watch_time_edit1                 474294 non-null float64
watch_time_edit1_addcata         474294 non-null int64
interests_house_edit1            474294 non-null float64
interests_house_edit1_addcata    474294 non-null int64
submit_period_edit1              474294 non-null float64
submit_period_edit1_addcata      474294 non-null int64
years_period_edit1               474294 non-null int64
tax_free_edit1                   474294 non-null int64
smeter_price_edit1               474294 non-null float64
direction_edit1                  474294 non-null int64
decoration_edit1                 474294 non-null int64
elevator_edit1                   474294 non-null int64
type_house_edit1                 474294 non-null int64
years_house_type_edit1           474294 non-null int64
years_house_year_edit1           474294 non-null int64
region                           474294 non-null int64
years_house_year_edit2           474294 non-null float64
dtypes: float64(6), int64(15)
memory usage: 79.6 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里偏差修正的问题，如果先进行labelcoding，那么如何保证label之后的结果是string？还是说提取单独的数值型列？
最后，我决定单独取出&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;community_house&lt;/th&gt;
      &lt;th&gt;unit_house&lt;/th&gt;
      &lt;th&gt;size_house_edit1&lt;/th&gt;
      &lt;th&gt;size_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;watch_time_edit1&lt;/th&gt;
      &lt;th&gt;watch_time_edit1_addcata&lt;/th&gt;
      &lt;th&gt;interests_house_edit1&lt;/th&gt;
      &lt;th&gt;interests_house_edit1_addcata&lt;/th&gt;
      &lt;th&gt;submit_period_edit1&lt;/th&gt;
      &lt;th&gt;submit_period_edit1_addcata&lt;/th&gt;
      &lt;th&gt;years_period_edit1&lt;/th&gt;
      &lt;th&gt;tax_free_edit1&lt;/th&gt;
      &lt;th&gt;smeter_price_edit1&lt;/th&gt;
      &lt;th&gt;direction_edit1&lt;/th&gt;
      &lt;th&gt;decoration_edit1&lt;/th&gt;
      &lt;th&gt;elevator_edit1&lt;/th&gt;
      &lt;th&gt;type_house_edit1&lt;/th&gt;
      &lt;th&gt;years_house_type_edit1&lt;/th&gt;
      &lt;th&gt;years_house_year_edit1&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
      &lt;th&gt;years_house_year_edit2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;54124&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;6.616&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10.146&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;54121&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;8.169&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;9.923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;54117&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;6.885&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10.107&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;23640&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;6.395&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10.001&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;54131&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;7.165&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-6.667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10.056&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 474294 entries, 0 to 474300
Data columns (total 21 columns):
community_house                  474294 non-null int64
unit_house                       474294 non-null int64
size_house_edit1                 474294 non-null float64
size_house_edit1_addcata         474294 non-null int64
watch_time_edit1                 474294 non-null float64
watch_time_edit1_addcata         474294 non-null int64
interests_house_edit1            474294 non-null float64
interests_house_edit1_addcata    474294 non-null int64
submit_period_edit1              474294 non-null float64
submit_period_edit1_addcata      474294 non-null int64
years_period_edit1               474294 non-null int64
tax_free_edit1                   474294 non-null int64
smeter_price_edit1               474294 non-null float64
direction_edit1                  474294 non-null int64
decoration_edit1                 474294 non-null int64
elevator_edit1                   474294 non-null int64
type_house_edit1                 474294 non-null int64
years_house_type_edit1           474294 non-null int64
years_house_year_edit1           474294 non-null int64
region                           474294 non-null int64
years_house_year_edit2           474294 non-null float64
dtypes: float64(6), int64(15)
memory usage: 79.6 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;哑变量处理&#34;&gt;哑变量处理&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp1 =dataset_used1.dtypes
temp2 = temp1[temp1==&#39;int64&#39;].index
for name in temp2:
    temp_ds[name] = temp_ds[name].astype(str)

temp2_2 = temp1[temp1==&#39;float64&#39;].index
for name in temp2_2:
    temp_ds[name] = temp_ds[name].astype(float)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;temp_ds_use1 = temp_ds.drop([&#39;community_house&#39;,&#39;years_house_year_edit1&#39;], axis=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_usedata = pd.get_dummies(temp_ds_use1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_usedata.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(474294, 243)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;useful_dataset = all_usedata.sample(frac=0.1, random_state=123)
all_usedata = None
del all_usedata,temp_ds,temp_ds_use1,dataset_used1,dataset
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;建立模型&#34;&gt;建立模型&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.linear_model import ElasticNet, Lasso,  BayesianRidge, LassoLarsIC
from sklearn.ensemble import RandomForestRegressor,  GradientBoostingRegressor
from sklearn.kernel_ridge import KernelRidge
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import RobustScaler
from sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin, clone
from sklearn.model_selection import KFold, cross_val_score, train_test_split
from sklearn.metrics import mean_squared_error
import xgboost as xgb
import lightgbm as lgb
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;数据准备&#34;&gt;数据准备&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;X = useful_dataset.drop(&#39;smeter_price_edit1&#39;, axis=1)
y = useful_dataset[&#39;smeter_price_edit1&#39;]
# 注意这一步！！数据结果与类型转换
X = X.as_matrix().astype(np.float)  
y = y.as_matrix().astype(np.float)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# all_data_na = (Train.isnull().sum() / len(Train)) * 100
# all_data_na = all_data_na.drop(all_data_na[all_data_na == 0].index).sort_values(ascending=False)[:30]
# missing_data = pd.DataFrame({&#39;Missing Ratio&#39; :all_data_na})

# f, ax = plt.subplots(figsize=(8, 8))
# plt.xticks(rotation=&#39;90&#39;)
# sns.barplot(x=missing_data.index, y=all_data_na)
# plt.xlabel(&#39;Features&#39;, fontsize=15)
# plt.ylabel(&#39;Percent of missing values&#39;, fontsize=15)
# plt.title(&#39;Percent missing data by feature&#39;, fontsize=15)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 训练集与测试集划分
train_x, test_x, train_y, test_y = train_test_split(X, y, test_size=0.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 交叉验证函数
n_folds = 5
def rmsle_cv(model):
    kf = KFold(n_folds, shuffle=True, random_state=42).get_n_splits(train_x)
    rmse= np.sqrt(-cross_val_score(model, train_x, train_y, scoring=&amp;quot;neg_mean_squared_error&amp;quot;, cv = kf))
    return(rmse)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;模型函数&#34;&gt;模型函数&lt;/h4&gt;

&lt;h5 id=&#34;模型函数设定&#34;&gt;模型函数设定&lt;/h5&gt;

&lt;h6 id=&#34;lasso模型&#34;&gt;lasso模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lasso = make_pipeline(RobustScaler(), Lasso(alpha =0.5, random_state=1))
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;enet模型&#34;&gt;ENet模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ENet = make_pipeline(RobustScaler(), ElasticNet(alpha=0.5, l1_ratio=.9, random_state=3))
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;krr模型&#34;&gt;KRR模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;KRR = KernelRidge(alpha=0.6, kernel=&#39;polynomial&#39;, degree=2, coef0=2.5)
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;gboost模型&#34;&gt;GBoost模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;GBoost = GradientBoostingRegressor(n_estimators=1000, learning_rate=0.1,
                                   max_depth=6, max_features=&#39;sqrt&#39;,
                                   min_samples_leaf=15, min_samples_split=10, 
                                   loss=&#39;huber&#39;, random_state =5)
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;xgboost模型&#34;&gt;xgboost模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model_xgb = xgb.XGBRegressor(colsample_bytree=0.4603, gamma=0.0468, 
                             learning_rate=0.1, max_depth=6, 
                             min_child_weight=1.7817, n_estimators=1000,
                             reg_alpha=0.4640, reg_lambda=0.8571,
                             subsample=0.5213, silent=1,
                             seed =7, nthread = -1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;lightgbm模型&#34;&gt;LightGBM模型&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model_lgb = lgb.LGBMRegressor(objective=&#39;regression&#39;,num_leaves=5,
                              learning_rate=0.05, n_estimators=720,
                              max_bin = 55, bagging_fraction = 0.8,
                              bagging_freq = 5, feature_fraction = 0.2319,
                              feature_fraction_seed=9, bagging_seed=9,
                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;模型得分&#34;&gt;模型得分&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(lasso)
print(&amp;quot;\nLasso 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Lasso 得分: 0.6099 (0.0034)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(ENet)
print(&amp;quot;\ENet 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;\ENet 得分: 0.6085 (0.0034)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;lasso = make_pipeline(RobustScaler(), Lasso(alpha =0.001, random_state=1))

score = rmsle_cv(lasso)
print(&amp;quot;\nLasso 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Lasso 得分: 0.3598 (0.0028)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ENet = make_pipeline(RobustScaler(), ElasticNet(alpha=0.001, l1_ratio=.9, random_state=3))
score = rmsle_cv(ENet)
print(&amp;quot;\ENet 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;\ENet 得分: 0.3593 (0.0029)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(KRR)
print(&amp;quot;Kernel Ridge 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;krr运行时间太长，没有执行和给出结果&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(GBoost)
print(&amp;quot;Gradient Boosting 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Gradient Boosting 得分: 0.3328 (0.0041)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(GBoost)
print(&amp;quot;Gradient Boosting 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Gradient Boosting 得分: 0.3271 (0.0023)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(model_xgb)
print(&amp;quot;Xgboost 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Xgboost 得分: 0.3362 (0.0018)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(model_xgb)
print(&amp;quot;Xgboost 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Xgboost 得分: 0.3294 (0.0014)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(model_lgb)
print(&amp;quot;Xgboost 得分: {:.4f} ({:.4f})\n&amp;quot;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Xgboost 得分: 0.3400 (0.0034)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;模型融合&#34;&gt;模型融合&lt;/h4&gt;

&lt;p&gt;从简单的基本模型方法开始，考虑通过多模型融合的方式，尝试提高整体得分。首先构建简单类，扩充sklearn模型，然后根据初步融合结果进一步优化基模型参数，最后有所应用。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin, clone
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;基模型融合&#34;&gt;基模型融合&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class AverageModels(BaseEstimator, RegressorMixin, TransformerMixin):
    def __init__(self, models):
        self.models = models
        
    # 遍历所有模型
    def fit(self, X, y):
        self.models_ = [clone(x) for x in self.models]
        for model in self.models_:
            model.fit(X, y)   
        return self
    
    # 预估，并对预估结果做average
    def predict(self, X):
        predictions = np.column_stack([model.predict(X) for model in self.models_])
        return np.mean(predictions, axis=1)
    
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;average_models = AverageModels(models=(lasso,ENet,GBoost))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;score = rmsle_cv(average_models)
print(&#39;对基模型进行集成之后的得分：{:.4f} ({:.4f})\n&#39;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;对基模型进行集成之后的得分：0.3403 (0.0029)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对上面的结果对比，发现方差相比较单独模型有所降低，均值很低。故认为模型的融合起到改善预测结果的效果，所以考虑对单独模型构建更深层的模型融合。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
# np.array((1,2,3),(11,22,33))
a=[1,2,3];b=[11,22,33];np.column_stack((a,b))
a=[[1,2,3],[10,20,30]];b=[[11,22,33],[110,220,330]];np.column_stack((a,b))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([[  1,   2,   3,  11,  22,  33],
       [ 10,  20,  30, 110, 220, 330]])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ab = np.column_stack([np.array(a),np.array(b)])
print(ab,ab.shape)
ab.mean(axis=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[ 1 11]
 [ 2 22]
 [ 3 33]] (3, 2)





array([  6.,  12.,  18.])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ab = np.column_stack([np.array(a)])
print(ab,ab.shape)
ab.mean(axis=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[[1]
 [2]
 [3]] (3, 1)





array([ 1.,  2.,  3.])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a=[1,2,3];b=[11,22,33];
np.column_stack((a,b)).mean(axis=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;array([  6.,  12.,  18.])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[np.column_stack([i]*4)  for i in list(range(1,4))]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[array([[1, 1, 1, 1]]), array([[2, 2, 2, 2]]), array([[3, 3, 3, 3]])]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[np.column_stack([i]*4).mean(axis=1)  for i in list(range(1,4))]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[array([ 1.]), array([ 2.]), array([ 3.])]
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;构建stacking-averagd-models的类&#34;&gt;构建stacking averagd models的类&lt;/h5&gt;

&lt;p&gt;通过stacking的方式进行模型融合&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class StackingAverageModels(BaseEstimator, RegressorMixin, TransformerMixin):
    def __init__(self, base_models, meta_model, n_folds):
        self.base_models = base_models
        self.meta_model = meta_model
        self.n_folds = n_folds
    
    # 遍历拟合原始模型
    def fit(self, X, y):
        self.base_models_ = [list() for x in self.base_models]
        self.meta_model_ = clone(self.meta_model)
        kfold = KFold(n_splits=self.n_folds, shuffle=True, random_state=123)
        
        # 得到基模型之后，对out_of_fold的数据做预估，并为学习stacking的第二层做数据准备
        out_of_fold_predictions = np.zeros((X.shape[0], len(self.base_models)), dtype=np.float64)
        
        for i, model in enumerate(self.base_models):
            for train_index, holdout_index in kfold.split(X, y):
                instance = clone(model)
                self.base_models_[i].append(instance)
                instance.fit(X[train_index], y[train_index])
                y_pred = instance.predict(X[holdout_index])
                out_of_fold_predictions[holdout_index, i] = y_pred
                
        # 学习stacking模型
        self.meta_model_.fit(out_of_fold_predictions, y)
        return self
    
    # 做stacking预估
    def predict(self, X):
        meta_features = np.column_stack([
            np.column_stack([model.predict(X) for model in base_models]).mean(axis=1)
            for base_models in self.base_models_])
        
        return self.meta_model_.predict(meta_features)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;测试meta-model的stacking结果&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import datetime
now = datetime.datetime.now()
print(now)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;2018-08-13 09:25:11.523184
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stacked_averaged_model = StackingAverageModels(base_models=(ENet, GBoost), meta_model=lasso, n_folds=5)

score = rmsle_cv(stacked_averaged_model)
print(&#39;对基模型进行集成之后的得分：{:.4f} ({:.4f})\n&#39;.format(score.mean(), score.std()))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;对基模型进行集成之后的得分：0.6017 (0.0024)
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;测试模型融合&#34;&gt;测试模型融合&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def rmsle(y, y_pred):
    return np.sqrt(mean_squared_error(y, y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;stacking&#34;&gt;stacking&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stacked_averaged_model.fit(train_x, train_y)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stacked_train_pred = stacked_averaged_model.predict(train_x)
stacked_pred = np.expm1(stacked_averaged_model.predict(test_x))
print(rmsle(train_y, stacked_train_pred))
print(rmsle(test_y, stacked_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.6017301501182424
30684.936189730954
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;xgboost&#34;&gt;xgboost&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model_xgb.fit(train_x, train_y)
xgb_train_pred = model_xgb.predict(train_x)
xgb_pred = np.expm1(model_xgb.predict(test_x))
print(rmsle(train_y, xgb_train_pred))
print(rmsle(test_y, xgb_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.28768534370101895
36986.13921042293
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;lightgbm&#34;&gt;lightgbm&lt;/h6&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model_lgb.fit(train_x, train_y)
gbm_train_pred = model_lgb.predict(train_x)
gbm_pred = np.expm1(model_lgb.predict(test_x))
print(rmsle(train_y, gbm_train_pred))
print(rmsle(test_y, gbm_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.33701688354734044
36068.90124078451
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;now = datetime.datetime.now()
print(now)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;np.expm1(0)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在测试集上面的表现很差，不理解为何差异非常大。&lt;/p&gt;

&lt;h5 id=&#34;结果&#34;&gt;结果&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ensemble = stacked_pred*0.4 + xgb_pred*0.3 + lgb_pred*0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My</title>
      <link>https://growing-bison.github.io/my/</link>
      <pubDate>Tue, 18 Sep 2018 16:10:31 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/my/</guid>
      <description></description>
    </item>
    
    <item>
      <title>决策树结果可视化01</title>
      <link>https://growing-bison.github.io/post/%E5%86%B3%E7%AD%96%E6%A0%91%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <pubDate>Sat, 12 May 2018 18:16:59 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/%E5%86%B3%E7%AD%96%E6%A0%91%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <description>&lt;p&gt;这是关于如何对决策树分类器结果可视化的指导。
&lt;/p&gt;

&lt;h2 id=&#34;center-决策树结果的可视化-python&#34;&gt;&lt;center&gt;决策树结果的可视化-python&lt;/h2&gt;

&lt;h3 id=&#34;一-对于sklearn中的tree模型可视化&#34;&gt;一、对于sklearn中的tree模型可视化&lt;/h3&gt;

&lt;p&gt;1、图形结果输出pdf保存本地；&lt;br /&gt;
2、图形结果显示在界面&lt;/p&gt;

&lt;h4 id=&#34;1-图形结果输出pdf保存本地&#34;&gt;1、图形结果输出pdf保存本地&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.datasets import load_iris
import graphviz 
from sklearn import tree

iris = load_iris()
clf = tree.DecisionTreeClassifier()
clf = clf.fit(iris.data, iris.target)
dot_data = tree.export_graphviz(clf, out_file=None) 
graph = graphviz.Source(dot_data) 
graph.render(&amp;quot;保存的名字&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-图形结果显示在界面&#34;&gt;2、图形结果显示在界面&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.datasets import load_iris
import graphviz 
from sklearn import tree

iris = load_iris()
clf = tree.DecisionTreeClassifier()
clf = clf.fit(iris.data, iris.target)

# 首先生成graphvis所需的dot数据
dot_data = tree.export_graphviz(clf, # 已经训练的模型
                                out_file=None, # dot文件输出名称，默认tree.dot
                                 feature_names=iris.feature_names,  # 特征变量名称
                                 class_names=iris.target_names,  # 目标变量名称
                                 filled=False, # 颜色是否填充，默认False-不填充
                                rounded=True,  # 字体设置，默认False
                                 special_characters=False  # postgript对特殊字符处理，默认false
                               )  

# 将dot数据通过graphviz渲染
graph = graphviz.Source(dot_data)

# 界面上直接显示
graph

# 将图表保存本地为pdf（默认即为pdf）。？？如何保存为png
graph.render(&#39;new2&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&#39;new2.pdf&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;二-对于xgboost的训练结果&#34;&gt;二、对于xgboost的训练结果。&lt;/h3&gt;

&lt;p&gt;1、tree图形结果输出pdf保存本地；&lt;br /&gt;
2、tree图形结果显示在界面；&lt;br /&gt;
3、特征的重要性可视化。&lt;br /&gt;
　　tree结果可以采用两种方式，①xgboost包中的plot_tree函数、②借助xgboost的to_graghviz和graphviz包&lt;br /&gt;
　　特征重要新可视化，两种方式①xgboost包中的plot_importance函数、②自定义函数&lt;/p&gt;

&lt;h4 id=&#34;1-tree图形结果可视化①&#34;&gt;1、tree图形结果可视化①&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;from xgboost import plot_tree&lt;br /&gt;
plot_tree(my_module)  my_module  # 已经fit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;1-tree图形结果可视化②&#34;&gt;1、tree图形结果可视化②&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from xgboost import to_graphviz
import graphviz

# my_module  # 已经fit
dot_data = to_graphviz(my_module)
graph = graphviz.Source(dot_data) 

# 显示在桌面
graph

# 保存到本地
graph.render(&#39;new2&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-特征重要新可视化①&#34;&gt;2、特征重要新可视化①&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;from xgboost import plot_importance&lt;br /&gt;
plot_importance(booster=my_module, importance_type=&amp;lsquo;weight&amp;rsquo;)  # my_module  # 已经fit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;2-特征重要新可视化②&#34;&gt;2、特征重要新可视化②&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def modelfit(alg, dtrain, predictors, performCV=True, printFeatureImportance=True, cv_folds=5):
    &#39;&#39;&#39;
    该函数方法借鉴tune parameter...大神的，改写而来
    alg: 模型
    dtrain: pd.DataFrame,包含训练特征和目标特征
    predictors: list，包含训练特征的名称
    performCV: 按默认
    printFeatureImportance: 按默认
    &#39;&#39;&#39;
    
    #Fit the algorithm on the data
    alg.fit(dtrain[predictors], dtrain[&#39;Survived&#39;])
        
    #Predict training set:
    dtrain_predictions = alg.predict(dtrain[predictors])
    dtrain_predprob = alg.predict_proba(dtrain[predictors])[:,1]
    
    #Perform cross-validation:
    if performCV:
        cv_score = cross_validation.cross_val_score(alg, dtrain[predictors], dtrain[&#39;Survived&#39;], cv=cv_folds, scoring=&#39;roc_auc&#39;)
    
    #Print model report:
    print (&amp;quot;\nModel Report&amp;quot;)
    print (&amp;quot;Accuracy : %.4g&amp;quot; % metrics.accuracy_score(dtrain[&#39;Survived&#39;].values, dtrain_predictions))
    print (&amp;quot;AUC Score (Train): %f&amp;quot; % metrics.roc_auc_score(dtrain[&#39;Survived&#39;], dtrain_predprob))
    
    if performCV:
        print (&amp;quot;CV Score : Mean - %.7g | Std - %.7g | Min - %.7g | Max - %.7g&amp;quot; % (np.mean(cv_score),np.std(cv_score),np.min(cv_score),np.max(cv_score)))
        
    #Print Feature Importance:
    if printFeatureImportance:
        feat_imp = pd.Series(alg.feature_importances_, predictors).sort_values(ascending=False)
        feat_imp.plot(kind=&#39;bar&#39;, title=&#39;Feature Importances&#39;)
        plt.ylabel(&#39;Feature Importance Score&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考:&lt;br /&gt;
1. How to Visualize Gradient Boosting Decision Trees With XGBoost in Python &lt;a href=&#34;https://machinelearningmastery.com/visualize-gradient-boosting-decision-trees-xgboost-python/&#34; target=&#34;_blank&#34;&gt;https://machinelearningmastery.com/visualize-gradient-boosting-decision-trees-xgboost-python/&lt;/a&gt;&lt;br /&gt;
2. graphviz官方 &lt;a href=&#34;https://pypi.org/project/graphviz/&#34; target=&#34;_blank&#34;&gt;https://pypi.org/project/graphviz/&lt;/a&gt;&lt;br /&gt;
3.  XGBoost Plotting API以及GBDT组合特征实践 &lt;a href=&#34;https://blog.csdn.net/sb19931201/article/details/65445514&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/sb19931201/article/details/65445514&lt;/a&gt;&lt;br /&gt;
4. sklearn官方 &lt;a href=&#34;http://scikit-learn.org/stable/modules/tree.html#tree&#34; target=&#34;_blank&#34;&gt;http://scikit-learn.org/stable/modules/tree.html#tree&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据处理-简单模型与绘图-01</title>
      <link>https://growing-bison.github.io/post/r%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/r%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid>
      <description>&lt;p&gt;作为和师弟师妹简单介绍的文章，主要是有关线性回归建模与图形绘制
&lt;/p&gt;

&lt;p&gt;================&lt;/p&gt;

&lt;h3 id=&#34;首先加载r的包&#34;&gt;首先加载R的包&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(flexdashboard)
library(rJava)
library(car)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: carData
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(plotly)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2

## 
## Attaching package: &#39;plotly&#39;

## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     last_plot

## The following object is masked from &#39;package:stats&#39;:
## 
##     filter

## The following object is masked from &#39;package:graphics&#39;:
## 
##     layout
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-散点图绘制&#34;&gt;1. 散点图绘制&lt;/h3&gt;

&lt;p&gt;首先进行基本数据的观察。这里主要几个函数 - 设置文件路径： &amp;gt; setwd()&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读入csv文件 &amp;gt; read.csv&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ggplot2函数 &amp;gt; ggplot()&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setwd(&amp;quot;C:/Users/Administrator/Desktop/for_404-figure/datasource&amp;quot;)
location1_data = read.csv(&#39;location1_ndvi1.csv&#39;,encoding=&#39;UTF-8&#39;)
location1_lm = lm(location1_data$dry_matter.g.m2~location1_data$log_ndvi)
ggplot(location1_data,
       aes(x=location1_data$log_ndvi,
           y=location1_data$dry_matter.g.m2.,
           label=rownames(location1_data[1])))+
  geom_point(size=2,color=&amp;quot;blue&amp;quot;)+
  geom_text(hlabel=rownames(location1_data[1]),
             alpha=0.3,hjust=0,vjust=2,size=2)+
  geom_rug()+
  xlab(&#39;log_ndvi&#39;)+
  ylab(&#39;dry matter:g/m2&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m3/unnamed-chunk-2-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(location1_lm)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = location1_data$dry_matter.g.m2 ~ location1_data$log_ndvi)
## 
## Residuals:
##    Min     1Q Median     3Q    Max 
## -73.25 -31.98 -10.31  23.62 212.98 
## 
## Coefficients:
##                         Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)               316.34      37.07   8.534 3.30e-12 ***
## location1_data$log_ndvi   257.71      43.78   5.887 1.51e-07 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 51.45 on 65 degrees of freedom
##   (1 observation deleted due to missingness)
## Multiple R-squared:  0.3478, Adjusted R-squared:  0.3377 
## F-statistic: 34.66 on 1 and 65 DF,  p-value: 1.512e-07
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-第一次-线性拟合结果中判断异常点&#34;&gt;2. 第一次 线性拟合结果中判断异常点&lt;/h3&gt;

&lt;p&gt;对第一次拟合模型不满意，希望探寻原数据中是否有异常值影响。
主要通过学生化残差——离群点、库克距离——强影响点、帽子值——高杠杆点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;综合绘图函数:influencePlot() # car包&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#car::influencePlot(location1_lm, #id.method=list(&amp;quot;x&amp;quot;,&amp;quot;y&amp;quot;),labels=rownames(location1_data[9]),id.n=nrow(location1_data[9]))
car::influencePlot(location1_lm, method=&amp;quot;identify&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m3/unnamed-chunk-3-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##     StudRes        Hat      CookD
## 20 2.996216 0.14830962 0.69619267
## 45 4.941031 0.04515861 0.42443172
## 47 0.950764 0.12910081 0.06709942
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-二次拟合-删除异常点后拟合&#34;&gt;3. 二次拟合：删除异常点后拟合&lt;/h3&gt;

&lt;p&gt;剔除部分异常点，重新拟合。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;anova对比：根据P值是否显著，判断是否有差别。
&amp;gt; anova()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;赤池信息准则:选择小值 &amp;gt; AIC()&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;location1_data_edit20_3 = location1_data[-c(1,2,3,20,27,28,29,30,31,32,34,33,42,43,44,45,46),]
location1_lm2 = lm(location1_data_edit20_3$dry_matter.g.m2.~location1_data_edit20_3$log_ndvi)
summary(location1_lm2)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = location1_data_edit20_3$dry_matter.g.m2. ~ location1_data_edit20_3$log_ndvi)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -65.462 -21.262  -3.482  25.634 107.046 
## 
## Coefficients:
##                                  Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)                        221.96      35.88   6.186  1.3e-07 ***
## location1_data_edit20_3$log_ndvi   156.39      41.68   3.753 0.000472 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 33.77 on 48 degrees of freedom
##   (1 observation deleted due to missingness)
## Multiple R-squared:  0.2268, Adjusted R-squared:  0.2107 
## F-statistic: 14.08 on 1 and 48 DF,  p-value: 0.0004719
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;car::influencePlot(location1_lm2, method=&amp;quot;identify&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m3/unnamed-chunk-4-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##       StudRes        Hat      CookD
## 1   1.8470285 0.07352792 0.12889873
## 23  3.5837724 0.02433724 0.12848349
## 28  0.4995480 0.13561951 0.01988773
## 30  0.5140136 0.23810427 0.04192757
## 32 -2.0203538 0.02004473 0.03922777
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# print(&#39;———————————————————————————————————————————————————————————————————————————&#39;)
# 对比两个模型效果——ANOVA
print(anova(location1_lm, location1_lm2))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Analysis of Variance Table
## 
## Response: location1_data$dry_matter.g.m2
##                         Df Sum Sq Mean Sq F value    Pr(&amp;gt;F)    
## location1_data$log_ndvi  1  91732   91732  34.659 1.512e-07 ***
## Residuals               65 172036    2647                      
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# print(&#39;———————————————————————————————————————————————————————————————————————————&#39;)
# 对比两个模型效果——AIC
print(AIC(location1_lm, location1_lm2))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##               df      AIC
## location1_lm   3 722.1392
## location1_lm2  3 497.7956
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-二次拟合结果-对比实测值&#34;&gt;4. 二次拟合结果：对比实测值&lt;/h3&gt;

&lt;p&gt;通过图形观察拟合效果，对比观察与预测值，绘制对比图。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;构建dataframe的函数 &amp;gt; data.frame()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;绘图函数 &amp;gt; plot() text() point()&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;颜色获取函数 &amp;gt; hsv() hsv(h = 1, s = 1, v = 1, alpha=0.5)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;颜色选取用hsv函数，对应hsv颜色空间参考&lt;a href=&#34;https://codebeautify.org/hsv-to-rgb-converter&#34; target=&#34;_blank&#34;&gt;https://codebeautify.org/hsv-to-rgb-converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sape.inf.usi.ch/quick-reference/ggplot2/colour&#34; target=&#34;_blank&#34;&gt;http://sape.inf.usi.ch/quick-reference/ggplot2/colour&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/colorPaletteCheatsheet.pdf&#34; target=&#34;_blank&#34;&gt;r color cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fitdata_location1=data.frame(location1_data_edit20_3$dry_matter.g.m2.,
                             location1_data_edit20_3$log_ndvi)

fit_location1=predict(location1_lm2,
                      fitdata_location1,
                      type = &amp;quot;response&amp;quot;)

fitdata_location1_end=data.frame(fitdata_location1,
                                 fit_location1)


plot(fitdata_location1_end$location1_data_edit20_3.log_ndvi,
     fitdata_location1_end$location1_data_edit20_3.dry_matter.g.m2.,
     xlab=&amp;quot;ndvi&amp;quot;,
     ylab = &amp;quot;dry matter:g/m2&amp;quot;, 
     main = &amp;quot;location1_ndvi与产量拟合_&amp;quot;)

text1_color = hsv(h = 1, s = 0, v = 0.7, alpha=0.5)  # 黑色

text(x=fitdata_location1_end$location1_data_edit20_3.log_ndvi,
     y=fitdata_location1_end$location1_data_edit20_3.dry_matter.g.m2.,
     lab=rownames(location1_data[1]),
     adj=c(0,-0.5),
     pch=0.5,
     col = text1_color, 
     cex = 0.6,  # 字体大小设置
     pos=2 # 位置
     )

points(fitdata_location1_end$location1_data_edit20_3.log_ndvi,
       fitdata_location1_end$fit_location1,
       pch=10,
       col=2  # 对应黑色
       )

text2_color = hsv(h = 1, s = 1, v = 1, alpha=0.3)  # 红色

text(x=fitdata_location1_end$location1_data_edit20_3.log_ndvi,
     y=fitdata_location1_end$fit_location1, 
     lab=rownames(location1_data[1]),
     adj=c(0,-0.5),
     pch=0.5,
     col=text2_color,
     cex = 0.6,
     pos =3,
     offset = 0.5  # 相对偏置距离
     )

legend(&amp;quot;topleft&amp;quot;,c(&amp;quot;实际&amp;quot;,&amp;quot;拟合&amp;quot;), 
       pch = c(1,10),
       col = c(1,2),
       title = &amp;quot;location1_ndvi与产量拟合&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m3/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(location1_lm2)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = location1_data_edit20_3$dry_matter.g.m2. ~ location1_data_edit20_3$log_ndvi)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -65.462 -21.262  -3.482  25.634 107.046 
## 
## Coefficients:
##                                  Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)                        221.96      35.88   6.186  1.3e-07 ***
## location1_data_edit20_3$log_ndvi   156.39      41.68   3.753 0.000472 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 33.77 on 48 degrees of freedom
##   (1 observation deleted due to missingness)
## Multiple R-squared:  0.2268, Adjusted R-squared:  0.2107 
## F-statistic: 14.08 on 1 and 48 DF,  p-value: 0.0004719
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-多个曲线对比&#34;&gt;5. 多个曲线对比&lt;/h3&gt;

&lt;p&gt;对多个月份的数据，绘制拟合曲线图，并在一张图中呈现。 - 求对数：log() - 合并两个表格（dataframe）:melt() - 绘图函数：qplot() - x轴的刻度间隔设置：scale_x_continuous()&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)
library(data.table)

#对比之前几个月的数据，即拟合结果需要保证前后一致性。06月、07月、08月，以及在相应位置的变化应该是呈现一种上升的关系
# test_x = rnorm(100,mean = 0, sd=1)  # 生成满足正态分布的随机数

test_x = log(runif(100,min = 0,max = 1))

test_x = as.data.frame(test_x)

a_06month = 80
b_06month = 220
a_07month = 55
b_07month = 185
a_o8month_morepoint = 160
b_o8month_morepoint = 210
a_o8month_lesspoint = 270
b_o8month_lesspoint = 320

df_data = data.frame(x=exp(test_x),
                     y_06=test_x[,1]*a_06month+b_06month,
                     y_07=test_x[,1]*a_07month+b_07month,
                     y_08_more=test_x[,1]*a_o8month_morepoint+b_o8month_morepoint,
                     y_08_less=test_x[,1]*a_o8month_lesspoint+b_o8month_lesspoint)

df_melt_data = melt(df_data, id=1:5, measure=2:5)

p = qplot(data = df_melt_data,
          x=df_melt_data$test_x,
          y=df_melt_data$value,geom=&#39;line&#39;,
          color=df_melt_data$variable,
          main = &#39;拟合结果&#39;,
          xlab = &#39;NDVI value&#39;, 
          ylab = &#39;模拟的产量：g/m2&#39;) 

plot_end = p + scale_x_continuous(breaks = seq(0,1,0.1),labels = seq(0,1,0.1)) + scale_color_hue(&#39;图例&#39;)

print(plot_end)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m3/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于python自定义包</title>
      <link>https://growing-bison.github.io/post/%E5%85%B3%E4%BA%8Epython%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85/</link>
      <pubDate>Fri, 09 Feb 2018 16:16:59 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/%E5%85%B3%E4%BA%8Epython%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85/</guid>
      <description>&lt;p&gt;这是关于如何建立python的自定义包的简单笔记，供简单参考。
&lt;/p&gt;

&lt;h2 id=&#34;关于python自定义包&#34;&gt;关于python自定义包&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用的环境说明&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# !/usr/bin/env python3.5
# operation system: windows7
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;一-模块基本结构与引用&#34;&gt;一、模块基本结构与引用&lt;/h4&gt;

&lt;p&gt;　　常见的一个模块结构如下，一般还需要有一个test.py文件与package文件同目录，来测试这个包。
&lt;img src=&#34;https://growing-bison.github.io/img/jietu00.jpg&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;另外，&lt;code&gt;__int__.py&lt;/code&gt;文件是必须要有，关键！它的存在表示此目录应该被作为一个package（包）。
在需要引用时，进入包的顶层目录rstools，导入某个函数。
package-rstools
module-imagestretch
方法/函数-get_no_data&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from rstools.imagestretch import get_no_data
get_no_data(file) 
# 当以*导入，package内的module受__int__.py限制。
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;二-package内部互相调用&#34;&gt;二、package内部互相调用&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;package1/
       __init__.py
       subPack1/
               __init__.py
               module_11.py
               module_12.py
               module_13.py
      subPack2/
               __init__.py
               module_21.py
               module_22.py
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;、调用同一个package中的module，可直接import。如module_12.py希望调用module_11
&lt;code&gt;{python}
import module_11
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;、调用非同一个package中的module，如module_11.py希望导入module_21.py中的FuncA
&lt;code&gt;{python}
from subPack2.module_21 import module_11
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;三-int-py文件&#34;&gt;三、__int__.py文件&lt;/h4&gt;

&lt;p&gt;该文件决定了包的导入和使用方式，需要很好设计。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;: &lt;strong&gt;all&lt;/strong&gt;属性
&lt;code&gt;{python}
__int__=[&#39;dataprepare&#39;,&#39;datapansharpen&#39;]
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;四-setput-py文件&#34;&gt;四、setput.py文件&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;文件中几个主要参数&lt;/strong&gt;
- name：str，包名称
- version：str，版本号码
- url：包的链接，通常为 Github 上的链接，或者是 readthedocs 链接
- packages：需要包含的子包列表，find_packages()助查找
- setup_requires：指定依赖项
- test_suite：测试时运行的工具
- long_description：在一个来源处做说明介绍&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;long_description=open(&#39;README.md&#39;).read()
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;：打包某个模块&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 打包项目中某一个模块
from distutils.core import setup
from setuptools import find_packages
setup(
name=&#39;production&#39;,
version=&#39;v1.0&#39;,
packages=find_packages(exclude=[&#39;production.moving_windows&#39;])
)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;：打包整个项目&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from setuptools import setup, find_packages 
setup(name = &#39;production&#39;,version = &#39;1.0&#39;,
  py_modules = [&#39;production.production_whole&#39;],
  author = &#39;lqkpython&#39;,
  author_email = &#39;luqikun@gagogroup.com&#39;,
  url = &#39;http://www.gagogroup.com&#39;,
  description = &#39;A simple calculation for grass production &#39;,
  packages=find_packages(exclude=[&#39;*.*&#39;]))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;五-将项目进行打包&#34;&gt;五、将项目进行打包&lt;/h4&gt;

&lt;p&gt;　　整个项目是production/module，现在希望对其进行打包，从而能够为他人分享安装.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;、准备好的文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/1512714688155.png&#34; alt=&#34;Alt text&#34; /&gt;
&lt;img src=&#34;https://growing-bison.github.io/img/1512714788732.png&#34; alt=&#34;代码所在&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;、打包整个项目&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-flow&#34;&gt;st=&amp;gt;start: 安装好打包所需的模块，setuptools模块
op1=&amp;gt;operation: 在module下的setup.py文件准备
op2=&amp;gt;operation: 编译:&#39;python setup.py build&#39;
io1=&amp;gt;inputoutput: 在setup.py相同目录下多出build目录
op3=&amp;gt;operation: 打包:&#39;python setup.py sdist&#39;
io2=&amp;gt;inputoutput: 打包后会在setup.py同目录下多出一个disk目录，存放打好的包
io3=&amp;gt;inputoutput: 完成打包
op4=&amp;gt;operation: 部署安装:&#39;python setup.py install&#39;
e=&amp;gt;end: 完成整个项目打包

st-&amp;gt;op1-&amp;gt;op2-&amp;gt;io1-&amp;gt;op3-&amp;gt;io2-&amp;gt;op4-&amp;gt;e

&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;补充的内容：
1. 将代码组织成包,想用import语句从另一个包名没有硬编码过的包的中导入子模块。
&lt;a href=&#34;https://www.kancloud.cn/kancloud/python3-cookbook/47306&#34; target=&#34;_blank&#34;&gt;https://www.kancloud.cn/kancloud/python3-cookbook/47306&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;练习文件链接如下
&lt;a href=&#34;https://growing-bison.github.io/files/module.zip&#34;&gt;modul&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h6 id=&#34;参考文档链接&#34;&gt;参考文档链接&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;: python中自定义包的导入和使用  &lt;a href=&#34;http://blog.csdn.net/maryhuan/article/details/22048763&#34; target=&#34;_blank&#34;&gt;http://blog.csdn.net/maryhuan/article/details/22048763&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;: Python包的编写和使用 &lt;a href=&#34;http://blog.csdn.net/destinyuan/article/details/51704935&#34; target=&#34;_blank&#34;&gt;http://blog.csdn.net/destinyuan/article/details/51704935&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;: python 创建自己的包 &lt;a href=&#34;http://blog.csdn.net/dai_jing/article/details/46005729&#34; target=&#34;_blank&#34;&gt;http://blog.csdn.net/dai_jing/article/details/46005729&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;:  python 打包与部署 &lt;a href=&#34;http://www.cnblogs.com/perfei/p/5139543.html&#34; target=&#34;_blank&#34;&gt;http://www.cnblogs.com/perfei/p/5139543.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;:  &lt;a href=&#34;http://mp.weixin.qq.com/s?src=3&amp;amp;timestamp=1512699606&amp;amp;ver=1&amp;amp;signature=2qvUQsQ6Tzf13kTij4VZ4cULEA7t1XgK8B6Ny*FKurCh00Ks7vfJDeaVlf19Zraxla6fewFCf1twe*MG2MHyuHJ923DZsNUmK-5ZxAp*NGtPKXN-dd7apitMEn7CSN2fcEDOip6ZEyi4Ku0hLXpnmAz7YSG4zWZKUyE6DiHxhfA=&#34; target=&#34;_blank&#34;&gt;这篇文章教会你打包Python程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6&lt;/strong&gt;: &lt;a href=&#34;http://www.jianshu.com/p/085e062e4db0&#34; target=&#34;_blank&#34;&gt;Python编写和发布一个Python CLI工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>数据处理之气象数据</title>
      <link>https://growing-bison.github.io/post/%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 09 Jan 2018 16:16:59 +0800</pubDate>
      
      <guid>https://growing-bison.github.io/post/%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;这是关于气象数据从nc到csv处理结果，并展示的过程。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;一-大体背景介绍&#34;&gt;一、大体背景介绍&lt;/h1&gt;

&lt;p&gt;由于直接观测数据难以覆盖全面，希望能补充部分数据源，现需对开放的再分析数据进行简单分析。
- 提取
需求目标：从某种再分析数据源当中提取全国气象自动监测站点的数据，获取相应站点日数据。
涉及到几个气象要素：日均气温、日降水、日相对湿度、日辐射、日风速、日最大气温、日最小气温等七个要素。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;已有资源及数据情况：&lt;br /&gt;
数据源：格式-nc文件，空间分辨率0.125°的网格，时间分辨率小于24小时，时间跨度10年，总文件大小60G左右&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;处理分析
将再分析数据与观测站的数据进行比较，采用均方根误差RMSE作为指标，以月均值为主要对象，区域范围包括中国。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;二-数据提取-处理&#34;&gt;二、数据提取、处理、&lt;/h1&gt;

&lt;p&gt;提取的前提是对数据源的了解，明确单位、精度、气象要素的正常值范围等。
准备的文件：全国主要观测站点的经纬度坐标，格式csv/txt等。&lt;/p&gt;

&lt;p&gt;大体的流程图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/flow1.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-1-提取的代码块1&#34;&gt;2.1 提取的代码块1&lt;/h1&gt;

&lt;p&gt;简单提取程序脚本如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/py1.PNG&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-2-异常值和缺失值的代码块1&#34;&gt;2.2 异常值和缺失值的代码块1&lt;/h1&gt;

&lt;p&gt;异常与缺失处理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{python}
# find missing value &amp;amp;&amp;amp; put NaN
missing = df.ix[(df[df.columns[7]] == 32766)]
#print(&#39;########temperature missing########&#39;)
for index, row in missing.iterrows():
    #print(row[0], row[4], row[5], row[6], row[7])
    print(index)
df[df == 32766] = np.nan
# get temperature
tmp = df[df.columns[7]] * 0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;2-3-要素转换的代码块1&#34;&gt;2.3 要素转换的代码块1&lt;/h1&gt;

&lt;p&gt;主要是对将辐射转成日照时长。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{python}
def dursun(lat_deg, dt):
    
    t = 24.0/pi*(acos(-tan(lat_rad)*tan(theta)))
    return t

def Ra():

    Ra = 24 * 60 * Gsc * dr * ( (ws * sin(lat_rad) * sin(delta)) + ( cos(lat_rad) * cos(delta) * sin(ws))) / pi
    return Ra

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;2-4-数据提取结果&#34;&gt;2.4 数据提取结果&lt;/h1&gt;

&lt;p&gt;考虑存在csv格式文件，文件数量=7个气象要素×194个站点，大小200多Mb。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/file1.PNG&#34; alt=&#34;再分析数据提取结果&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;三-数据分析&#34;&gt;三、数据分析&lt;/h1&gt;

&lt;p&gt;准备的数据：&lt;br /&gt;
1. 约200个站点的再分析日值数据（即从nc文件中提取出来，并清洗、转换好）；&lt;br /&gt;
2. 约200个站点的观测站日值数据。&lt;br /&gt;
3. 全国观测站点的经纬度坐标信息。&lt;/p&gt;

&lt;p&gt;上述数据均保存在csv文件当中，统一保存的编码格式。&lt;/p&gt;

&lt;p&gt;比较累年月值（12个月），月值（某年某月），累年值（某年）等的再分析数据对比观测站数据的误差情况。&lt;/p&gt;

&lt;p&gt;数据组织与流向如下图：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;源&lt;/th&gt;
&lt;th&gt;要素（温度、湿度等）&lt;/th&gt;
&lt;th&gt;时间分辨率&lt;/th&gt;
&lt;th&gt;文件数量及大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;再分析&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;10年日值&lt;/td&gt;
&lt;td&gt;1300个左右，200-300M&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;观测站&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;10年日值&lt;/td&gt;
&lt;td&gt;194个，100M左右&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;3-1-文件与数据管理&#34;&gt;3.1 文件与数据管理&lt;/h1&gt;

&lt;p&gt;数据组织变化涉及几个步骤，以其中一个要素分析为例说明如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/file_struction.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;3-2-数据分析处理与输出&#34;&gt;3.2 数据分析处理与输出&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{python}

CMA_datasource_dir = &#39;/media/dira/&#39;
station_194_dir = &#39;/media/latlon.csv&#39;
df = pd.read_csv(station_194_dir, header=0, sep=&#39;,&#39;)
star_time = datetime(2004, 1, 1).strftime(&#39;%Y-%m-%d&#39;)
end_time = datetime(2016, 7, 31).strftime(&#39;%Y-%m-%d&#39;)

# 2、读入194个CMA观测数据
val_3 = os.popen(&amp;quot;find /media/dir2 -name &#39;%s*&#39;&amp;quot; \
                 % (stid)).read()
#年份、月份提取
obs_vlu_m = grouped_by_month.mean()
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-4-数据分析处理与输出&#34;&gt;3.4 数据分析处理与输出&lt;/h1&gt;

&lt;p&gt;对应累积年值的计算结果,包含194个站点1-12个月的对应RSEM、相关系数等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/file3.PNG&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;四-数据观测与图表绘制&#34;&gt;四、数据观测与图表绘制&lt;/h1&gt;

&lt;h3 id=&#34;1-观测多个站点在不同时间尺度上的误差分布-误差分布与海拔高度间关系&#34;&gt;1. 观测多个站点在不同时间尺度上的误差分布，误差分布与海拔高度间关系。&lt;/h3&gt;

&lt;h3 id=&#34;2-空间分布上不同站点的情况&#34;&gt;2. 空间分布上不同站点的情况。&lt;/h3&gt;

&lt;h3 id=&#34;准备的数据&#34;&gt;&lt;strong&gt;准备的数据：&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;某个要素的约200个站点的误差及相关系数数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;工具平台：R、GIS、python&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;4-1-简单频次分布图&#34;&gt;4.1 简单频次分布图&lt;/h1&gt;

&lt;p&gt;对数据中的RSME绘制简单的分布图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/Daily_h.png&#34; alt=&#34;简单分布图&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;4-2-时间序列分布图&#34;&gt;4.2 时间序列分布图&lt;/h1&gt;

&lt;p&gt;多个站点的月值图
&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/month_help_value.png&#34; alt=&#34;多个站点累积月值&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;4-3-空间分布图&#34;&gt;4.3 空间分布图&lt;/h1&gt;

&lt;p&gt;在python上简单绘制的结果
&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/map_py.png&#34; alt=&#34;py绘制的map&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;借助GIS绘制的结果
&lt;img src=&#34;https://growing-bison.github.io/img/figure_m2/map_gis.png&#34; alt=&#34;gis绘制的map&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;4-4-简单结论&#34;&gt;4.4 简单结论&lt;/h1&gt;

&lt;p&gt;1.　温度日值、月值的准确性较高，整体上和观测值基本相符，在具体应用时需区分不同地区&lt;/p&gt;

&lt;p&gt;2.　准确性较低的区域原因：
  +  受复杂地形等因素所影响
  +  另一方面可能是观测数据本身站点少、观测质量&lt;/p&gt;

&lt;h1 id=&#34;五-小案例线性回归&#34;&gt;五、小案例线性回归&lt;/h1&gt;

&lt;p&gt;如何在已有数据基础之上，筛除异常值，并得到最终拟合曲线&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Greenhouse gas emissions from dairy open lot and manure stockpile in northern China: A case study</title>
      <link>https://growing-bison.github.io/publication/pubulication1/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://growing-bison.github.io/publication/pubulication1/</guid>
      <description>&lt;p&gt;Further details on the publication can be seen in pdf file.
&lt;img src=&#34;https://www.researchgate.net/profile/Lu_Qikun/publication/295396224/figure/fig1/AS:633804708401153@1528122226348/Layout-of-dairy-farm-and-experimental-section-in-field-measurements-surveyed-open-lots_W640.jpg&#34; alt=&#34;avatar&#34; title=&#34;the layout of the dairy barn&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Effects of configuration and headspace mixing on the accuracy of closed chambers for dairy farm gas emission measurement</title>
      <link>https://growing-bison.github.io/publication/pubulication2/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://growing-bison.github.io/publication/pubulication2/</guid>
      <description>&lt;p&gt;Further details on the publication can be seen in pdf file.
&lt;img src=&#34;https://www.researchgate.net/profile/Luyu_Ding2/publication/281907830/figure/fig1/AS:424145205895168@1478135505327/Schematic-diagram-of-the-non-steady-state-flow-through-chamber-tested-in-this-study.png&#34; alt=&#34;avatar&#34; title=&#34;the layout of the dairy barn&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
